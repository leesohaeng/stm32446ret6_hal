
L432KC_RNG_TEST.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000018c  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000075a4  08000190  08000190  00010190  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000d10  08007738  08007738  00017738  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM          00000008  08008448  08008448  00018448  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .init_array   00000004  08008450  08008450  00018450  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  5 .fini_array   00000004  08008454  08008454  00018454  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  6 .data         00000674  20000000  08008458  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .bss          0000015c  20000674  08008acc  00020674  2**2
                  ALLOC
  8 ._user_heap_stack 00000600  200007d0  08008acc  000207d0  2**0
                  ALLOC
  9 .ARM.attributes 00000030  00000000  00000000  00020674  2**0
                  CONTENTS, READONLY
 10 .debug_info   00010c42  00000000  00000000  000206a4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_abbrev 0000259f  00000000  00000000  000312e6  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00007986  00000000  00000000  00033885  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_aranges 00000bb8  00000000  00000000  0003b210  2**3
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_ranges 00000d48  00000000  00000000  0003bdc8  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_line   00005d00  00000000  00000000  0003cb10  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_str    00004fe0  00000000  00000000  00042810  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .comment      000000ec  00000000  00000000  000477f0  2**0
                  CONTENTS, READONLY
 18 .debug_frame  0000330c  00000000  00000000  000478dc  2**2
                  CONTENTS, READONLY, DEBUGGING
 19 .stab         00000084  00000000  00000000  0004abe8  2**2
                  CONTENTS, READONLY, DEBUGGING
 20 .stabstr      00000117  00000000  00000000  0004ac6c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

08000190 <__do_global_dtors_aux>:
 8000190:	b510      	push	{r4, lr}
 8000192:	4c05      	ldr	r4, [pc, #20]	; (80001a8 <__do_global_dtors_aux+0x18>)
 8000194:	7823      	ldrb	r3, [r4, #0]
 8000196:	b933      	cbnz	r3, 80001a6 <__do_global_dtors_aux+0x16>
 8000198:	4b04      	ldr	r3, [pc, #16]	; (80001ac <__do_global_dtors_aux+0x1c>)
 800019a:	b113      	cbz	r3, 80001a2 <__do_global_dtors_aux+0x12>
 800019c:	4804      	ldr	r0, [pc, #16]	; (80001b0 <__do_global_dtors_aux+0x20>)
 800019e:	f3af 8000 	nop.w
 80001a2:	2301      	movs	r3, #1
 80001a4:	7023      	strb	r3, [r4, #0]
 80001a6:	bd10      	pop	{r4, pc}
 80001a8:	20000674 	.word	0x20000674
 80001ac:	00000000 	.word	0x00000000
 80001b0:	0800771c 	.word	0x0800771c

080001b4 <frame_dummy>:
 80001b4:	b508      	push	{r3, lr}
 80001b6:	4b03      	ldr	r3, [pc, #12]	; (80001c4 <frame_dummy+0x10>)
 80001b8:	b11b      	cbz	r3, 80001c2 <frame_dummy+0xe>
 80001ba:	4903      	ldr	r1, [pc, #12]	; (80001c8 <frame_dummy+0x14>)
 80001bc:	4803      	ldr	r0, [pc, #12]	; (80001cc <frame_dummy+0x18>)
 80001be:	f3af 8000 	nop.w
 80001c2:	bd08      	pop	{r3, pc}
 80001c4:	00000000 	.word	0x00000000
 80001c8:	20000678 	.word	0x20000678
 80001cc:	0800771c 	.word	0x0800771c

080001d0 <strlen>:
 80001d0:	4603      	mov	r3, r0
 80001d2:	f813 2b01 	ldrb.w	r2, [r3], #1
 80001d6:	2a00      	cmp	r2, #0
 80001d8:	d1fb      	bne.n	80001d2 <strlen+0x2>
 80001da:	1a18      	subs	r0, r3, r0
 80001dc:	3801      	subs	r0, #1
 80001de:	4770      	bx	lr

080001e0 <memchr>:
 80001e0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001e4:	2a10      	cmp	r2, #16
 80001e6:	db2b      	blt.n	8000240 <memchr+0x60>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	d008      	beq.n	8000200 <memchr+0x20>
 80001ee:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001f2:	3a01      	subs	r2, #1
 80001f4:	428b      	cmp	r3, r1
 80001f6:	d02d      	beq.n	8000254 <memchr+0x74>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	b342      	cbz	r2, 8000250 <memchr+0x70>
 80001fe:	d1f6      	bne.n	80001ee <memchr+0xe>
 8000200:	b4f0      	push	{r4, r5, r6, r7}
 8000202:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000206:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800020a:	f022 0407 	bic.w	r4, r2, #7
 800020e:	f07f 0700 	mvns.w	r7, #0
 8000212:	2300      	movs	r3, #0
 8000214:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000218:	3c08      	subs	r4, #8
 800021a:	ea85 0501 	eor.w	r5, r5, r1
 800021e:	ea86 0601 	eor.w	r6, r6, r1
 8000222:	fa85 f547 	uadd8	r5, r5, r7
 8000226:	faa3 f587 	sel	r5, r3, r7
 800022a:	fa86 f647 	uadd8	r6, r6, r7
 800022e:	faa5 f687 	sel	r6, r5, r7
 8000232:	b98e      	cbnz	r6, 8000258 <memchr+0x78>
 8000234:	d1ee      	bne.n	8000214 <memchr+0x34>
 8000236:	bcf0      	pop	{r4, r5, r6, r7}
 8000238:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800023c:	f002 0207 	and.w	r2, r2, #7
 8000240:	b132      	cbz	r2, 8000250 <memchr+0x70>
 8000242:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000246:	3a01      	subs	r2, #1
 8000248:	ea83 0301 	eor.w	r3, r3, r1
 800024c:	b113      	cbz	r3, 8000254 <memchr+0x74>
 800024e:	d1f8      	bne.n	8000242 <memchr+0x62>
 8000250:	2000      	movs	r0, #0
 8000252:	4770      	bx	lr
 8000254:	3801      	subs	r0, #1
 8000256:	4770      	bx	lr
 8000258:	2d00      	cmp	r5, #0
 800025a:	bf06      	itte	eq
 800025c:	4635      	moveq	r5, r6
 800025e:	3803      	subeq	r0, #3
 8000260:	3807      	subne	r0, #7
 8000262:	f015 0f01 	tst.w	r5, #1
 8000266:	d107      	bne.n	8000278 <memchr+0x98>
 8000268:	3001      	adds	r0, #1
 800026a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800026e:	bf02      	ittt	eq
 8000270:	3001      	addeq	r0, #1
 8000272:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000276:	3001      	addeq	r0, #1
 8000278:	bcf0      	pop	{r4, r5, r6, r7}
 800027a:	3801      	subs	r0, #1
 800027c:	4770      	bx	lr
 800027e:	bf00      	nop

08000280 <__aeabi_drsub>:
 8000280:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8000284:	e002      	b.n	800028c <__adddf3>
 8000286:	bf00      	nop

08000288 <__aeabi_dsub>:
 8000288:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

0800028c <__adddf3>:
 800028c:	b530      	push	{r4, r5, lr}
 800028e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8000292:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8000296:	ea94 0f05 	teq	r4, r5
 800029a:	bf08      	it	eq
 800029c:	ea90 0f02 	teqeq	r0, r2
 80002a0:	bf1f      	itttt	ne
 80002a2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002a6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002aa:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002ae:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002b2:	f000 80e2 	beq.w	800047a <__adddf3+0x1ee>
 80002b6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002ba:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002be:	bfb8      	it	lt
 80002c0:	426d      	neglt	r5, r5
 80002c2:	dd0c      	ble.n	80002de <__adddf3+0x52>
 80002c4:	442c      	add	r4, r5
 80002c6:	ea80 0202 	eor.w	r2, r0, r2
 80002ca:	ea81 0303 	eor.w	r3, r1, r3
 80002ce:	ea82 0000 	eor.w	r0, r2, r0
 80002d2:	ea83 0101 	eor.w	r1, r3, r1
 80002d6:	ea80 0202 	eor.w	r2, r0, r2
 80002da:	ea81 0303 	eor.w	r3, r1, r3
 80002de:	2d36      	cmp	r5, #54	; 0x36
 80002e0:	bf88      	it	hi
 80002e2:	bd30      	pophi	{r4, r5, pc}
 80002e4:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 80002e8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80002ec:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 80002f0:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 80002f4:	d002      	beq.n	80002fc <__adddf3+0x70>
 80002f6:	4240      	negs	r0, r0
 80002f8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80002fc:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000300:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000304:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000308:	d002      	beq.n	8000310 <__adddf3+0x84>
 800030a:	4252      	negs	r2, r2
 800030c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000310:	ea94 0f05 	teq	r4, r5
 8000314:	f000 80a7 	beq.w	8000466 <__adddf3+0x1da>
 8000318:	f1a4 0401 	sub.w	r4, r4, #1
 800031c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000320:	db0d      	blt.n	800033e <__adddf3+0xb2>
 8000322:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000326:	fa22 f205 	lsr.w	r2, r2, r5
 800032a:	1880      	adds	r0, r0, r2
 800032c:	f141 0100 	adc.w	r1, r1, #0
 8000330:	fa03 f20e 	lsl.w	r2, r3, lr
 8000334:	1880      	adds	r0, r0, r2
 8000336:	fa43 f305 	asr.w	r3, r3, r5
 800033a:	4159      	adcs	r1, r3
 800033c:	e00e      	b.n	800035c <__adddf3+0xd0>
 800033e:	f1a5 0520 	sub.w	r5, r5, #32
 8000342:	f10e 0e20 	add.w	lr, lr, #32
 8000346:	2a01      	cmp	r2, #1
 8000348:	fa03 fc0e 	lsl.w	ip, r3, lr
 800034c:	bf28      	it	cs
 800034e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000352:	fa43 f305 	asr.w	r3, r3, r5
 8000356:	18c0      	adds	r0, r0, r3
 8000358:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800035c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000360:	d507      	bpl.n	8000372 <__adddf3+0xe6>
 8000362:	f04f 0e00 	mov.w	lr, #0
 8000366:	f1dc 0c00 	rsbs	ip, ip, #0
 800036a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800036e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000372:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8000376:	d31b      	bcc.n	80003b0 <__adddf3+0x124>
 8000378:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 800037c:	d30c      	bcc.n	8000398 <__adddf3+0x10c>
 800037e:	0849      	lsrs	r1, r1, #1
 8000380:	ea5f 0030 	movs.w	r0, r0, rrx
 8000384:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000388:	f104 0401 	add.w	r4, r4, #1
 800038c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8000390:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 8000394:	f080 809a 	bcs.w	80004cc <__adddf3+0x240>
 8000398:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 800039c:	bf08      	it	eq
 800039e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003a2:	f150 0000 	adcs.w	r0, r0, #0
 80003a6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003aa:	ea41 0105 	orr.w	r1, r1, r5
 80003ae:	bd30      	pop	{r4, r5, pc}
 80003b0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003b4:	4140      	adcs	r0, r0
 80003b6:	eb41 0101 	adc.w	r1, r1, r1
 80003ba:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80003be:	f1a4 0401 	sub.w	r4, r4, #1
 80003c2:	d1e9      	bne.n	8000398 <__adddf3+0x10c>
 80003c4:	f091 0f00 	teq	r1, #0
 80003c8:	bf04      	itt	eq
 80003ca:	4601      	moveq	r1, r0
 80003cc:	2000      	moveq	r0, #0
 80003ce:	fab1 f381 	clz	r3, r1
 80003d2:	bf08      	it	eq
 80003d4:	3320      	addeq	r3, #32
 80003d6:	f1a3 030b 	sub.w	r3, r3, #11
 80003da:	f1b3 0220 	subs.w	r2, r3, #32
 80003de:	da0c      	bge.n	80003fa <__adddf3+0x16e>
 80003e0:	320c      	adds	r2, #12
 80003e2:	dd08      	ble.n	80003f6 <__adddf3+0x16a>
 80003e4:	f102 0c14 	add.w	ip, r2, #20
 80003e8:	f1c2 020c 	rsb	r2, r2, #12
 80003ec:	fa01 f00c 	lsl.w	r0, r1, ip
 80003f0:	fa21 f102 	lsr.w	r1, r1, r2
 80003f4:	e00c      	b.n	8000410 <__adddf3+0x184>
 80003f6:	f102 0214 	add.w	r2, r2, #20
 80003fa:	bfd8      	it	le
 80003fc:	f1c2 0c20 	rsble	ip, r2, #32
 8000400:	fa01 f102 	lsl.w	r1, r1, r2
 8000404:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000408:	bfdc      	itt	le
 800040a:	ea41 010c 	orrle.w	r1, r1, ip
 800040e:	4090      	lslle	r0, r2
 8000410:	1ae4      	subs	r4, r4, r3
 8000412:	bfa2      	ittt	ge
 8000414:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000418:	4329      	orrge	r1, r5
 800041a:	bd30      	popge	{r4, r5, pc}
 800041c:	ea6f 0404 	mvn.w	r4, r4
 8000420:	3c1f      	subs	r4, #31
 8000422:	da1c      	bge.n	800045e <__adddf3+0x1d2>
 8000424:	340c      	adds	r4, #12
 8000426:	dc0e      	bgt.n	8000446 <__adddf3+0x1ba>
 8000428:	f104 0414 	add.w	r4, r4, #20
 800042c:	f1c4 0220 	rsb	r2, r4, #32
 8000430:	fa20 f004 	lsr.w	r0, r0, r4
 8000434:	fa01 f302 	lsl.w	r3, r1, r2
 8000438:	ea40 0003 	orr.w	r0, r0, r3
 800043c:	fa21 f304 	lsr.w	r3, r1, r4
 8000440:	ea45 0103 	orr.w	r1, r5, r3
 8000444:	bd30      	pop	{r4, r5, pc}
 8000446:	f1c4 040c 	rsb	r4, r4, #12
 800044a:	f1c4 0220 	rsb	r2, r4, #32
 800044e:	fa20 f002 	lsr.w	r0, r0, r2
 8000452:	fa01 f304 	lsl.w	r3, r1, r4
 8000456:	ea40 0003 	orr.w	r0, r0, r3
 800045a:	4629      	mov	r1, r5
 800045c:	bd30      	pop	{r4, r5, pc}
 800045e:	fa21 f004 	lsr.w	r0, r1, r4
 8000462:	4629      	mov	r1, r5
 8000464:	bd30      	pop	{r4, r5, pc}
 8000466:	f094 0f00 	teq	r4, #0
 800046a:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 800046e:	bf06      	itte	eq
 8000470:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000474:	3401      	addeq	r4, #1
 8000476:	3d01      	subne	r5, #1
 8000478:	e74e      	b.n	8000318 <__adddf3+0x8c>
 800047a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800047e:	bf18      	it	ne
 8000480:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000484:	d029      	beq.n	80004da <__adddf3+0x24e>
 8000486:	ea94 0f05 	teq	r4, r5
 800048a:	bf08      	it	eq
 800048c:	ea90 0f02 	teqeq	r0, r2
 8000490:	d005      	beq.n	800049e <__adddf3+0x212>
 8000492:	ea54 0c00 	orrs.w	ip, r4, r0
 8000496:	bf04      	itt	eq
 8000498:	4619      	moveq	r1, r3
 800049a:	4610      	moveq	r0, r2
 800049c:	bd30      	pop	{r4, r5, pc}
 800049e:	ea91 0f03 	teq	r1, r3
 80004a2:	bf1e      	ittt	ne
 80004a4:	2100      	movne	r1, #0
 80004a6:	2000      	movne	r0, #0
 80004a8:	bd30      	popne	{r4, r5, pc}
 80004aa:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004ae:	d105      	bne.n	80004bc <__adddf3+0x230>
 80004b0:	0040      	lsls	r0, r0, #1
 80004b2:	4149      	adcs	r1, r1
 80004b4:	bf28      	it	cs
 80004b6:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80004ba:	bd30      	pop	{r4, r5, pc}
 80004bc:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80004c0:	bf3c      	itt	cc
 80004c2:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 80004c6:	bd30      	popcc	{r4, r5, pc}
 80004c8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80004cc:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 80004d0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80004d4:	f04f 0000 	mov.w	r0, #0
 80004d8:	bd30      	pop	{r4, r5, pc}
 80004da:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004de:	bf1a      	itte	ne
 80004e0:	4619      	movne	r1, r3
 80004e2:	4610      	movne	r0, r2
 80004e4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80004e8:	bf1c      	itt	ne
 80004ea:	460b      	movne	r3, r1
 80004ec:	4602      	movne	r2, r0
 80004ee:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80004f2:	bf06      	itte	eq
 80004f4:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 80004f8:	ea91 0f03 	teqeq	r1, r3
 80004fc:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000500:	bd30      	pop	{r4, r5, pc}
 8000502:	bf00      	nop

08000504 <__aeabi_ui2d>:
 8000504:	f090 0f00 	teq	r0, #0
 8000508:	bf04      	itt	eq
 800050a:	2100      	moveq	r1, #0
 800050c:	4770      	bxeq	lr
 800050e:	b530      	push	{r4, r5, lr}
 8000510:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000514:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000518:	f04f 0500 	mov.w	r5, #0
 800051c:	f04f 0100 	mov.w	r1, #0
 8000520:	e750      	b.n	80003c4 <__adddf3+0x138>
 8000522:	bf00      	nop

08000524 <__aeabi_i2d>:
 8000524:	f090 0f00 	teq	r0, #0
 8000528:	bf04      	itt	eq
 800052a:	2100      	moveq	r1, #0
 800052c:	4770      	bxeq	lr
 800052e:	b530      	push	{r4, r5, lr}
 8000530:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000534:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000538:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800053c:	bf48      	it	mi
 800053e:	4240      	negmi	r0, r0
 8000540:	f04f 0100 	mov.w	r1, #0
 8000544:	e73e      	b.n	80003c4 <__adddf3+0x138>
 8000546:	bf00      	nop

08000548 <__aeabi_f2d>:
 8000548:	0042      	lsls	r2, r0, #1
 800054a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800054e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000552:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000556:	bf1f      	itttt	ne
 8000558:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800055c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000560:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000564:	4770      	bxne	lr
 8000566:	f092 0f00 	teq	r2, #0
 800056a:	bf14      	ite	ne
 800056c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000570:	4770      	bxeq	lr
 8000572:	b530      	push	{r4, r5, lr}
 8000574:	f44f 7460 	mov.w	r4, #896	; 0x380
 8000578:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 800057c:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000580:	e720      	b.n	80003c4 <__adddf3+0x138>
 8000582:	bf00      	nop

08000584 <__aeabi_ul2d>:
 8000584:	ea50 0201 	orrs.w	r2, r0, r1
 8000588:	bf08      	it	eq
 800058a:	4770      	bxeq	lr
 800058c:	b530      	push	{r4, r5, lr}
 800058e:	f04f 0500 	mov.w	r5, #0
 8000592:	e00a      	b.n	80005aa <__aeabi_l2d+0x16>

08000594 <__aeabi_l2d>:
 8000594:	ea50 0201 	orrs.w	r2, r0, r1
 8000598:	bf08      	it	eq
 800059a:	4770      	bxeq	lr
 800059c:	b530      	push	{r4, r5, lr}
 800059e:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80005a2:	d502      	bpl.n	80005aa <__aeabi_l2d+0x16>
 80005a4:	4240      	negs	r0, r0
 80005a6:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005aa:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80005ae:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80005b2:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005b6:	f43f aedc 	beq.w	8000372 <__adddf3+0xe6>
 80005ba:	f04f 0203 	mov.w	r2, #3
 80005be:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005c2:	bf18      	it	ne
 80005c4:	3203      	addne	r2, #3
 80005c6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005ca:	bf18      	it	ne
 80005cc:	3203      	addne	r2, #3
 80005ce:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80005d2:	f1c2 0320 	rsb	r3, r2, #32
 80005d6:	fa00 fc03 	lsl.w	ip, r0, r3
 80005da:	fa20 f002 	lsr.w	r0, r0, r2
 80005de:	fa01 fe03 	lsl.w	lr, r1, r3
 80005e2:	ea40 000e 	orr.w	r0, r0, lr
 80005e6:	fa21 f102 	lsr.w	r1, r1, r2
 80005ea:	4414      	add	r4, r2
 80005ec:	e6c1      	b.n	8000372 <__adddf3+0xe6>
 80005ee:	bf00      	nop

080005f0 <__aeabi_dmul>:
 80005f0:	b570      	push	{r4, r5, r6, lr}
 80005f2:	f04f 0cff 	mov.w	ip, #255	; 0xff
 80005f6:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 80005fa:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 80005fe:	bf1d      	ittte	ne
 8000600:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000604:	ea94 0f0c 	teqne	r4, ip
 8000608:	ea95 0f0c 	teqne	r5, ip
 800060c:	f000 f8de 	bleq	80007cc <__aeabi_dmul+0x1dc>
 8000610:	442c      	add	r4, r5
 8000612:	ea81 0603 	eor.w	r6, r1, r3
 8000616:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 800061a:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 800061e:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 8000622:	bf18      	it	ne
 8000624:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000628:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 800062c:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000630:	d038      	beq.n	80006a4 <__aeabi_dmul+0xb4>
 8000632:	fba0 ce02 	umull	ip, lr, r0, r2
 8000636:	f04f 0500 	mov.w	r5, #0
 800063a:	fbe1 e502 	umlal	lr, r5, r1, r2
 800063e:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 8000642:	fbe0 e503 	umlal	lr, r5, r0, r3
 8000646:	f04f 0600 	mov.w	r6, #0
 800064a:	fbe1 5603 	umlal	r5, r6, r1, r3
 800064e:	f09c 0f00 	teq	ip, #0
 8000652:	bf18      	it	ne
 8000654:	f04e 0e01 	orrne.w	lr, lr, #1
 8000658:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 800065c:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 8000660:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 8000664:	d204      	bcs.n	8000670 <__aeabi_dmul+0x80>
 8000666:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 800066a:	416d      	adcs	r5, r5
 800066c:	eb46 0606 	adc.w	r6, r6, r6
 8000670:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 8000674:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000678:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 800067c:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000680:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 8000684:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 8000688:	bf88      	it	hi
 800068a:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 800068e:	d81e      	bhi.n	80006ce <__aeabi_dmul+0xde>
 8000690:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 8000694:	bf08      	it	eq
 8000696:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 800069a:	f150 0000 	adcs.w	r0, r0, #0
 800069e:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006a2:	bd70      	pop	{r4, r5, r6, pc}
 80006a4:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 80006a8:	ea46 0101 	orr.w	r1, r6, r1
 80006ac:	ea40 0002 	orr.w	r0, r0, r2
 80006b0:	ea81 0103 	eor.w	r1, r1, r3
 80006b4:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80006b8:	bfc2      	ittt	gt
 80006ba:	ebd4 050c 	rsbsgt	r5, r4, ip
 80006be:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80006c2:	bd70      	popgt	{r4, r5, r6, pc}
 80006c4:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80006c8:	f04f 0e00 	mov.w	lr, #0
 80006cc:	3c01      	subs	r4, #1
 80006ce:	f300 80ab 	bgt.w	8000828 <__aeabi_dmul+0x238>
 80006d2:	f114 0f36 	cmn.w	r4, #54	; 0x36
 80006d6:	bfde      	ittt	le
 80006d8:	2000      	movle	r0, #0
 80006da:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 80006de:	bd70      	pople	{r4, r5, r6, pc}
 80006e0:	f1c4 0400 	rsb	r4, r4, #0
 80006e4:	3c20      	subs	r4, #32
 80006e6:	da35      	bge.n	8000754 <__aeabi_dmul+0x164>
 80006e8:	340c      	adds	r4, #12
 80006ea:	dc1b      	bgt.n	8000724 <__aeabi_dmul+0x134>
 80006ec:	f104 0414 	add.w	r4, r4, #20
 80006f0:	f1c4 0520 	rsb	r5, r4, #32
 80006f4:	fa00 f305 	lsl.w	r3, r0, r5
 80006f8:	fa20 f004 	lsr.w	r0, r0, r4
 80006fc:	fa01 f205 	lsl.w	r2, r1, r5
 8000700:	ea40 0002 	orr.w	r0, r0, r2
 8000704:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000708:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 800070c:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000710:	fa21 f604 	lsr.w	r6, r1, r4
 8000714:	eb42 0106 	adc.w	r1, r2, r6
 8000718:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800071c:	bf08      	it	eq
 800071e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000722:	bd70      	pop	{r4, r5, r6, pc}
 8000724:	f1c4 040c 	rsb	r4, r4, #12
 8000728:	f1c4 0520 	rsb	r5, r4, #32
 800072c:	fa00 f304 	lsl.w	r3, r0, r4
 8000730:	fa20 f005 	lsr.w	r0, r0, r5
 8000734:	fa01 f204 	lsl.w	r2, r1, r4
 8000738:	ea40 0002 	orr.w	r0, r0, r2
 800073c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000740:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000744:	f141 0100 	adc.w	r1, r1, #0
 8000748:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800074c:	bf08      	it	eq
 800074e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000752:	bd70      	pop	{r4, r5, r6, pc}
 8000754:	f1c4 0520 	rsb	r5, r4, #32
 8000758:	fa00 f205 	lsl.w	r2, r0, r5
 800075c:	ea4e 0e02 	orr.w	lr, lr, r2
 8000760:	fa20 f304 	lsr.w	r3, r0, r4
 8000764:	fa01 f205 	lsl.w	r2, r1, r5
 8000768:	ea43 0302 	orr.w	r3, r3, r2
 800076c:	fa21 f004 	lsr.w	r0, r1, r4
 8000770:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000774:	fa21 f204 	lsr.w	r2, r1, r4
 8000778:	ea20 0002 	bic.w	r0, r0, r2
 800077c:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000780:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000784:	bf08      	it	eq
 8000786:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800078a:	bd70      	pop	{r4, r5, r6, pc}
 800078c:	f094 0f00 	teq	r4, #0
 8000790:	d10f      	bne.n	80007b2 <__aeabi_dmul+0x1c2>
 8000792:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 8000796:	0040      	lsls	r0, r0, #1
 8000798:	eb41 0101 	adc.w	r1, r1, r1
 800079c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80007a0:	bf08      	it	eq
 80007a2:	3c01      	subeq	r4, #1
 80007a4:	d0f7      	beq.n	8000796 <__aeabi_dmul+0x1a6>
 80007a6:	ea41 0106 	orr.w	r1, r1, r6
 80007aa:	f095 0f00 	teq	r5, #0
 80007ae:	bf18      	it	ne
 80007b0:	4770      	bxne	lr
 80007b2:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 80007b6:	0052      	lsls	r2, r2, #1
 80007b8:	eb43 0303 	adc.w	r3, r3, r3
 80007bc:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 80007c0:	bf08      	it	eq
 80007c2:	3d01      	subeq	r5, #1
 80007c4:	d0f7      	beq.n	80007b6 <__aeabi_dmul+0x1c6>
 80007c6:	ea43 0306 	orr.w	r3, r3, r6
 80007ca:	4770      	bx	lr
 80007cc:	ea94 0f0c 	teq	r4, ip
 80007d0:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80007d4:	bf18      	it	ne
 80007d6:	ea95 0f0c 	teqne	r5, ip
 80007da:	d00c      	beq.n	80007f6 <__aeabi_dmul+0x206>
 80007dc:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80007e0:	bf18      	it	ne
 80007e2:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80007e6:	d1d1      	bne.n	800078c <__aeabi_dmul+0x19c>
 80007e8:	ea81 0103 	eor.w	r1, r1, r3
 80007ec:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80007f0:	f04f 0000 	mov.w	r0, #0
 80007f4:	bd70      	pop	{r4, r5, r6, pc}
 80007f6:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80007fa:	bf06      	itte	eq
 80007fc:	4610      	moveq	r0, r2
 80007fe:	4619      	moveq	r1, r3
 8000800:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000804:	d019      	beq.n	800083a <__aeabi_dmul+0x24a>
 8000806:	ea94 0f0c 	teq	r4, ip
 800080a:	d102      	bne.n	8000812 <__aeabi_dmul+0x222>
 800080c:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000810:	d113      	bne.n	800083a <__aeabi_dmul+0x24a>
 8000812:	ea95 0f0c 	teq	r5, ip
 8000816:	d105      	bne.n	8000824 <__aeabi_dmul+0x234>
 8000818:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 800081c:	bf1c      	itt	ne
 800081e:	4610      	movne	r0, r2
 8000820:	4619      	movne	r1, r3
 8000822:	d10a      	bne.n	800083a <__aeabi_dmul+0x24a>
 8000824:	ea81 0103 	eor.w	r1, r1, r3
 8000828:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800082c:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000830:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8000834:	f04f 0000 	mov.w	r0, #0
 8000838:	bd70      	pop	{r4, r5, r6, pc}
 800083a:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 800083e:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 8000842:	bd70      	pop	{r4, r5, r6, pc}

08000844 <__aeabi_ddiv>:
 8000844:	b570      	push	{r4, r5, r6, lr}
 8000846:	f04f 0cff 	mov.w	ip, #255	; 0xff
 800084a:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 800084e:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000852:	bf1d      	ittte	ne
 8000854:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000858:	ea94 0f0c 	teqne	r4, ip
 800085c:	ea95 0f0c 	teqne	r5, ip
 8000860:	f000 f8a7 	bleq	80009b2 <__aeabi_ddiv+0x16e>
 8000864:	eba4 0405 	sub.w	r4, r4, r5
 8000868:	ea81 0e03 	eor.w	lr, r1, r3
 800086c:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000870:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8000874:	f000 8088 	beq.w	8000988 <__aeabi_ddiv+0x144>
 8000878:	ea4f 3303 	mov.w	r3, r3, lsl #12
 800087c:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 8000880:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 8000884:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8000888:	ea4f 2202 	mov.w	r2, r2, lsl #8
 800088c:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 8000890:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 8000894:	ea4f 2600 	mov.w	r6, r0, lsl #8
 8000898:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 800089c:	429d      	cmp	r5, r3
 800089e:	bf08      	it	eq
 80008a0:	4296      	cmpeq	r6, r2
 80008a2:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 80008a6:	f504 7440 	add.w	r4, r4, #768	; 0x300
 80008aa:	d202      	bcs.n	80008b2 <__aeabi_ddiv+0x6e>
 80008ac:	085b      	lsrs	r3, r3, #1
 80008ae:	ea4f 0232 	mov.w	r2, r2, rrx
 80008b2:	1ab6      	subs	r6, r6, r2
 80008b4:	eb65 0503 	sbc.w	r5, r5, r3
 80008b8:	085b      	lsrs	r3, r3, #1
 80008ba:	ea4f 0232 	mov.w	r2, r2, rrx
 80008be:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 80008c2:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 80008c6:	ebb6 0e02 	subs.w	lr, r6, r2
 80008ca:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008ce:	bf22      	ittt	cs
 80008d0:	1ab6      	subcs	r6, r6, r2
 80008d2:	4675      	movcs	r5, lr
 80008d4:	ea40 000c 	orrcs.w	r0, r0, ip
 80008d8:	085b      	lsrs	r3, r3, #1
 80008da:	ea4f 0232 	mov.w	r2, r2, rrx
 80008de:	ebb6 0e02 	subs.w	lr, r6, r2
 80008e2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008e6:	bf22      	ittt	cs
 80008e8:	1ab6      	subcs	r6, r6, r2
 80008ea:	4675      	movcs	r5, lr
 80008ec:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 80008f0:	085b      	lsrs	r3, r3, #1
 80008f2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008f6:	ebb6 0e02 	subs.w	lr, r6, r2
 80008fa:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008fe:	bf22      	ittt	cs
 8000900:	1ab6      	subcs	r6, r6, r2
 8000902:	4675      	movcs	r5, lr
 8000904:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000908:	085b      	lsrs	r3, r3, #1
 800090a:	ea4f 0232 	mov.w	r2, r2, rrx
 800090e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000912:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000916:	bf22      	ittt	cs
 8000918:	1ab6      	subcs	r6, r6, r2
 800091a:	4675      	movcs	r5, lr
 800091c:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000920:	ea55 0e06 	orrs.w	lr, r5, r6
 8000924:	d018      	beq.n	8000958 <__aeabi_ddiv+0x114>
 8000926:	ea4f 1505 	mov.w	r5, r5, lsl #4
 800092a:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 800092e:	ea4f 1606 	mov.w	r6, r6, lsl #4
 8000932:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 8000936:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 800093a:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 800093e:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 8000942:	d1c0      	bne.n	80008c6 <__aeabi_ddiv+0x82>
 8000944:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000948:	d10b      	bne.n	8000962 <__aeabi_ddiv+0x11e>
 800094a:	ea41 0100 	orr.w	r1, r1, r0
 800094e:	f04f 0000 	mov.w	r0, #0
 8000952:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 8000956:	e7b6      	b.n	80008c6 <__aeabi_ddiv+0x82>
 8000958:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 800095c:	bf04      	itt	eq
 800095e:	4301      	orreq	r1, r0
 8000960:	2000      	moveq	r0, #0
 8000962:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 8000966:	bf88      	it	hi
 8000968:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 800096c:	f63f aeaf 	bhi.w	80006ce <__aeabi_dmul+0xde>
 8000970:	ebb5 0c03 	subs.w	ip, r5, r3
 8000974:	bf04      	itt	eq
 8000976:	ebb6 0c02 	subseq.w	ip, r6, r2
 800097a:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 800097e:	f150 0000 	adcs.w	r0, r0, #0
 8000982:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8000986:	bd70      	pop	{r4, r5, r6, pc}
 8000988:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 800098c:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8000990:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 8000994:	bfc2      	ittt	gt
 8000996:	ebd4 050c 	rsbsgt	r5, r4, ip
 800099a:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 800099e:	bd70      	popgt	{r4, r5, r6, pc}
 80009a0:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80009a4:	f04f 0e00 	mov.w	lr, #0
 80009a8:	3c01      	subs	r4, #1
 80009aa:	e690      	b.n	80006ce <__aeabi_dmul+0xde>
 80009ac:	ea45 0e06 	orr.w	lr, r5, r6
 80009b0:	e68d      	b.n	80006ce <__aeabi_dmul+0xde>
 80009b2:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009b6:	ea94 0f0c 	teq	r4, ip
 80009ba:	bf08      	it	eq
 80009bc:	ea95 0f0c 	teqeq	r5, ip
 80009c0:	f43f af3b 	beq.w	800083a <__aeabi_dmul+0x24a>
 80009c4:	ea94 0f0c 	teq	r4, ip
 80009c8:	d10a      	bne.n	80009e0 <__aeabi_ddiv+0x19c>
 80009ca:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80009ce:	f47f af34 	bne.w	800083a <__aeabi_dmul+0x24a>
 80009d2:	ea95 0f0c 	teq	r5, ip
 80009d6:	f47f af25 	bne.w	8000824 <__aeabi_dmul+0x234>
 80009da:	4610      	mov	r0, r2
 80009dc:	4619      	mov	r1, r3
 80009de:	e72c      	b.n	800083a <__aeabi_dmul+0x24a>
 80009e0:	ea95 0f0c 	teq	r5, ip
 80009e4:	d106      	bne.n	80009f4 <__aeabi_ddiv+0x1b0>
 80009e6:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80009ea:	f43f aefd 	beq.w	80007e8 <__aeabi_dmul+0x1f8>
 80009ee:	4610      	mov	r0, r2
 80009f0:	4619      	mov	r1, r3
 80009f2:	e722      	b.n	800083a <__aeabi_dmul+0x24a>
 80009f4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80009f8:	bf18      	it	ne
 80009fa:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80009fe:	f47f aec5 	bne.w	800078c <__aeabi_dmul+0x19c>
 8000a02:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a06:	f47f af0d 	bne.w	8000824 <__aeabi_dmul+0x234>
 8000a0a:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a0e:	f47f aeeb 	bne.w	80007e8 <__aeabi_dmul+0x1f8>
 8000a12:	e712      	b.n	800083a <__aeabi_dmul+0x24a>

08000a14 <__gedf2>:
 8000a14:	f04f 3cff 	mov.w	ip, #4294967295
 8000a18:	e006      	b.n	8000a28 <__cmpdf2+0x4>
 8000a1a:	bf00      	nop

08000a1c <__ledf2>:
 8000a1c:	f04f 0c01 	mov.w	ip, #1
 8000a20:	e002      	b.n	8000a28 <__cmpdf2+0x4>
 8000a22:	bf00      	nop

08000a24 <__cmpdf2>:
 8000a24:	f04f 0c01 	mov.w	ip, #1
 8000a28:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a2c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a30:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a34:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a38:	bf18      	it	ne
 8000a3a:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a3e:	d01b      	beq.n	8000a78 <__cmpdf2+0x54>
 8000a40:	b001      	add	sp, #4
 8000a42:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a46:	bf0c      	ite	eq
 8000a48:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a4c:	ea91 0f03 	teqne	r1, r3
 8000a50:	bf02      	ittt	eq
 8000a52:	ea90 0f02 	teqeq	r0, r2
 8000a56:	2000      	moveq	r0, #0
 8000a58:	4770      	bxeq	lr
 8000a5a:	f110 0f00 	cmn.w	r0, #0
 8000a5e:	ea91 0f03 	teq	r1, r3
 8000a62:	bf58      	it	pl
 8000a64:	4299      	cmppl	r1, r3
 8000a66:	bf08      	it	eq
 8000a68:	4290      	cmpeq	r0, r2
 8000a6a:	bf2c      	ite	cs
 8000a6c:	17d8      	asrcs	r0, r3, #31
 8000a6e:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000a72:	f040 0001 	orr.w	r0, r0, #1
 8000a76:	4770      	bx	lr
 8000a78:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a7c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a80:	d102      	bne.n	8000a88 <__cmpdf2+0x64>
 8000a82:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a86:	d107      	bne.n	8000a98 <__cmpdf2+0x74>
 8000a88:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a8c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a90:	d1d6      	bne.n	8000a40 <__cmpdf2+0x1c>
 8000a92:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000a96:	d0d3      	beq.n	8000a40 <__cmpdf2+0x1c>
 8000a98:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000a9c:	4770      	bx	lr
 8000a9e:	bf00      	nop

08000aa0 <__aeabi_cdrcmple>:
 8000aa0:	4684      	mov	ip, r0
 8000aa2:	4610      	mov	r0, r2
 8000aa4:	4662      	mov	r2, ip
 8000aa6:	468c      	mov	ip, r1
 8000aa8:	4619      	mov	r1, r3
 8000aaa:	4663      	mov	r3, ip
 8000aac:	e000      	b.n	8000ab0 <__aeabi_cdcmpeq>
 8000aae:	bf00      	nop

08000ab0 <__aeabi_cdcmpeq>:
 8000ab0:	b501      	push	{r0, lr}
 8000ab2:	f7ff ffb7 	bl	8000a24 <__cmpdf2>
 8000ab6:	2800      	cmp	r0, #0
 8000ab8:	bf48      	it	mi
 8000aba:	f110 0f00 	cmnmi.w	r0, #0
 8000abe:	bd01      	pop	{r0, pc}

08000ac0 <__aeabi_dcmpeq>:
 8000ac0:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000ac4:	f7ff fff4 	bl	8000ab0 <__aeabi_cdcmpeq>
 8000ac8:	bf0c      	ite	eq
 8000aca:	2001      	moveq	r0, #1
 8000acc:	2000      	movne	r0, #0
 8000ace:	f85d fb08 	ldr.w	pc, [sp], #8
 8000ad2:	bf00      	nop

08000ad4 <__aeabi_dcmplt>:
 8000ad4:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000ad8:	f7ff ffea 	bl	8000ab0 <__aeabi_cdcmpeq>
 8000adc:	bf34      	ite	cc
 8000ade:	2001      	movcc	r0, #1
 8000ae0:	2000      	movcs	r0, #0
 8000ae2:	f85d fb08 	ldr.w	pc, [sp], #8
 8000ae6:	bf00      	nop

08000ae8 <__aeabi_dcmple>:
 8000ae8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000aec:	f7ff ffe0 	bl	8000ab0 <__aeabi_cdcmpeq>
 8000af0:	bf94      	ite	ls
 8000af2:	2001      	movls	r0, #1
 8000af4:	2000      	movhi	r0, #0
 8000af6:	f85d fb08 	ldr.w	pc, [sp], #8
 8000afa:	bf00      	nop

08000afc <__aeabi_dcmpge>:
 8000afc:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b00:	f7ff ffce 	bl	8000aa0 <__aeabi_cdrcmple>
 8000b04:	bf94      	ite	ls
 8000b06:	2001      	movls	r0, #1
 8000b08:	2000      	movhi	r0, #0
 8000b0a:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b0e:	bf00      	nop

08000b10 <__aeabi_dcmpgt>:
 8000b10:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b14:	f7ff ffc4 	bl	8000aa0 <__aeabi_cdrcmple>
 8000b18:	bf34      	ite	cc
 8000b1a:	2001      	movcc	r0, #1
 8000b1c:	2000      	movcs	r0, #0
 8000b1e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b22:	bf00      	nop

08000b24 <__aeabi_dcmpun>:
 8000b24:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b28:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b2c:	d102      	bne.n	8000b34 <__aeabi_dcmpun+0x10>
 8000b2e:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b32:	d10a      	bne.n	8000b4a <__aeabi_dcmpun+0x26>
 8000b34:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b38:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b3c:	d102      	bne.n	8000b44 <__aeabi_dcmpun+0x20>
 8000b3e:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b42:	d102      	bne.n	8000b4a <__aeabi_dcmpun+0x26>
 8000b44:	f04f 0000 	mov.w	r0, #0
 8000b48:	4770      	bx	lr
 8000b4a:	f04f 0001 	mov.w	r0, #1
 8000b4e:	4770      	bx	lr

08000b50 <__aeabi_d2iz>:
 8000b50:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b54:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000b58:	d215      	bcs.n	8000b86 <__aeabi_d2iz+0x36>
 8000b5a:	d511      	bpl.n	8000b80 <__aeabi_d2iz+0x30>
 8000b5c:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000b60:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000b64:	d912      	bls.n	8000b8c <__aeabi_d2iz+0x3c>
 8000b66:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b6a:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000b6e:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000b72:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000b76:	fa23 f002 	lsr.w	r0, r3, r2
 8000b7a:	bf18      	it	ne
 8000b7c:	4240      	negne	r0, r0
 8000b7e:	4770      	bx	lr
 8000b80:	f04f 0000 	mov.w	r0, #0
 8000b84:	4770      	bx	lr
 8000b86:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000b8a:	d105      	bne.n	8000b98 <__aeabi_d2iz+0x48>
 8000b8c:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000b90:	bf08      	it	eq
 8000b92:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000b96:	4770      	bx	lr
 8000b98:	f04f 0000 	mov.w	r0, #0
 8000b9c:	4770      	bx	lr
 8000b9e:	bf00      	nop

08000ba0 <__aeabi_d2f>:
 8000ba0:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000ba4:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8000ba8:	bf24      	itt	cs
 8000baa:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 8000bae:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 8000bb2:	d90d      	bls.n	8000bd0 <__aeabi_d2f+0x30>
 8000bb4:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000bb8:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000bbc:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000bc0:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8000bc4:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000bc8:	bf08      	it	eq
 8000bca:	f020 0001 	biceq.w	r0, r0, #1
 8000bce:	4770      	bx	lr
 8000bd0:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8000bd4:	d121      	bne.n	8000c1a <__aeabi_d2f+0x7a>
 8000bd6:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8000bda:	bfbc      	itt	lt
 8000bdc:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 8000be0:	4770      	bxlt	lr
 8000be2:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000be6:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000bea:	f1c2 0218 	rsb	r2, r2, #24
 8000bee:	f1c2 0c20 	rsb	ip, r2, #32
 8000bf2:	fa10 f30c 	lsls.w	r3, r0, ip
 8000bf6:	fa20 f002 	lsr.w	r0, r0, r2
 8000bfa:	bf18      	it	ne
 8000bfc:	f040 0001 	orrne.w	r0, r0, #1
 8000c00:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000c04:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000c08:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000c0c:	ea40 000c 	orr.w	r0, r0, ip
 8000c10:	fa23 f302 	lsr.w	r3, r3, r2
 8000c14:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000c18:	e7cc      	b.n	8000bb4 <__aeabi_d2f+0x14>
 8000c1a:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000c1e:	d107      	bne.n	8000c30 <__aeabi_d2f+0x90>
 8000c20:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000c24:	bf1e      	ittt	ne
 8000c26:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 8000c2a:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 8000c2e:	4770      	bxne	lr
 8000c30:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 8000c34:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000c38:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000c3c:	4770      	bx	lr
 8000c3e:	bf00      	nop

08000c40 <__aeabi_uldivmod>:
 8000c40:	b953      	cbnz	r3, 8000c58 <__aeabi_uldivmod+0x18>
 8000c42:	b94a      	cbnz	r2, 8000c58 <__aeabi_uldivmod+0x18>
 8000c44:	2900      	cmp	r1, #0
 8000c46:	bf08      	it	eq
 8000c48:	2800      	cmpeq	r0, #0
 8000c4a:	bf1c      	itt	ne
 8000c4c:	f04f 31ff 	movne.w	r1, #4294967295
 8000c50:	f04f 30ff 	movne.w	r0, #4294967295
 8000c54:	f000 b97a 	b.w	8000f4c <__aeabi_idiv0>
 8000c58:	f1ad 0c08 	sub.w	ip, sp, #8
 8000c5c:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000c60:	f000 f806 	bl	8000c70 <__udivmoddi4>
 8000c64:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000c68:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000c6c:	b004      	add	sp, #16
 8000c6e:	4770      	bx	lr

08000c70 <__udivmoddi4>:
 8000c70:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000c74:	468c      	mov	ip, r1
 8000c76:	460d      	mov	r5, r1
 8000c78:	4604      	mov	r4, r0
 8000c7a:	9e08      	ldr	r6, [sp, #32]
 8000c7c:	2b00      	cmp	r3, #0
 8000c7e:	d151      	bne.n	8000d24 <__udivmoddi4+0xb4>
 8000c80:	428a      	cmp	r2, r1
 8000c82:	4617      	mov	r7, r2
 8000c84:	d96d      	bls.n	8000d62 <__udivmoddi4+0xf2>
 8000c86:	fab2 fe82 	clz	lr, r2
 8000c8a:	f1be 0f00 	cmp.w	lr, #0
 8000c8e:	d00b      	beq.n	8000ca8 <__udivmoddi4+0x38>
 8000c90:	f1ce 0c20 	rsb	ip, lr, #32
 8000c94:	fa01 f50e 	lsl.w	r5, r1, lr
 8000c98:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000c9c:	fa02 f70e 	lsl.w	r7, r2, lr
 8000ca0:	ea4c 0c05 	orr.w	ip, ip, r5
 8000ca4:	fa00 f40e 	lsl.w	r4, r0, lr
 8000ca8:	ea4f 4a17 	mov.w	sl, r7, lsr #16
 8000cac:	0c25      	lsrs	r5, r4, #16
 8000cae:	fbbc f8fa 	udiv	r8, ip, sl
 8000cb2:	fa1f f987 	uxth.w	r9, r7
 8000cb6:	fb0a cc18 	mls	ip, sl, r8, ip
 8000cba:	ea45 450c 	orr.w	r5, r5, ip, lsl #16
 8000cbe:	fb08 f309 	mul.w	r3, r8, r9
 8000cc2:	42ab      	cmp	r3, r5
 8000cc4:	d90a      	bls.n	8000cdc <__udivmoddi4+0x6c>
 8000cc6:	19ed      	adds	r5, r5, r7
 8000cc8:	f108 32ff 	add.w	r2, r8, #4294967295
 8000ccc:	f080 8123 	bcs.w	8000f16 <__udivmoddi4+0x2a6>
 8000cd0:	42ab      	cmp	r3, r5
 8000cd2:	f240 8120 	bls.w	8000f16 <__udivmoddi4+0x2a6>
 8000cd6:	f1a8 0802 	sub.w	r8, r8, #2
 8000cda:	443d      	add	r5, r7
 8000cdc:	1aed      	subs	r5, r5, r3
 8000cde:	b2a4      	uxth	r4, r4
 8000ce0:	fbb5 f0fa 	udiv	r0, r5, sl
 8000ce4:	fb0a 5510 	mls	r5, sl, r0, r5
 8000ce8:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
 8000cec:	fb00 f909 	mul.w	r9, r0, r9
 8000cf0:	45a1      	cmp	r9, r4
 8000cf2:	d909      	bls.n	8000d08 <__udivmoddi4+0x98>
 8000cf4:	19e4      	adds	r4, r4, r7
 8000cf6:	f100 33ff 	add.w	r3, r0, #4294967295
 8000cfa:	f080 810a 	bcs.w	8000f12 <__udivmoddi4+0x2a2>
 8000cfe:	45a1      	cmp	r9, r4
 8000d00:	f240 8107 	bls.w	8000f12 <__udivmoddi4+0x2a2>
 8000d04:	3802      	subs	r0, #2
 8000d06:	443c      	add	r4, r7
 8000d08:	eba4 0409 	sub.w	r4, r4, r9
 8000d0c:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
 8000d10:	2100      	movs	r1, #0
 8000d12:	2e00      	cmp	r6, #0
 8000d14:	d061      	beq.n	8000dda <__udivmoddi4+0x16a>
 8000d16:	fa24 f40e 	lsr.w	r4, r4, lr
 8000d1a:	2300      	movs	r3, #0
 8000d1c:	6034      	str	r4, [r6, #0]
 8000d1e:	6073      	str	r3, [r6, #4]
 8000d20:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000d24:	428b      	cmp	r3, r1
 8000d26:	d907      	bls.n	8000d38 <__udivmoddi4+0xc8>
 8000d28:	2e00      	cmp	r6, #0
 8000d2a:	d054      	beq.n	8000dd6 <__udivmoddi4+0x166>
 8000d2c:	2100      	movs	r1, #0
 8000d2e:	e886 0021 	stmia.w	r6, {r0, r5}
 8000d32:	4608      	mov	r0, r1
 8000d34:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000d38:	fab3 f183 	clz	r1, r3
 8000d3c:	2900      	cmp	r1, #0
 8000d3e:	f040 808e 	bne.w	8000e5e <__udivmoddi4+0x1ee>
 8000d42:	42ab      	cmp	r3, r5
 8000d44:	d302      	bcc.n	8000d4c <__udivmoddi4+0xdc>
 8000d46:	4282      	cmp	r2, r0
 8000d48:	f200 80fa 	bhi.w	8000f40 <__udivmoddi4+0x2d0>
 8000d4c:	1a84      	subs	r4, r0, r2
 8000d4e:	eb65 0503 	sbc.w	r5, r5, r3
 8000d52:	2001      	movs	r0, #1
 8000d54:	46ac      	mov	ip, r5
 8000d56:	2e00      	cmp	r6, #0
 8000d58:	d03f      	beq.n	8000dda <__udivmoddi4+0x16a>
 8000d5a:	e886 1010 	stmia.w	r6, {r4, ip}
 8000d5e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000d62:	b912      	cbnz	r2, 8000d6a <__udivmoddi4+0xfa>
 8000d64:	2701      	movs	r7, #1
 8000d66:	fbb7 f7f2 	udiv	r7, r7, r2
 8000d6a:	fab7 fe87 	clz	lr, r7
 8000d6e:	f1be 0f00 	cmp.w	lr, #0
 8000d72:	d134      	bne.n	8000dde <__udivmoddi4+0x16e>
 8000d74:	1beb      	subs	r3, r5, r7
 8000d76:	0c3a      	lsrs	r2, r7, #16
 8000d78:	fa1f fc87 	uxth.w	ip, r7
 8000d7c:	2101      	movs	r1, #1
 8000d7e:	fbb3 f8f2 	udiv	r8, r3, r2
 8000d82:	0c25      	lsrs	r5, r4, #16
 8000d84:	fb02 3318 	mls	r3, r2, r8, r3
 8000d88:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
 8000d8c:	fb0c f308 	mul.w	r3, ip, r8
 8000d90:	42ab      	cmp	r3, r5
 8000d92:	d907      	bls.n	8000da4 <__udivmoddi4+0x134>
 8000d94:	19ed      	adds	r5, r5, r7
 8000d96:	f108 30ff 	add.w	r0, r8, #4294967295
 8000d9a:	d202      	bcs.n	8000da2 <__udivmoddi4+0x132>
 8000d9c:	42ab      	cmp	r3, r5
 8000d9e:	f200 80d1 	bhi.w	8000f44 <__udivmoddi4+0x2d4>
 8000da2:	4680      	mov	r8, r0
 8000da4:	1aed      	subs	r5, r5, r3
 8000da6:	b2a3      	uxth	r3, r4
 8000da8:	fbb5 f0f2 	udiv	r0, r5, r2
 8000dac:	fb02 5510 	mls	r5, r2, r0, r5
 8000db0:	ea43 4405 	orr.w	r4, r3, r5, lsl #16
 8000db4:	fb0c fc00 	mul.w	ip, ip, r0
 8000db8:	45a4      	cmp	ip, r4
 8000dba:	d907      	bls.n	8000dcc <__udivmoddi4+0x15c>
 8000dbc:	19e4      	adds	r4, r4, r7
 8000dbe:	f100 33ff 	add.w	r3, r0, #4294967295
 8000dc2:	d202      	bcs.n	8000dca <__udivmoddi4+0x15a>
 8000dc4:	45a4      	cmp	ip, r4
 8000dc6:	f200 80b8 	bhi.w	8000f3a <__udivmoddi4+0x2ca>
 8000dca:	4618      	mov	r0, r3
 8000dcc:	eba4 040c 	sub.w	r4, r4, ip
 8000dd0:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
 8000dd4:	e79d      	b.n	8000d12 <__udivmoddi4+0xa2>
 8000dd6:	4631      	mov	r1, r6
 8000dd8:	4630      	mov	r0, r6
 8000dda:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000dde:	f1ce 0420 	rsb	r4, lr, #32
 8000de2:	fa05 f30e 	lsl.w	r3, r5, lr
 8000de6:	fa07 f70e 	lsl.w	r7, r7, lr
 8000dea:	fa20 f804 	lsr.w	r8, r0, r4
 8000dee:	0c3a      	lsrs	r2, r7, #16
 8000df0:	fa25 f404 	lsr.w	r4, r5, r4
 8000df4:	ea48 0803 	orr.w	r8, r8, r3
 8000df8:	fbb4 f1f2 	udiv	r1, r4, r2
 8000dfc:	ea4f 4518 	mov.w	r5, r8, lsr #16
 8000e00:	fb02 4411 	mls	r4, r2, r1, r4
 8000e04:	fa1f fc87 	uxth.w	ip, r7
 8000e08:	ea45 4504 	orr.w	r5, r5, r4, lsl #16
 8000e0c:	fb01 f30c 	mul.w	r3, r1, ip
 8000e10:	42ab      	cmp	r3, r5
 8000e12:	fa00 f40e 	lsl.w	r4, r0, lr
 8000e16:	d909      	bls.n	8000e2c <__udivmoddi4+0x1bc>
 8000e18:	19ed      	adds	r5, r5, r7
 8000e1a:	f101 30ff 	add.w	r0, r1, #4294967295
 8000e1e:	f080 808a 	bcs.w	8000f36 <__udivmoddi4+0x2c6>
 8000e22:	42ab      	cmp	r3, r5
 8000e24:	f240 8087 	bls.w	8000f36 <__udivmoddi4+0x2c6>
 8000e28:	3902      	subs	r1, #2
 8000e2a:	443d      	add	r5, r7
 8000e2c:	1aeb      	subs	r3, r5, r3
 8000e2e:	fa1f f588 	uxth.w	r5, r8
 8000e32:	fbb3 f0f2 	udiv	r0, r3, r2
 8000e36:	fb02 3310 	mls	r3, r2, r0, r3
 8000e3a:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
 8000e3e:	fb00 f30c 	mul.w	r3, r0, ip
 8000e42:	42ab      	cmp	r3, r5
 8000e44:	d907      	bls.n	8000e56 <__udivmoddi4+0x1e6>
 8000e46:	19ed      	adds	r5, r5, r7
 8000e48:	f100 38ff 	add.w	r8, r0, #4294967295
 8000e4c:	d26f      	bcs.n	8000f2e <__udivmoddi4+0x2be>
 8000e4e:	42ab      	cmp	r3, r5
 8000e50:	d96d      	bls.n	8000f2e <__udivmoddi4+0x2be>
 8000e52:	3802      	subs	r0, #2
 8000e54:	443d      	add	r5, r7
 8000e56:	1aeb      	subs	r3, r5, r3
 8000e58:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8000e5c:	e78f      	b.n	8000d7e <__udivmoddi4+0x10e>
 8000e5e:	f1c1 0720 	rsb	r7, r1, #32
 8000e62:	fa22 f807 	lsr.w	r8, r2, r7
 8000e66:	408b      	lsls	r3, r1
 8000e68:	fa05 f401 	lsl.w	r4, r5, r1
 8000e6c:	ea48 0303 	orr.w	r3, r8, r3
 8000e70:	fa20 fe07 	lsr.w	lr, r0, r7
 8000e74:	ea4f 4c13 	mov.w	ip, r3, lsr #16
 8000e78:	40fd      	lsrs	r5, r7
 8000e7a:	ea4e 0e04 	orr.w	lr, lr, r4
 8000e7e:	fbb5 f9fc 	udiv	r9, r5, ip
 8000e82:	ea4f 441e 	mov.w	r4, lr, lsr #16
 8000e86:	fb0c 5519 	mls	r5, ip, r9, r5
 8000e8a:	fa1f f883 	uxth.w	r8, r3
 8000e8e:	ea44 4505 	orr.w	r5, r4, r5, lsl #16
 8000e92:	fb09 f408 	mul.w	r4, r9, r8
 8000e96:	42ac      	cmp	r4, r5
 8000e98:	fa02 f201 	lsl.w	r2, r2, r1
 8000e9c:	fa00 fa01 	lsl.w	sl, r0, r1
 8000ea0:	d908      	bls.n	8000eb4 <__udivmoddi4+0x244>
 8000ea2:	18ed      	adds	r5, r5, r3
 8000ea4:	f109 30ff 	add.w	r0, r9, #4294967295
 8000ea8:	d243      	bcs.n	8000f32 <__udivmoddi4+0x2c2>
 8000eaa:	42ac      	cmp	r4, r5
 8000eac:	d941      	bls.n	8000f32 <__udivmoddi4+0x2c2>
 8000eae:	f1a9 0902 	sub.w	r9, r9, #2
 8000eb2:	441d      	add	r5, r3
 8000eb4:	1b2d      	subs	r5, r5, r4
 8000eb6:	fa1f fe8e 	uxth.w	lr, lr
 8000eba:	fbb5 f0fc 	udiv	r0, r5, ip
 8000ebe:	fb0c 5510 	mls	r5, ip, r0, r5
 8000ec2:	ea4e 4405 	orr.w	r4, lr, r5, lsl #16
 8000ec6:	fb00 f808 	mul.w	r8, r0, r8
 8000eca:	45a0      	cmp	r8, r4
 8000ecc:	d907      	bls.n	8000ede <__udivmoddi4+0x26e>
 8000ece:	18e4      	adds	r4, r4, r3
 8000ed0:	f100 35ff 	add.w	r5, r0, #4294967295
 8000ed4:	d229      	bcs.n	8000f2a <__udivmoddi4+0x2ba>
 8000ed6:	45a0      	cmp	r8, r4
 8000ed8:	d927      	bls.n	8000f2a <__udivmoddi4+0x2ba>
 8000eda:	3802      	subs	r0, #2
 8000edc:	441c      	add	r4, r3
 8000ede:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
 8000ee2:	eba4 0408 	sub.w	r4, r4, r8
 8000ee6:	fba0 8902 	umull	r8, r9, r0, r2
 8000eea:	454c      	cmp	r4, r9
 8000eec:	46c6      	mov	lr, r8
 8000eee:	464d      	mov	r5, r9
 8000ef0:	d315      	bcc.n	8000f1e <__udivmoddi4+0x2ae>
 8000ef2:	d012      	beq.n	8000f1a <__udivmoddi4+0x2aa>
 8000ef4:	b156      	cbz	r6, 8000f0c <__udivmoddi4+0x29c>
 8000ef6:	ebba 030e 	subs.w	r3, sl, lr
 8000efa:	eb64 0405 	sbc.w	r4, r4, r5
 8000efe:	fa04 f707 	lsl.w	r7, r4, r7
 8000f02:	40cb      	lsrs	r3, r1
 8000f04:	431f      	orrs	r7, r3
 8000f06:	40cc      	lsrs	r4, r1
 8000f08:	6037      	str	r7, [r6, #0]
 8000f0a:	6074      	str	r4, [r6, #4]
 8000f0c:	2100      	movs	r1, #0
 8000f0e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000f12:	4618      	mov	r0, r3
 8000f14:	e6f8      	b.n	8000d08 <__udivmoddi4+0x98>
 8000f16:	4690      	mov	r8, r2
 8000f18:	e6e0      	b.n	8000cdc <__udivmoddi4+0x6c>
 8000f1a:	45c2      	cmp	sl, r8
 8000f1c:	d2ea      	bcs.n	8000ef4 <__udivmoddi4+0x284>
 8000f1e:	ebb8 0e02 	subs.w	lr, r8, r2
 8000f22:	eb69 0503 	sbc.w	r5, r9, r3
 8000f26:	3801      	subs	r0, #1
 8000f28:	e7e4      	b.n	8000ef4 <__udivmoddi4+0x284>
 8000f2a:	4628      	mov	r0, r5
 8000f2c:	e7d7      	b.n	8000ede <__udivmoddi4+0x26e>
 8000f2e:	4640      	mov	r0, r8
 8000f30:	e791      	b.n	8000e56 <__udivmoddi4+0x1e6>
 8000f32:	4681      	mov	r9, r0
 8000f34:	e7be      	b.n	8000eb4 <__udivmoddi4+0x244>
 8000f36:	4601      	mov	r1, r0
 8000f38:	e778      	b.n	8000e2c <__udivmoddi4+0x1bc>
 8000f3a:	3802      	subs	r0, #2
 8000f3c:	443c      	add	r4, r7
 8000f3e:	e745      	b.n	8000dcc <__udivmoddi4+0x15c>
 8000f40:	4608      	mov	r0, r1
 8000f42:	e708      	b.n	8000d56 <__udivmoddi4+0xe6>
 8000f44:	f1a8 0802 	sub.w	r8, r8, #2
 8000f48:	443d      	add	r5, r7
 8000f4a:	e72b      	b.n	8000da4 <__udivmoddi4+0x134>

08000f4c <__aeabi_idiv0>:
 8000f4c:	4770      	bx	lr
 8000f4e:	bf00      	nop

08000f50 <HAL_InitTick>:
  *       implementation  in user file.
  * @param TickPriority  Tick interrupt priority.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8000f50:	b538      	push	{r3, r4, r5, lr}
  HAL_StatusTypeDef  status = HAL_OK;

  /*Configure the SysTick to have interrupt in 1ms time basis*/
  if (HAL_SYSTICK_Config(SystemCoreClock/1000UL) != 0U)
 8000f52:	4b0a      	ldr	r3, [pc, #40]	; (8000f7c <HAL_InitTick+0x2c>)
{
 8000f54:	4605      	mov	r5, r0
  if (HAL_SYSTICK_Config(SystemCoreClock/1000UL) != 0U)
 8000f56:	6818      	ldr	r0, [r3, #0]
 8000f58:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8000f5c:	fbb0 f0f3 	udiv	r0, r0, r3
 8000f60:	f000 f88c 	bl	800107c <HAL_SYSTICK_Config>
 8000f64:	4604      	mov	r4, r0
 8000f66:	b938      	cbnz	r0, 8000f78 <HAL_InitTick+0x28>
    status = HAL_ERROR;
  }
  else
  {
    /*Configure the SysTick IRQ priority */
    HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0);
 8000f68:	4602      	mov	r2, r0
 8000f6a:	4629      	mov	r1, r5
 8000f6c:	f04f 30ff 	mov.w	r0, #4294967295
 8000f70:	f000 f844 	bl	8000ffc <HAL_NVIC_SetPriority>
 8000f74:	4620      	mov	r0, r4
 8000f76:	bd38      	pop	{r3, r4, r5, pc}
    status = HAL_ERROR;
 8000f78:	2001      	movs	r0, #1
  }

  /* Return function status */
  return status;
}
 8000f7a:	bd38      	pop	{r3, r4, r5, pc}
 8000f7c:	20000000 	.word	0x20000000

08000f80 <HAL_Init>:
{
 8000f80:	b510      	push	{r4, lr}
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8000f82:	2003      	movs	r0, #3
 8000f84:	f000 f828 	bl	8000fd8 <HAL_NVIC_SetPriorityGrouping>
  if (HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
 8000f88:	2000      	movs	r0, #0
 8000f8a:	f7ff ffe1 	bl	8000f50 <HAL_InitTick>
 8000f8e:	4604      	mov	r4, r0
 8000f90:	b918      	cbnz	r0, 8000f9a <HAL_Init+0x1a>
    HAL_MspInit();
 8000f92:	f001 fc89 	bl	80028a8 <HAL_MspInit>
}
 8000f96:	4620      	mov	r0, r4
 8000f98:	bd10      	pop	{r4, pc}
    status = HAL_ERROR;
 8000f9a:	2401      	movs	r4, #1
 8000f9c:	e7fb      	b.n	8000f96 <HAL_Init+0x16>
	...

08000fa0 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick++;
 8000fa0:	4a02      	ldr	r2, [pc, #8]	; (8000fac <HAL_IncTick+0xc>)
 8000fa2:	6813      	ldr	r3, [r2, #0]
 8000fa4:	3301      	adds	r3, #1
 8000fa6:	6013      	str	r3, [r2, #0]
 8000fa8:	4770      	bx	lr
 8000faa:	bf00      	nop
 8000fac:	200006d0 	.word	0x200006d0

08000fb0 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 8000fb0:	4b01      	ldr	r3, [pc, #4]	; (8000fb8 <HAL_GetTick+0x8>)
 8000fb2:	6818      	ldr	r0, [r3, #0]
}
 8000fb4:	4770      	bx	lr
 8000fb6:	bf00      	nop
 8000fb8:	200006d0 	.word	0x200006d0

08000fbc <HAL_Delay>:
  *       implementations in user file.
  * @param Delay  specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8000fbc:	b538      	push	{r3, r4, r5, lr}
 8000fbe:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8000fc0:	f7ff fff6 	bl	8000fb0 <HAL_GetTick>
  uint32_t wait = Delay;

  /* Add a period to guaranty minimum wait */
  if (wait < HAL_MAX_DELAY)
 8000fc4:	1c63      	adds	r3, r4, #1
  uint32_t tickstart = HAL_GetTick();
 8000fc6:	4605      	mov	r5, r0
  {
    wait++;
 8000fc8:	bf18      	it	ne
 8000fca:	3401      	addne	r4, #1
  }

  while((HAL_GetTick() - tickstart) < wait)
 8000fcc:	f7ff fff0 	bl	8000fb0 <HAL_GetTick>
 8000fd0:	1b40      	subs	r0, r0, r5
 8000fd2:	4284      	cmp	r4, r0
 8000fd4:	d8fa      	bhi.n	8000fcc <HAL_Delay+0x10>
  {
  }
}
 8000fd6:	bd38      	pop	{r3, r4, r5, pc}

08000fd8 <HAL_NVIC_SetPriorityGrouping>:
__STATIC_INLINE void NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
  uint32_t reg_value;
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 are used          */

  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8000fd8:	4a07      	ldr	r2, [pc, #28]	; (8000ff8 <HAL_NVIC_SetPriorityGrouping+0x20>)
 8000fda:	68d3      	ldr	r3, [r2, #12]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8000fdc:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 8000fe0:	041b      	lsls	r3, r3, #16
 8000fe2:	0c1b      	lsrs	r3, r3, #16
 8000fe4:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
  reg_value  =  (reg_value                                   |
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
                (PriorityGroupTmp << 8U)                      );              /* Insert write key and priorty group */
 8000fe8:	0200      	lsls	r0, r0, #8
 8000fea:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8000fee:	f400 60e0 	and.w	r0, r0, #1792	; 0x700
  reg_value  =  (reg_value                                   |
 8000ff2:	4303      	orrs	r3, r0
  SCB->AIRCR =  reg_value;
 8000ff4:	60d3      	str	r3, [r2, #12]
 8000ff6:	4770      	bx	lr
 8000ff8:	e000ed00 	.word	0xe000ed00

08000ffc <HAL_NVIC_SetPriority>:
  \details Reads the priority grouping field from the NVIC Interrupt Controller.
  \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
 */
__STATIC_INLINE uint32_t NVIC_GetPriorityGrouping(void)
{
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8000ffc:	4b17      	ldr	r3, [pc, #92]	; (800105c <HAL_NVIC_SetPriority+0x60>)
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{
 8000ffe:	b530      	push	{r4, r5, lr}
 8001000:	68dc      	ldr	r4, [r3, #12]
 8001002:	f3c4 2402 	ubfx	r4, r4, #8, #3
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8001006:	f1c4 0307 	rsb	r3, r4, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800100a:	1d25      	adds	r5, r4, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 800100c:	2b04      	cmp	r3, #4
 800100e:	bf28      	it	cs
 8001010:	2304      	movcs	r3, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8001012:	2d06      	cmp	r5, #6

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8001014:	f04f 0501 	mov.w	r5, #1
 8001018:	fa05 f303 	lsl.w	r3, r5, r3
 800101c:	f103 33ff 	add.w	r3, r3, #4294967295
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8001020:	bf8c      	ite	hi
 8001022:	3c03      	subhi	r4, #3
 8001024:	2400      	movls	r4, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8001026:	4019      	ands	r1, r3
 8001028:	40a1      	lsls	r1, r4
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 800102a:	fa05 f404 	lsl.w	r4, r5, r4
 800102e:	3c01      	subs	r4, #1
 8001030:	4022      	ands	r2, r4
  if ((int32_t)(IRQn) < 0)
 8001032:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8001034:	ea42 0201 	orr.w	r2, r2, r1
 8001038:	ea4f 1202 	mov.w	r2, r2, lsl #4
    NVIC->IP[((uint32_t)(int32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800103c:	bfaf      	iteee	ge
 800103e:	f100 4060 	addge.w	r0, r0, #3758096384	; 0xe0000000
    SCB->SHP[(((uint32_t)(int32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001042:	f000 000f 	andlt.w	r0, r0, #15
 8001046:	4b06      	ldrlt	r3, [pc, #24]	; (8001060 <HAL_NVIC_SetPriority+0x64>)
 8001048:	b2d2      	uxtblt	r2, r2
    NVIC->IP[((uint32_t)(int32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800104a:	bfa5      	ittet	ge
 800104c:	f500 4061 	addge.w	r0, r0, #57600	; 0xe100
 8001050:	b2d2      	uxtbge	r2, r2
    SCB->SHP[(((uint32_t)(int32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001052:	541a      	strblt	r2, [r3, r0]
    NVIC->IP[((uint32_t)(int32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001054:	f880 2300 	strbge.w	r2, [r0, #768]	; 0x300
 8001058:	bd30      	pop	{r4, r5, pc}
 800105a:	bf00      	nop
 800105c:	e000ed00 	.word	0xe000ed00
 8001060:	e000ed14 	.word	0xe000ed14

08001064 <HAL_NVIC_EnableIRQ>:
  NVIC->ISER[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0x1FUL));
 8001064:	0942      	lsrs	r2, r0, #5
 8001066:	2301      	movs	r3, #1
 8001068:	f000 001f 	and.w	r0, r0, #31
 800106c:	fa03 f000 	lsl.w	r0, r3, r0
 8001070:	4b01      	ldr	r3, [pc, #4]	; (8001078 <HAL_NVIC_EnableIRQ+0x14>)
 8001072:	f843 0022 	str.w	r0, [r3, r2, lsl #2]
 8001076:	4770      	bx	lr
 8001078:	e000e100 	.word	0xe000e100

0800107c <HAL_SYSTICK_Config>:
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 800107c:	3801      	subs	r0, #1
 800107e:	f1b0 7f80 	cmp.w	r0, #16777216	; 0x1000000
 8001082:	d20a      	bcs.n	800109a <HAL_SYSTICK_Config+0x1e>
  {
    return (1UL);                                                   /* Reload value impossible */
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 8001084:	4b06      	ldr	r3, [pc, #24]	; (80010a0 <HAL_SYSTICK_Config+0x24>)
    SCB->SHP[(((uint32_t)(int32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001086:	4a07      	ldr	r2, [pc, #28]	; (80010a4 <HAL_SYSTICK_Config+0x28>)
  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 8001088:	6058      	str	r0, [r3, #4]
    SCB->SHP[(((uint32_t)(int32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800108a:	21f0      	movs	r1, #240	; 0xf0
 800108c:	f882 1023 	strb.w	r1, [r2, #35]	; 0x23
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 8001090:	2000      	movs	r0, #0
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 8001092:	2207      	movs	r2, #7
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 8001094:	6098      	str	r0, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 8001096:	601a      	str	r2, [r3, #0]
 8001098:	4770      	bx	lr
    return (1UL);                                                   /* Reload value impossible */
 800109a:	2001      	movs	r0, #1
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
   return SysTick_Config(TicksNumb);
}
 800109c:	4770      	bx	lr
 800109e:	bf00      	nop
 80010a0:	e000e010 	.word	0xe000e010
 80010a4:	e000ed00 	.word	0xe000ed00

080010a8 <HAL_SYSTICK_CLKSourceConfig>:
  *             @arg SYSTICK_CLKSOURCE_HCLK_DIV8: AHB clock divided by 8 selected as SysTick clock source.
  *             @arg SYSTICK_CLKSOURCE_HCLK: AHB clock selected as SysTick clock source.
  * @retval None
  */
void HAL_SYSTICK_CLKSourceConfig(uint32_t CLKSource)
{
 80010a8:	4b04      	ldr	r3, [pc, #16]	; (80010bc <HAL_SYSTICK_CLKSourceConfig+0x14>)
  /* Check the parameters */
  assert_param(IS_SYSTICK_CLK_SOURCE(CLKSource));
  if (CLKSource == SYSTICK_CLKSOURCE_HCLK)
  {
    SysTick->CTRL |= SYSTICK_CLKSOURCE_HCLK;
 80010aa:	681a      	ldr	r2, [r3, #0]
  if (CLKSource == SYSTICK_CLKSOURCE_HCLK)
 80010ac:	2804      	cmp	r0, #4
    SysTick->CTRL |= SYSTICK_CLKSOURCE_HCLK;
 80010ae:	bf0c      	ite	eq
 80010b0:	f042 0204 	orreq.w	r2, r2, #4
  }
  else
  {
    SysTick->CTRL &= ~SYSTICK_CLKSOURCE_HCLK;
 80010b4:	f022 0204 	bicne.w	r2, r2, #4
 80010b8:	601a      	str	r2, [r3, #0]
 80010ba:	4770      	bx	lr
 80010bc:	e000e010 	.word	0xe000e010

080010c0 <HAL_SYSTICK_Callback>:
/**
  * @brief  SYSTICK callback.
  * @retval None
  */
__weak void HAL_SYSTICK_Callback(void)
{
 80010c0:	4770      	bx	lr

080010c2 <HAL_SYSTICK_IRQHandler>:
{
 80010c2:	b508      	push	{r3, lr}
  HAL_SYSTICK_Callback();
 80010c4:	f7ff fffc 	bl	80010c0 <HAL_SYSTICK_Callback>
 80010c8:	bd08      	pop	{r3, pc}
	...

080010cc <HAL_GPIO_Init>:
  * @param  GPIO_Init: pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 80010cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80010d0:	b085      	sub	sp, #20
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));
  assert_param(IS_GPIO_PULL(GPIO_Init->Pull));

  /* Configure the port pins */
  while (((GPIO_Init->Pin) >> position) != 0x00u)
 80010d2:	680b      	ldr	r3, [r1, #0]
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 80010d4:	f8df 8158 	ldr.w	r8, [pc, #344]	; 8001230 <HAL_GPIO_Init+0x164>
        temp &= ~(0x0FuL << (4u * (position & 0x03u)));
        temp |= (GPIO_GET_INDEX(GPIOx) << (4u * (position & 0x03u)));
        SYSCFG->EXTICR[position >> 2u] = temp;

        /* Clear EXTI line configuration */
        temp = EXTI->IMR1;
 80010d8:	4a53      	ldr	r2, [pc, #332]	; (8001228 <HAL_GPIO_Init+0x15c>)
  while (((GPIO_Init->Pin) >> position) != 0x00u)
 80010da:	9301      	str	r3, [sp, #4]
        temp &= ~(0x0FuL << (4u * (position & 0x03u)));
 80010dc:	f04f 090f 	mov.w	r9, #15
  uint32_t position = 0x00u;
 80010e0:	2300      	movs	r3, #0
  while (((GPIO_Init->Pin) >> position) != 0x00u)
 80010e2:	9c01      	ldr	r4, [sp, #4]
 80010e4:	40dc      	lsrs	r4, r3
 80010e6:	d102      	bne.n	80010ee <HAL_GPIO_Init+0x22>
      }
    }

    position++;
  }
}
 80010e8:	b005      	add	sp, #20
 80010ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    iocurrent = (GPIO_Init->Pin) & (1uL << position);
 80010ee:	2401      	movs	r4, #1
 80010f0:	fa04 fa03 	lsl.w	sl, r4, r3
    if (iocurrent != 0x00u)
 80010f4:	9c01      	ldr	r4, [sp, #4]
 80010f6:	ea14 050a 	ands.w	r5, r4, sl
 80010fa:	f000 808f 	beq.w	800121c <HAL_GPIO_Init+0x150>
      if((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 80010fe:	684c      	ldr	r4, [r1, #4]
 8001100:	f024 0b10 	bic.w	fp, r4, #16
 8001104:	f1bb 0f02 	cmp.w	fp, #2
 8001108:	d111      	bne.n	800112e <HAL_GPIO_Init+0x62>
        temp = GPIOx->AFR[position >> 3u];
 800110a:	08df      	lsrs	r7, r3, #3
 800110c:	eb00 0787 	add.w	r7, r0, r7, lsl #2
        temp &= ~(0xFu << ((position & 0x07u) * 4u));
 8001110:	f003 0e07 	and.w	lr, r3, #7
        temp = GPIOx->AFR[position >> 3u];
 8001114:	6a3e      	ldr	r6, [r7, #32]
        temp &= ~(0xFu << ((position & 0x07u) * 4u));
 8001116:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 800111a:	fa09 fc0e 	lsl.w	ip, r9, lr
 800111e:	ea26 0c0c 	bic.w	ip, r6, ip
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07u) * 4u));
 8001122:	690e      	ldr	r6, [r1, #16]
 8001124:	fa06 f60e 	lsl.w	r6, r6, lr
 8001128:	ea46 060c 	orr.w	r6, r6, ip
        GPIOx->AFR[position >> 3u] = temp;
 800112c:	623e      	str	r6, [r7, #32]
 800112e:	ea4f 0c43 	mov.w	ip, r3, lsl #1
      temp &= ~(GPIO_MODER_MODE0 << (position * 2u));
 8001132:	2703      	movs	r7, #3
      temp = GPIOx->MODER;
 8001134:	6806      	ldr	r6, [r0, #0]
      temp &= ~(GPIO_MODER_MODE0 << (position * 2u));
 8001136:	fa07 f70c 	lsl.w	r7, r7, ip
 800113a:	43ff      	mvns	r7, r7
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2u));
 800113c:	f004 0e03 	and.w	lr, r4, #3
      temp &= ~(GPIO_MODER_MODE0 << (position * 2u));
 8001140:	403e      	ands	r6, r7
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2u));
 8001142:	fa0e fe0c 	lsl.w	lr, lr, ip
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 8001146:	f10b 3bff 	add.w	fp, fp, #4294967295
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2u));
 800114a:	ea4e 0606 	orr.w	r6, lr, r6
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 800114e:	f1bb 0f01 	cmp.w	fp, #1
      GPIOx->MODER = temp;
 8001152:	6006      	str	r6, [r0, #0]
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 8001154:	d811      	bhi.n	800117a <HAL_GPIO_Init+0xae>
        temp = GPIOx->OSPEEDR;
 8001156:	6886      	ldr	r6, [r0, #8]
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2u));
 8001158:	ea06 0b07 	and.w	fp, r6, r7
        temp |= (GPIO_Init->Speed << (position * 2u));
 800115c:	68ce      	ldr	r6, [r1, #12]
 800115e:	fa06 fe0c 	lsl.w	lr, r6, ip
 8001162:	ea4e 060b 	orr.w	r6, lr, fp
        GPIOx->OSPEEDR = temp;
 8001166:	6086      	str	r6, [r0, #8]
        temp = GPIOx->OTYPER;
 8001168:	6846      	ldr	r6, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT0 << position) ;
 800116a:	ea26 0a0a 	bic.w	sl, r6, sl
        temp |= (((GPIO_Init->Mode & GPIO_OUTPUT_TYPE) >> 4u) << position);
 800116e:	f3c4 1600 	ubfx	r6, r4, #4, #1
 8001172:	409e      	lsls	r6, r3
 8001174:	ea46 060a 	orr.w	r6, r6, sl
        GPIOx->OTYPER = temp;
 8001178:	6046      	str	r6, [r0, #4]
      temp = GPIOx->PUPDR;
 800117a:	68c6      	ldr	r6, [r0, #12]
      temp &= ~(GPIO_PUPDR_PUPD0 << (position * 2u));
 800117c:	4037      	ands	r7, r6
      temp |= ((GPIO_Init->Pull) << (position * 2u));
 800117e:	688e      	ldr	r6, [r1, #8]
 8001180:	fa06 f60c 	lsl.w	r6, r6, ip
 8001184:	4337      	orrs	r7, r6
      if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
 8001186:	00e6      	lsls	r6, r4, #3
      GPIOx->PUPDR = temp;
 8001188:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
 800118a:	d547      	bpl.n	800121c <HAL_GPIO_Init+0x150>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800118c:	f8d8 6060 	ldr.w	r6, [r8, #96]	; 0x60
 8001190:	f046 0601 	orr.w	r6, r6, #1
 8001194:	f8c8 6060 	str.w	r6, [r8, #96]	; 0x60
 8001198:	f8d8 6060 	ldr.w	r6, [r8, #96]	; 0x60
 800119c:	f023 0703 	bic.w	r7, r3, #3
 80011a0:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 80011a4:	f006 0601 	and.w	r6, r6, #1
 80011a8:	f507 3780 	add.w	r7, r7, #65536	; 0x10000
 80011ac:	9603      	str	r6, [sp, #12]
        temp &= ~(0x0FuL << (4u * (position & 0x03u)));
 80011ae:	f003 0e03 	and.w	lr, r3, #3
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 80011b2:	9e03      	ldr	r6, [sp, #12]
        temp = SYSCFG->EXTICR[position >> 2u];
 80011b4:	68be      	ldr	r6, [r7, #8]
        temp &= ~(0x0FuL << (4u * (position & 0x03u)));
 80011b6:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 80011ba:	fa09 fc0e 	lsl.w	ip, r9, lr
        temp |= (GPIO_GET_INDEX(GPIOx) << (4u * (position & 0x03u)));
 80011be:	f1b0 4f90 	cmp.w	r0, #1207959552	; 0x48000000
        temp &= ~(0x0FuL << (4u * (position & 0x03u)));
 80011c2:	ea26 0c0c 	bic.w	ip, r6, ip
        temp |= (GPIO_GET_INDEX(GPIOx) << (4u * (position & 0x03u)));
 80011c6:	d02b      	beq.n	8001220 <HAL_GPIO_Init+0x154>
 80011c8:	4e18      	ldr	r6, [pc, #96]	; (800122c <HAL_GPIO_Init+0x160>)
 80011ca:	42b0      	cmp	r0, r6
 80011cc:	d02a      	beq.n	8001224 <HAL_GPIO_Init+0x158>
 80011ce:	f506 6680 	add.w	r6, r6, #1024	; 0x400
 80011d2:	42b0      	cmp	r0, r6
 80011d4:	bf14      	ite	ne
 80011d6:	2607      	movne	r6, #7
 80011d8:	2602      	moveq	r6, #2
 80011da:	fa06 f60e 	lsl.w	r6, r6, lr
 80011de:	ea46 060c 	orr.w	r6, r6, ip
        SYSCFG->EXTICR[position >> 2u] = temp;
 80011e2:	60be      	str	r6, [r7, #8]
        temp = EXTI->IMR1;
 80011e4:	6816      	ldr	r6, [r2, #0]
        temp &= ~(iocurrent);
 80011e6:	43ef      	mvns	r7, r5
        if((GPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
 80011e8:	f414 3f80 	tst.w	r4, #65536	; 0x10000
        temp &= ~(iocurrent);
 80011ec:	bf0c      	ite	eq
 80011ee:	403e      	andeq	r6, r7
          temp |= iocurrent;
 80011f0:	432e      	orrne	r6, r5
        EXTI->IMR1 = temp;
 80011f2:	6016      	str	r6, [r2, #0]
        temp = EXTI->EMR1;
 80011f4:	6856      	ldr	r6, [r2, #4]
        if((GPIO_Init->Mode & GPIO_MODE_EVT) == GPIO_MODE_EVT)
 80011f6:	f414 3f00 	tst.w	r4, #131072	; 0x20000
        temp &= ~(iocurrent);
 80011fa:	bf0c      	ite	eq
 80011fc:	403e      	andeq	r6, r7
          temp |= iocurrent;
 80011fe:	432e      	orrne	r6, r5
        EXTI->EMR1 = temp;
 8001200:	6056      	str	r6, [r2, #4]
        temp = EXTI->RTSR1;
 8001202:	6896      	ldr	r6, [r2, #8]
        if((GPIO_Init->Mode & RISING_EDGE) == RISING_EDGE)
 8001204:	f414 1f80 	tst.w	r4, #1048576	; 0x100000
        temp &= ~(iocurrent);
 8001208:	bf0c      	ite	eq
 800120a:	403e      	andeq	r6, r7
          temp |= iocurrent;
 800120c:	432e      	orrne	r6, r5
        EXTI->RTSR1 = temp;
 800120e:	6096      	str	r6, [r2, #8]
        temp = EXTI->FTSR1;
 8001210:	68d6      	ldr	r6, [r2, #12]
        if((GPIO_Init->Mode & FALLING_EDGE) == FALLING_EDGE)
 8001212:	02a4      	lsls	r4, r4, #10
        temp &= ~(iocurrent);
 8001214:	bf54      	ite	pl
 8001216:	403e      	andpl	r6, r7
          temp |= iocurrent;
 8001218:	432e      	orrmi	r6, r5
        EXTI->FTSR1 = temp;
 800121a:	60d6      	str	r6, [r2, #12]
    position++;
 800121c:	3301      	adds	r3, #1
 800121e:	e760      	b.n	80010e2 <HAL_GPIO_Init+0x16>
        temp |= (GPIO_GET_INDEX(GPIOx) << (4u * (position & 0x03u)));
 8001220:	2600      	movs	r6, #0
 8001222:	e7da      	b.n	80011da <HAL_GPIO_Init+0x10e>
 8001224:	2601      	movs	r6, #1
 8001226:	e7d8      	b.n	80011da <HAL_GPIO_Init+0x10e>
 8001228:	40010400 	.word	0x40010400
 800122c:	48000400 	.word	0x48000400
 8001230:	40021000 	.word	0x40021000

08001234 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 8001234:	b10a      	cbz	r2, 800123a <HAL_GPIO_WritePin+0x6>
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin;
 8001236:	6181      	str	r1, [r0, #24]
 8001238:	4770      	bx	lr
  }
  else
  {
    GPIOx->BRR = (uint32_t)GPIO_Pin;
 800123a:	6281      	str	r1, [r0, #40]	; 0x28
 800123c:	4770      	bx	lr
	...

08001240 <HAL_PWR_EnableBkUpAccess>:
  *        back-up domain.
  * @retval None
  */
void HAL_PWR_EnableBkUpAccess(void)
{
  SET_BIT(PWR->CR1, PWR_CR1_DBP);
 8001240:	4a02      	ldr	r2, [pc, #8]	; (800124c <HAL_PWR_EnableBkUpAccess+0xc>)
 8001242:	6813      	ldr	r3, [r2, #0]
 8001244:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8001248:	6013      	str	r3, [r2, #0]
 800124a:	4770      	bx	lr
 800124c:	40007000 	.word	0x40007000

08001250 <HAL_PWREx_GetVoltageRange>:
    else
    {
      return PWR_REGULATOR_VOLTAGE_SCALE1_BOOST;
    }
#else
  return  (PWR->CR1 & PWR_CR1_VOS);
 8001250:	4b02      	ldr	r3, [pc, #8]	; (800125c <HAL_PWREx_GetVoltageRange+0xc>)
 8001252:	6818      	ldr	r0, [r3, #0]
#endif
}
 8001254:	f400 60c0 	and.w	r0, r0, #1536	; 0x600
 8001258:	4770      	bx	lr
 800125a:	bf00      	nop
 800125c:	40007000 	.word	0x40007000

08001260 <HAL_PWREx_ControlVoltageScaling>:
  *        cleared before returning the status. If the flag is not cleared within
  *        50 microseconds, HAL_TIMEOUT status is reported.
  * @retval HAL Status
  */
HAL_StatusTypeDef HAL_PWREx_ControlVoltageScaling(uint32_t VoltageScaling)
{
 8001260:	4b17      	ldr	r3, [pc, #92]	; (80012c0 <HAL_PWREx_ControlVoltageScaling+0x60>)
#else

  /* If Set Range 1 */
  if (VoltageScaling == PWR_REGULATOR_VOLTAGE_SCALE1)
  {
    if (READ_BIT(PWR->CR1, PWR_CR1_VOS) != PWR_REGULATOR_VOLTAGE_SCALE1)
 8001262:	681a      	ldr	r2, [r3, #0]
  if (VoltageScaling == PWR_REGULATOR_VOLTAGE_SCALE1)
 8001264:	f5b0 7f00 	cmp.w	r0, #512	; 0x200
    if (READ_BIT(PWR->CR1, PWR_CR1_VOS) != PWR_REGULATOR_VOLTAGE_SCALE1)
 8001268:	f402 62c0 	and.w	r2, r2, #1536	; 0x600
  if (VoltageScaling == PWR_REGULATOR_VOLTAGE_SCALE1)
 800126c:	d11c      	bne.n	80012a8 <HAL_PWREx_ControlVoltageScaling+0x48>
    if (READ_BIT(PWR->CR1, PWR_CR1_VOS) != PWR_REGULATOR_VOLTAGE_SCALE1)
 800126e:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
 8001272:	d015      	beq.n	80012a0 <HAL_PWREx_ControlVoltageScaling+0x40>
    {
      /* Set Range 1 */
      MODIFY_REG(PWR->CR1, PWR_CR1_VOS, PWR_REGULATOR_VOLTAGE_SCALE1);
 8001274:	681a      	ldr	r2, [r3, #0]
 8001276:	f422 62c0 	bic.w	r2, r2, #1536	; 0x600
 800127a:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800127e:	601a      	str	r2, [r3, #0]

      /* Wait until VOSF is cleared */
      wait_loop_index = ((PWR_FLAG_SETTING_DELAY_US * SystemCoreClock) / 1000000U) + 1U;
 8001280:	4a10      	ldr	r2, [pc, #64]	; (80012c4 <HAL_PWREx_ControlVoltageScaling+0x64>)
 8001282:	6811      	ldr	r1, [r2, #0]
 8001284:	2232      	movs	r2, #50	; 0x32
 8001286:	434a      	muls	r2, r1
 8001288:	490f      	ldr	r1, [pc, #60]	; (80012c8 <HAL_PWREx_ControlVoltageScaling+0x68>)
 800128a:	fbb2 f2f1 	udiv	r2, r2, r1
 800128e:	4619      	mov	r1, r3
 8001290:	3201      	adds	r2, #1
      while ((HAL_IS_BIT_SET(PWR->SR2, PWR_SR2_VOSF)) && (wait_loop_index != 0U))
 8001292:	6958      	ldr	r0, [r3, #20]
 8001294:	0540      	lsls	r0, r0, #21
 8001296:	d500      	bpl.n	800129a <HAL_PWREx_ControlVoltageScaling+0x3a>
 8001298:	b922      	cbnz	r2, 80012a4 <HAL_PWREx_ControlVoltageScaling+0x44>
      {
        wait_loop_index--;
      }
      if (HAL_IS_BIT_SET(PWR->SR2, PWR_SR2_VOSF))
 800129a:	694b      	ldr	r3, [r1, #20]
 800129c:	055b      	lsls	r3, r3, #21
 800129e:	d40d      	bmi.n	80012bc <HAL_PWREx_ControlVoltageScaling+0x5c>
      /* No need to wait for VOSF to be cleared for this transition */
    }
  }
#endif

  return HAL_OK;
 80012a0:	2000      	movs	r0, #0
 80012a2:	4770      	bx	lr
        wait_loop_index--;
 80012a4:	3a01      	subs	r2, #1
 80012a6:	e7f4      	b.n	8001292 <HAL_PWREx_ControlVoltageScaling+0x32>
    if (READ_BIT(PWR->CR1, PWR_CR1_VOS) != PWR_REGULATOR_VOLTAGE_SCALE2)
 80012a8:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
      MODIFY_REG(PWR->CR1, PWR_CR1_VOS, PWR_REGULATOR_VOLTAGE_SCALE2);
 80012ac:	bf1f      	itttt	ne
 80012ae:	681a      	ldrne	r2, [r3, #0]
 80012b0:	f422 62c0 	bicne.w	r2, r2, #1536	; 0x600
 80012b4:	f442 6280 	orrne.w	r2, r2, #1024	; 0x400
 80012b8:	601a      	strne	r2, [r3, #0]
 80012ba:	e7f1      	b.n	80012a0 <HAL_PWREx_ControlVoltageScaling+0x40>
        return HAL_TIMEOUT;
 80012bc:	2003      	movs	r0, #3
}
 80012be:	4770      	bx	lr
 80012c0:	40007000 	.word	0x40007000
 80012c4:	20000000 	.word	0x20000000
 80012c8:	000f4240 	.word	0x000f4240

080012cc <RCC_SetFlashLatencyFromMSIRange>:
            voltage range.
  * @param  msirange  MSI range value from RCC_MSIRANGE_0 to RCC_MSIRANGE_11
  * @retval HAL status
  */
static HAL_StatusTypeDef RCC_SetFlashLatencyFromMSIRange(uint32_t msirange)
{
 80012cc:	b537      	push	{r0, r1, r2, r4, r5, lr}
  uint32_t vos;
  uint32_t latency = FLASH_LATENCY_0;  /* default value 0WS */

  if(__HAL_RCC_PWR_IS_CLK_ENABLED())
 80012ce:	4d1e      	ldr	r5, [pc, #120]	; (8001348 <RCC_SetFlashLatencyFromMSIRange+0x7c>)
 80012d0:	6dab      	ldr	r3, [r5, #88]	; 0x58
 80012d2:	00da      	lsls	r2, r3, #3
{
 80012d4:	4604      	mov	r4, r0
  if(__HAL_RCC_PWR_IS_CLK_ENABLED())
 80012d6:	d518      	bpl.n	800130a <RCC_SetFlashLatencyFromMSIRange+0x3e>
  {
    vos = HAL_PWREx_GetVoltageRange();
 80012d8:	f7ff ffba 	bl	8001250 <HAL_PWREx_GetVoltageRange>
    __HAL_RCC_PWR_CLK_ENABLE();
    vos = HAL_PWREx_GetVoltageRange();
    __HAL_RCC_PWR_CLK_DISABLE();
  }

  if(vos == PWR_REGULATOR_VOLTAGE_SCALE1)
 80012dc:	f5b0 7f00 	cmp.w	r0, #512	; 0x200
 80012e0:	d123      	bne.n	800132a <RCC_SetFlashLatencyFromMSIRange+0x5e>
  {
    if(msirange > RCC_MSIRANGE_8)
 80012e2:	2c80      	cmp	r4, #128	; 0x80
 80012e4:	d929      	bls.n	800133a <RCC_SetFlashLatencyFromMSIRange+0x6e>
    {
      /* MSI > 16Mhz */
      if(msirange > RCC_MSIRANGE_10)
 80012e6:	2ca0      	cmp	r4, #160	; 0xa0
        latency = FLASH_LATENCY_2; /* 2WS */
      }
      else
      {
        /* MSI 24Mhz or 32Mhz */
        latency = FLASH_LATENCY_1; /* 1WS */
 80012e8:	bf8c      	ite	hi
 80012ea:	2002      	movhi	r0, #2
 80012ec:	2001      	movls	r0, #1
      /* else MSI < 8Mhz default FLASH_LATENCY_0 0WS */
    }
#endif
  }

  __HAL_FLASH_SET_LATENCY(latency);
 80012ee:	4a17      	ldr	r2, [pc, #92]	; (800134c <RCC_SetFlashLatencyFromMSIRange+0x80>)
 80012f0:	6813      	ldr	r3, [r2, #0]
 80012f2:	f023 0307 	bic.w	r3, r3, #7
 80012f6:	4303      	orrs	r3, r0
 80012f8:	6013      	str	r3, [r2, #0]

  /* Check that the new number of wait states is taken into account to access the Flash
     memory by reading the FLASH_ACR register */
  if(__HAL_FLASH_GET_LATENCY() != latency)
 80012fa:	6813      	ldr	r3, [r2, #0]
 80012fc:	f003 0307 	and.w	r3, r3, #7
  {
    return HAL_ERROR;
  }

  return HAL_OK;
}
 8001300:	1a18      	subs	r0, r3, r0
 8001302:	bf18      	it	ne
 8001304:	2001      	movne	r0, #1
 8001306:	b003      	add	sp, #12
 8001308:	bd30      	pop	{r4, r5, pc}
    __HAL_RCC_PWR_CLK_ENABLE();
 800130a:	6dab      	ldr	r3, [r5, #88]	; 0x58
 800130c:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8001310:	65ab      	str	r3, [r5, #88]	; 0x58
 8001312:	6dab      	ldr	r3, [r5, #88]	; 0x58
 8001314:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001318:	9301      	str	r3, [sp, #4]
 800131a:	9b01      	ldr	r3, [sp, #4]
    vos = HAL_PWREx_GetVoltageRange();
 800131c:	f7ff ff98 	bl	8001250 <HAL_PWREx_GetVoltageRange>
    __HAL_RCC_PWR_CLK_DISABLE();
 8001320:	6dab      	ldr	r3, [r5, #88]	; 0x58
 8001322:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8001326:	65ab      	str	r3, [r5, #88]	; 0x58
 8001328:	e7d8      	b.n	80012dc <RCC_SetFlashLatencyFromMSIRange+0x10>
    if(msirange > RCC_MSIRANGE_8)
 800132a:	2c80      	cmp	r4, #128	; 0x80
 800132c:	d807      	bhi.n	800133e <RCC_SetFlashLatencyFromMSIRange+0x72>
      if(msirange == RCC_MSIRANGE_8)
 800132e:	d008      	beq.n	8001342 <RCC_SetFlashLatencyFromMSIRange+0x76>
      else if(msirange == RCC_MSIRANGE_7)
 8001330:	f1a4 0370 	sub.w	r3, r4, #112	; 0x70
 8001334:	4258      	negs	r0, r3
 8001336:	4158      	adcs	r0, r3
 8001338:	e7d9      	b.n	80012ee <RCC_SetFlashLatencyFromMSIRange+0x22>
  uint32_t latency = FLASH_LATENCY_0;  /* default value 0WS */
 800133a:	2000      	movs	r0, #0
 800133c:	e7d7      	b.n	80012ee <RCC_SetFlashLatencyFromMSIRange+0x22>
      latency = FLASH_LATENCY_3; /* 3WS */
 800133e:	2003      	movs	r0, #3
 8001340:	e7d5      	b.n	80012ee <RCC_SetFlashLatencyFromMSIRange+0x22>
        latency = FLASH_LATENCY_2; /* 2WS */
 8001342:	2002      	movs	r0, #2
 8001344:	e7d3      	b.n	80012ee <RCC_SetFlashLatencyFromMSIRange+0x22>
 8001346:	bf00      	nop
 8001348:	40021000 	.word	0x40021000
 800134c:	40022000 	.word	0x40022000

08001350 <HAL_RCC_GetSysClockFreq>:
  sysclk_source = __HAL_RCC_GET_SYSCLK_SOURCE();
 8001350:	4b25      	ldr	r3, [pc, #148]	; (80013e8 <HAL_RCC_GetSysClockFreq+0x98>)
 8001352:	689a      	ldr	r2, [r3, #8]
  pll_oscsource = __HAL_RCC_GET_PLL_OSCSOURCE();
 8001354:	68d9      	ldr	r1, [r3, #12]
  if((sysclk_source == RCC_CFGR_SWS_MSI) ||
 8001356:	f012 020c 	ands.w	r2, r2, #12
 800135a:	d005      	beq.n	8001368 <HAL_RCC_GetSysClockFreq+0x18>
 800135c:	2a0c      	cmp	r2, #12
 800135e:	d115      	bne.n	800138c <HAL_RCC_GetSysClockFreq+0x3c>
  pll_oscsource = __HAL_RCC_GET_PLL_OSCSOURCE();
 8001360:	f001 0103 	and.w	r1, r1, #3
     ((sysclk_source == RCC_CFGR_SWS_PLL) && (pll_oscsource == RCC_PLLSOURCE_MSI)))
 8001364:	2901      	cmp	r1, #1
 8001366:	d118      	bne.n	800139a <HAL_RCC_GetSysClockFreq+0x4a>
    if(READ_BIT(RCC->CR, RCC_CR_MSIRGSEL) == 0U)
 8001368:	6819      	ldr	r1, [r3, #0]
    msirange = MSIRangeTable[msirange];
 800136a:	4820      	ldr	r0, [pc, #128]	; (80013ec <HAL_RCC_GetSysClockFreq+0x9c>)
    if(READ_BIT(RCC->CR, RCC_CR_MSIRGSEL) == 0U)
 800136c:	0709      	lsls	r1, r1, #28
      msirange = READ_BIT(RCC->CSR, RCC_CSR_MSISRANGE) >> RCC_CSR_MSISRANGE_Pos;
 800136e:	bf55      	itete	pl
 8001370:	f8d3 1094 	ldrpl.w	r1, [r3, #148]	; 0x94
      msirange = READ_BIT(RCC->CR, RCC_CR_MSIRANGE) >> RCC_CR_MSIRANGE_Pos;
 8001374:	6819      	ldrmi	r1, [r3, #0]
      msirange = READ_BIT(RCC->CSR, RCC_CSR_MSISRANGE) >> RCC_CSR_MSISRANGE_Pos;
 8001376:	f3c1 2103 	ubfxpl	r1, r1, #8, #4
      msirange = READ_BIT(RCC->CR, RCC_CR_MSIRANGE) >> RCC_CR_MSIRANGE_Pos;
 800137a:	f3c1 1103 	ubfxmi	r1, r1, #4, #4
    msirange = MSIRangeTable[msirange];
 800137e:	f850 0021 	ldr.w	r0, [r0, r1, lsl #2]
    if(sysclk_source == RCC_CFGR_SWS_MSI)
 8001382:	b382      	cbz	r2, 80013e6 <HAL_RCC_GetSysClockFreq+0x96>
  if(sysclk_source == RCC_CFGR_SWS_PLL)
 8001384:	2a0c      	cmp	r2, #12
 8001386:	d009      	beq.n	800139c <HAL_RCC_GetSysClockFreq+0x4c>
 8001388:	2000      	movs	r0, #0
  return sysclockfreq;
 800138a:	4770      	bx	lr
  else if(sysclk_source == RCC_CFGR_SWS_HSI)
 800138c:	2a04      	cmp	r2, #4
 800138e:	d029      	beq.n	80013e4 <HAL_RCC_GetSysClockFreq+0x94>
 8001390:	2a08      	cmp	r2, #8
 8001392:	4817      	ldr	r0, [pc, #92]	; (80013f0 <HAL_RCC_GetSysClockFreq+0xa0>)
 8001394:	bf18      	it	ne
 8001396:	2000      	movne	r0, #0
 8001398:	4770      	bx	lr
  uint32_t msirange = 0U, sysclockfreq = 0U;
 800139a:	2000      	movs	r0, #0
    pllsource = READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLSRC);
 800139c:	68d9      	ldr	r1, [r3, #12]
    pllm = (READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLM) >> RCC_PLLCFGR_PLLM_Pos) + 1U ;
 800139e:	68da      	ldr	r2, [r3, #12]
    pllsource = READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLSRC);
 80013a0:	f001 0103 	and.w	r1, r1, #3
    pllm = (READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLM) >> RCC_PLLCFGR_PLLM_Pos) + 1U ;
 80013a4:	f3c2 1202 	ubfx	r2, r2, #4, #3
    switch (pllsource)
 80013a8:	2902      	cmp	r1, #2
    pllm = (READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLM) >> RCC_PLLCFGR_PLLM_Pos) + 1U ;
 80013aa:	f102 0201 	add.w	r2, r2, #1
    switch (pllsource)
 80013ae:	d005      	beq.n	80013bc <HAL_RCC_GetSysClockFreq+0x6c>
 80013b0:	2903      	cmp	r1, #3
 80013b2:	d012      	beq.n	80013da <HAL_RCC_GetSysClockFreq+0x8a>
      pllvco = (msirange / pllm) * (READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos);
 80013b4:	68d9      	ldr	r1, [r3, #12]
 80013b6:	f3c1 2106 	ubfx	r1, r1, #8, #7
 80013ba:	e003      	b.n	80013c4 <HAL_RCC_GetSysClockFreq+0x74>
      pllvco = (HSI_VALUE / pllm) * (READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos);
 80013bc:	68d9      	ldr	r1, [r3, #12]
 80013be:	480d      	ldr	r0, [pc, #52]	; (80013f4 <HAL_RCC_GetSysClockFreq+0xa4>)
 80013c0:	f3c1 2106 	ubfx	r1, r1, #8, #7
    pllr = ((READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLR) >> RCC_PLLCFGR_PLLR_Pos) + 1U ) * 2U;
 80013c4:	68db      	ldr	r3, [r3, #12]
      pllvco = (msirange / pllm) * (READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos);
 80013c6:	fbb0 f0f2 	udiv	r0, r0, r2
    pllr = ((READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLR) >> RCC_PLLCFGR_PLLR_Pos) + 1U ) * 2U;
 80013ca:	f3c3 6341 	ubfx	r3, r3, #25, #2
 80013ce:	3301      	adds	r3, #1
      pllvco = (msirange / pllm) * (READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos);
 80013d0:	4348      	muls	r0, r1
    pllr = ((READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLR) >> RCC_PLLCFGR_PLLR_Pos) + 1U ) * 2U;
 80013d2:	005b      	lsls	r3, r3, #1
    sysclockfreq = pllvco/pllr;
 80013d4:	fbb0 f0f3 	udiv	r0, r0, r3
 80013d8:	4770      	bx	lr
      pllvco = (HSE_VALUE / pllm) * (READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos);
 80013da:	68d9      	ldr	r1, [r3, #12]
 80013dc:	4804      	ldr	r0, [pc, #16]	; (80013f0 <HAL_RCC_GetSysClockFreq+0xa0>)
 80013de:	f3c1 2106 	ubfx	r1, r1, #8, #7
 80013e2:	e7ef      	b.n	80013c4 <HAL_RCC_GetSysClockFreq+0x74>
    sysclockfreq = HSI_VALUE;
 80013e4:	4803      	ldr	r0, [pc, #12]	; (80013f4 <HAL_RCC_GetSysClockFreq+0xa4>)
}
 80013e6:	4770      	bx	lr
 80013e8:	40021000 	.word	0x40021000
 80013ec:	0800776c 	.word	0x0800776c
 80013f0:	007a1200 	.word	0x007a1200
 80013f4:	00f42400 	.word	0x00f42400

080013f8 <HAL_RCC_OscConfig>:
{
 80013f8:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
  if(RCC_OscInitStruct == NULL)
 80013fc:	4605      	mov	r5, r0
 80013fe:	b908      	cbnz	r0, 8001404 <HAL_RCC_OscConfig+0xc>
      return HAL_ERROR;
 8001400:	2001      	movs	r0, #1
 8001402:	e046      	b.n	8001492 <HAL_RCC_OscConfig+0x9a>
  sysclk_source = __HAL_RCC_GET_SYSCLK_SOURCE();
 8001404:	4ca8      	ldr	r4, [pc, #672]	; (80016a8 <HAL_RCC_OscConfig+0x2b0>)
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_MSI) == RCC_OSCILLATORTYPE_MSI)
 8001406:	6803      	ldr	r3, [r0, #0]
  sysclk_source = __HAL_RCC_GET_SYSCLK_SOURCE();
 8001408:	68a6      	ldr	r6, [r4, #8]
  pll_oscsource = __HAL_RCC_GET_PLL_OSCSOURCE();
 800140a:	68e7      	ldr	r7, [r4, #12]
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_MSI) == RCC_OSCILLATORTYPE_MSI)
 800140c:	06db      	lsls	r3, r3, #27
  sysclk_source = __HAL_RCC_GET_SYSCLK_SOURCE();
 800140e:	f006 060c 	and.w	r6, r6, #12
  pll_oscsource = __HAL_RCC_GET_PLL_OSCSOURCE();
 8001412:	f007 0703 	and.w	r7, r7, #3
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_MSI) == RCC_OSCILLATORTYPE_MSI)
 8001416:	d572      	bpl.n	80014fe <HAL_RCC_OscConfig+0x106>
    if((sysclk_source == RCC_CFGR_SWS_MSI) ||
 8001418:	b11e      	cbz	r6, 8001422 <HAL_RCC_OscConfig+0x2a>
 800141a:	2e0c      	cmp	r6, #12
 800141c:	d151      	bne.n	80014c2 <HAL_RCC_OscConfig+0xca>
       ((sysclk_source == RCC_CFGR_SWS_PLL) && (pll_oscsource == RCC_PLLSOURCE_MSI)))
 800141e:	2f01      	cmp	r7, #1
 8001420:	d14f      	bne.n	80014c2 <HAL_RCC_OscConfig+0xca>
      if((READ_BIT(RCC->CR, RCC_CR_MSIRDY) != 0U) && (RCC_OscInitStruct->MSIState == RCC_MSI_OFF))
 8001422:	6823      	ldr	r3, [r4, #0]
 8001424:	0798      	lsls	r0, r3, #30
 8001426:	d502      	bpl.n	800142e <HAL_RCC_OscConfig+0x36>
 8001428:	69ab      	ldr	r3, [r5, #24]
 800142a:	2b00      	cmp	r3, #0
 800142c:	d0e8      	beq.n	8001400 <HAL_RCC_OscConfig+0x8>
        if(RCC_OscInitStruct->MSIClockRange > __HAL_RCC_GET_MSI_RANGE())
 800142e:	6823      	ldr	r3, [r4, #0]
 8001430:	6a28      	ldr	r0, [r5, #32]
 8001432:	0719      	lsls	r1, r3, #28
 8001434:	bf56      	itet	pl
 8001436:	f8d4 3094 	ldrpl.w	r3, [r4, #148]	; 0x94
 800143a:	6823      	ldrmi	r3, [r4, #0]
 800143c:	091b      	lsrpl	r3, r3, #4
 800143e:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 8001442:	4283      	cmp	r3, r0
 8001444:	d228      	bcs.n	8001498 <HAL_RCC_OscConfig+0xa0>
          if(RCC_SetFlashLatencyFromMSIRange(RCC_OscInitStruct->MSIClockRange) != HAL_OK)
 8001446:	f7ff ff41 	bl	80012cc <RCC_SetFlashLatencyFromMSIRange>
 800144a:	2800      	cmp	r0, #0
 800144c:	d1d8      	bne.n	8001400 <HAL_RCC_OscConfig+0x8>
          __HAL_RCC_MSI_RANGE_CONFIG(RCC_OscInitStruct->MSIClockRange);
 800144e:	6823      	ldr	r3, [r4, #0]
 8001450:	f043 0308 	orr.w	r3, r3, #8
 8001454:	6023      	str	r3, [r4, #0]
 8001456:	6823      	ldr	r3, [r4, #0]
 8001458:	6a2a      	ldr	r2, [r5, #32]
 800145a:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 800145e:	4313      	orrs	r3, r2
 8001460:	6023      	str	r3, [r4, #0]
          __HAL_RCC_MSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->MSICalibrationValue);
 8001462:	6863      	ldr	r3, [r4, #4]
 8001464:	69ea      	ldr	r2, [r5, #28]
 8001466:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 800146a:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 800146e:	6063      	str	r3, [r4, #4]
        SystemCoreClock = HAL_RCC_GetSysClockFreq() >> (AHBPrescTable[READ_BIT(RCC->CFGR, RCC_CFGR_HPRE) >> RCC_CFGR_HPRE_Pos] & 0x1FU);
 8001470:	f7ff ff6e 	bl	8001350 <HAL_RCC_GetSysClockFreq>
 8001474:	68a3      	ldr	r3, [r4, #8]
 8001476:	4a8d      	ldr	r2, [pc, #564]	; (80016ac <HAL_RCC_OscConfig+0x2b4>)
 8001478:	f3c3 1303 	ubfx	r3, r3, #4, #4
 800147c:	5cd3      	ldrb	r3, [r2, r3]
 800147e:	f003 031f 	and.w	r3, r3, #31
 8001482:	40d8      	lsrs	r0, r3
 8001484:	4b8a      	ldr	r3, [pc, #552]	; (80016b0 <HAL_RCC_OscConfig+0x2b8>)
 8001486:	6018      	str	r0, [r3, #0]
        status = HAL_InitTick (TICK_INT_PRIORITY);
 8001488:	2000      	movs	r0, #0
 800148a:	f7ff fd61 	bl	8000f50 <HAL_InitTick>
        if(status != HAL_OK)
 800148e:	2800      	cmp	r0, #0
 8001490:	d035      	beq.n	80014fe <HAL_RCC_OscConfig+0x106>
}
 8001492:	b003      	add	sp, #12
 8001494:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
          __HAL_RCC_MSI_RANGE_CONFIG(RCC_OscInitStruct->MSIClockRange);
 8001498:	6823      	ldr	r3, [r4, #0]
 800149a:	f043 0308 	orr.w	r3, r3, #8
 800149e:	6023      	str	r3, [r4, #0]
 80014a0:	6823      	ldr	r3, [r4, #0]
 80014a2:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 80014a6:	4303      	orrs	r3, r0
 80014a8:	6023      	str	r3, [r4, #0]
          __HAL_RCC_MSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->MSICalibrationValue);
 80014aa:	6863      	ldr	r3, [r4, #4]
 80014ac:	69ea      	ldr	r2, [r5, #28]
 80014ae:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 80014b2:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 80014b6:	6063      	str	r3, [r4, #4]
          if(RCC_SetFlashLatencyFromMSIRange(RCC_OscInitStruct->MSIClockRange) != HAL_OK)
 80014b8:	f7ff ff08 	bl	80012cc <RCC_SetFlashLatencyFromMSIRange>
 80014bc:	2800      	cmp	r0, #0
 80014be:	d0d7      	beq.n	8001470 <HAL_RCC_OscConfig+0x78>
 80014c0:	e79e      	b.n	8001400 <HAL_RCC_OscConfig+0x8>
      if(RCC_OscInitStruct->MSIState != RCC_MSI_OFF)
 80014c2:	69ab      	ldr	r3, [r5, #24]
 80014c4:	2b00      	cmp	r3, #0
 80014c6:	d03a      	beq.n	800153e <HAL_RCC_OscConfig+0x146>
        __HAL_RCC_MSI_ENABLE();
 80014c8:	6823      	ldr	r3, [r4, #0]
 80014ca:	f043 0301 	orr.w	r3, r3, #1
 80014ce:	6023      	str	r3, [r4, #0]
        tickstart = HAL_GetTick();
 80014d0:	f7ff fd6e 	bl	8000fb0 <HAL_GetTick>
 80014d4:	4680      	mov	r8, r0
        while(READ_BIT(RCC->CR, RCC_CR_MSIRDY) == 0U)
 80014d6:	6823      	ldr	r3, [r4, #0]
 80014d8:	079a      	lsls	r2, r3, #30
 80014da:	d528      	bpl.n	800152e <HAL_RCC_OscConfig+0x136>
        __HAL_RCC_MSI_RANGE_CONFIG(RCC_OscInitStruct->MSIClockRange);
 80014dc:	6823      	ldr	r3, [r4, #0]
 80014de:	f043 0308 	orr.w	r3, r3, #8
 80014e2:	6023      	str	r3, [r4, #0]
 80014e4:	6823      	ldr	r3, [r4, #0]
 80014e6:	6a2a      	ldr	r2, [r5, #32]
 80014e8:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 80014ec:	4313      	orrs	r3, r2
 80014ee:	6023      	str	r3, [r4, #0]
        __HAL_RCC_MSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->MSICalibrationValue);
 80014f0:	6863      	ldr	r3, [r4, #4]
 80014f2:	69ea      	ldr	r2, [r5, #28]
 80014f4:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 80014f8:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 80014fc:	6063      	str	r3, [r4, #4]
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 80014fe:	682b      	ldr	r3, [r5, #0]
 8001500:	07d8      	lsls	r0, r3, #31
 8001502:	d42d      	bmi.n	8001560 <HAL_RCC_OscConfig+0x168>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 8001504:	682b      	ldr	r3, [r5, #0]
 8001506:	0799      	lsls	r1, r3, #30
 8001508:	d46b      	bmi.n	80015e2 <HAL_RCC_OscConfig+0x1ea>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800150a:	682b      	ldr	r3, [r5, #0]
 800150c:	0718      	lsls	r0, r3, #28
 800150e:	f100 80a0 	bmi.w	8001652 <HAL_RCC_OscConfig+0x25a>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8001512:	682b      	ldr	r3, [r5, #0]
 8001514:	0759      	lsls	r1, r3, #29
 8001516:	f100 80cd 	bmi.w	80016b4 <HAL_RCC_OscConfig+0x2bc>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI48) == RCC_OSCILLATORTYPE_HSI48)
 800151a:	682b      	ldr	r3, [r5, #0]
 800151c:	0699      	lsls	r1, r3, #26
 800151e:	f100 8136 	bmi.w	800178e <HAL_RCC_OscConfig+0x396>
  if(RCC_OscInitStruct->PLL.PLLState != RCC_PLL_NONE)
 8001522:	6aab      	ldr	r3, [r5, #40]	; 0x28
 8001524:	2b00      	cmp	r3, #0
 8001526:	f040 815c 	bne.w	80017e2 <HAL_RCC_OscConfig+0x3ea>
  return HAL_OK;
 800152a:	2000      	movs	r0, #0
 800152c:	e7b1      	b.n	8001492 <HAL_RCC_OscConfig+0x9a>
          if((HAL_GetTick() - tickstart) > MSI_TIMEOUT_VALUE)
 800152e:	f7ff fd3f 	bl	8000fb0 <HAL_GetTick>
 8001532:	eba0 0008 	sub.w	r0, r0, r8
 8001536:	2802      	cmp	r0, #2
 8001538:	d9cd      	bls.n	80014d6 <HAL_RCC_OscConfig+0xde>
            return HAL_TIMEOUT;
 800153a:	2003      	movs	r0, #3
 800153c:	e7a9      	b.n	8001492 <HAL_RCC_OscConfig+0x9a>
        __HAL_RCC_MSI_DISABLE();
 800153e:	6823      	ldr	r3, [r4, #0]
 8001540:	f023 0301 	bic.w	r3, r3, #1
 8001544:	6023      	str	r3, [r4, #0]
        tickstart = HAL_GetTick();
 8001546:	f7ff fd33 	bl	8000fb0 <HAL_GetTick>
 800154a:	4680      	mov	r8, r0
        while(READ_BIT(RCC->CR, RCC_CR_MSIRDY) != 0U)
 800154c:	6823      	ldr	r3, [r4, #0]
 800154e:	079b      	lsls	r3, r3, #30
 8001550:	d5d5      	bpl.n	80014fe <HAL_RCC_OscConfig+0x106>
          if((HAL_GetTick() - tickstart) > MSI_TIMEOUT_VALUE)
 8001552:	f7ff fd2d 	bl	8000fb0 <HAL_GetTick>
 8001556:	eba0 0008 	sub.w	r0, r0, r8
 800155a:	2802      	cmp	r0, #2
 800155c:	d9f6      	bls.n	800154c <HAL_RCC_OscConfig+0x154>
 800155e:	e7ec      	b.n	800153a <HAL_RCC_OscConfig+0x142>
    if((sysclk_source == RCC_CFGR_SWS_HSE) ||
 8001560:	2e08      	cmp	r6, #8
 8001562:	d003      	beq.n	800156c <HAL_RCC_OscConfig+0x174>
 8001564:	2e0c      	cmp	r6, #12
 8001566:	d108      	bne.n	800157a <HAL_RCC_OscConfig+0x182>
       ((sysclk_source == RCC_CFGR_SWS_PLL) && (pll_oscsource == RCC_PLLSOURCE_HSE)))
 8001568:	2f03      	cmp	r7, #3
 800156a:	d106      	bne.n	800157a <HAL_RCC_OscConfig+0x182>
      if((READ_BIT(RCC->CR, RCC_CR_HSERDY) != 0U) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 800156c:	6823      	ldr	r3, [r4, #0]
 800156e:	039a      	lsls	r2, r3, #14
 8001570:	d5c8      	bpl.n	8001504 <HAL_RCC_OscConfig+0x10c>
 8001572:	686b      	ldr	r3, [r5, #4]
 8001574:	2b00      	cmp	r3, #0
 8001576:	d1c5      	bne.n	8001504 <HAL_RCC_OscConfig+0x10c>
 8001578:	e742      	b.n	8001400 <HAL_RCC_OscConfig+0x8>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800157a:	686b      	ldr	r3, [r5, #4]
 800157c:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8001580:	d110      	bne.n	80015a4 <HAL_RCC_OscConfig+0x1ac>
 8001582:	6823      	ldr	r3, [r4, #0]
 8001584:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8001588:	6023      	str	r3, [r4, #0]
        tickstart = HAL_GetTick();
 800158a:	f7ff fd11 	bl	8000fb0 <HAL_GetTick>
 800158e:	4680      	mov	r8, r0
        while(READ_BIT(RCC->CR, RCC_CR_HSERDY) == 0U)
 8001590:	6823      	ldr	r3, [r4, #0]
 8001592:	039b      	lsls	r3, r3, #14
 8001594:	d4b6      	bmi.n	8001504 <HAL_RCC_OscConfig+0x10c>
          if((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 8001596:	f7ff fd0b 	bl	8000fb0 <HAL_GetTick>
 800159a:	eba0 0008 	sub.w	r0, r0, r8
 800159e:	2864      	cmp	r0, #100	; 0x64
 80015a0:	d9f6      	bls.n	8001590 <HAL_RCC_OscConfig+0x198>
 80015a2:	e7ca      	b.n	800153a <HAL_RCC_OscConfig+0x142>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 80015a4:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 80015a8:	d104      	bne.n	80015b4 <HAL_RCC_OscConfig+0x1bc>
 80015aa:	6823      	ldr	r3, [r4, #0]
 80015ac:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 80015b0:	6023      	str	r3, [r4, #0]
 80015b2:	e7e6      	b.n	8001582 <HAL_RCC_OscConfig+0x18a>
 80015b4:	6822      	ldr	r2, [r4, #0]
 80015b6:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 80015ba:	6022      	str	r2, [r4, #0]
 80015bc:	6822      	ldr	r2, [r4, #0]
 80015be:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 80015c2:	6022      	str	r2, [r4, #0]
      if(RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
 80015c4:	2b00      	cmp	r3, #0
 80015c6:	d1e0      	bne.n	800158a <HAL_RCC_OscConfig+0x192>
        tickstart = HAL_GetTick();
 80015c8:	f7ff fcf2 	bl	8000fb0 <HAL_GetTick>
 80015cc:	4680      	mov	r8, r0
        while(READ_BIT(RCC->CR, RCC_CR_HSERDY) != 0U)
 80015ce:	6823      	ldr	r3, [r4, #0]
 80015d0:	0398      	lsls	r0, r3, #14
 80015d2:	d597      	bpl.n	8001504 <HAL_RCC_OscConfig+0x10c>
          if((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 80015d4:	f7ff fcec 	bl	8000fb0 <HAL_GetTick>
 80015d8:	eba0 0008 	sub.w	r0, r0, r8
 80015dc:	2864      	cmp	r0, #100	; 0x64
 80015de:	d9f6      	bls.n	80015ce <HAL_RCC_OscConfig+0x1d6>
 80015e0:	e7ab      	b.n	800153a <HAL_RCC_OscConfig+0x142>
    if((sysclk_source == RCC_CFGR_SWS_HSI) ||
 80015e2:	2e04      	cmp	r6, #4
 80015e4:	d003      	beq.n	80015ee <HAL_RCC_OscConfig+0x1f6>
 80015e6:	2e0c      	cmp	r6, #12
 80015e8:	d110      	bne.n	800160c <HAL_RCC_OscConfig+0x214>
       ((sysclk_source == RCC_CFGR_SWS_PLL) && (pll_oscsource == RCC_PLLSOURCE_HSI)))
 80015ea:	2f02      	cmp	r7, #2
 80015ec:	d10e      	bne.n	800160c <HAL_RCC_OscConfig+0x214>
      if((READ_BIT(RCC->CR, RCC_CR_HSIRDY) != 0U) && (RCC_OscInitStruct->HSIState == RCC_HSI_OFF))
 80015ee:	6823      	ldr	r3, [r4, #0]
 80015f0:	0559      	lsls	r1, r3, #21
 80015f2:	d503      	bpl.n	80015fc <HAL_RCC_OscConfig+0x204>
 80015f4:	68eb      	ldr	r3, [r5, #12]
 80015f6:	2b00      	cmp	r3, #0
 80015f8:	f43f af02 	beq.w	8001400 <HAL_RCC_OscConfig+0x8>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 80015fc:	6863      	ldr	r3, [r4, #4]
 80015fe:	692a      	ldr	r2, [r5, #16]
 8001600:	f023 53f8 	bic.w	r3, r3, #520093696	; 0x1f000000
 8001604:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 8001608:	6063      	str	r3, [r4, #4]
 800160a:	e77e      	b.n	800150a <HAL_RCC_OscConfig+0x112>
      if(RCC_OscInitStruct->HSIState != RCC_HSI_OFF)
 800160c:	68eb      	ldr	r3, [r5, #12]
 800160e:	b17b      	cbz	r3, 8001630 <HAL_RCC_OscConfig+0x238>
        __HAL_RCC_HSI_ENABLE();
 8001610:	6823      	ldr	r3, [r4, #0]
 8001612:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8001616:	6023      	str	r3, [r4, #0]
        tickstart = HAL_GetTick();
 8001618:	f7ff fcca 	bl	8000fb0 <HAL_GetTick>
 800161c:	4607      	mov	r7, r0
        while(READ_BIT(RCC->CR, RCC_CR_HSIRDY) == 0U)
 800161e:	6823      	ldr	r3, [r4, #0]
 8001620:	055a      	lsls	r2, r3, #21
 8001622:	d4eb      	bmi.n	80015fc <HAL_RCC_OscConfig+0x204>
          if((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 8001624:	f7ff fcc4 	bl	8000fb0 <HAL_GetTick>
 8001628:	1bc0      	subs	r0, r0, r7
 800162a:	2802      	cmp	r0, #2
 800162c:	d9f7      	bls.n	800161e <HAL_RCC_OscConfig+0x226>
 800162e:	e784      	b.n	800153a <HAL_RCC_OscConfig+0x142>
        __HAL_RCC_HSI_DISABLE();
 8001630:	6823      	ldr	r3, [r4, #0]
 8001632:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8001636:	6023      	str	r3, [r4, #0]
        tickstart = HAL_GetTick();
 8001638:	f7ff fcba 	bl	8000fb0 <HAL_GetTick>
 800163c:	4607      	mov	r7, r0
        while(READ_BIT(RCC->CR, RCC_CR_HSIRDY) != 0U)
 800163e:	6823      	ldr	r3, [r4, #0]
 8001640:	055b      	lsls	r3, r3, #21
 8001642:	f57f af62 	bpl.w	800150a <HAL_RCC_OscConfig+0x112>
          if((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 8001646:	f7ff fcb3 	bl	8000fb0 <HAL_GetTick>
 800164a:	1bc0      	subs	r0, r0, r7
 800164c:	2802      	cmp	r0, #2
 800164e:	d9f6      	bls.n	800163e <HAL_RCC_OscConfig+0x246>
 8001650:	e773      	b.n	800153a <HAL_RCC_OscConfig+0x142>
    if(RCC_OscInitStruct->LSIState != RCC_LSI_OFF)
 8001652:	696b      	ldr	r3, [r5, #20]
 8001654:	b19b      	cbz	r3, 800167e <HAL_RCC_OscConfig+0x286>
      __HAL_RCC_LSI_ENABLE();
 8001656:	f8d4 3094 	ldr.w	r3, [r4, #148]	; 0x94
 800165a:	f043 0301 	orr.w	r3, r3, #1
 800165e:	f8c4 3094 	str.w	r3, [r4, #148]	; 0x94
      tickstart = HAL_GetTick();
 8001662:	f7ff fca5 	bl	8000fb0 <HAL_GetTick>
 8001666:	4607      	mov	r7, r0
      while(READ_BIT(RCC->CSR, RCC_CSR_LSIRDY) == 0U)
 8001668:	f8d4 3094 	ldr.w	r3, [r4, #148]	; 0x94
 800166c:	079a      	lsls	r2, r3, #30
 800166e:	f53f af50 	bmi.w	8001512 <HAL_RCC_OscConfig+0x11a>
        if((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 8001672:	f7ff fc9d 	bl	8000fb0 <HAL_GetTick>
 8001676:	1bc0      	subs	r0, r0, r7
 8001678:	2802      	cmp	r0, #2
 800167a:	d9f5      	bls.n	8001668 <HAL_RCC_OscConfig+0x270>
 800167c:	e75d      	b.n	800153a <HAL_RCC_OscConfig+0x142>
      __HAL_RCC_LSI_DISABLE();
 800167e:	f8d4 3094 	ldr.w	r3, [r4, #148]	; 0x94
 8001682:	f023 0301 	bic.w	r3, r3, #1
 8001686:	f8c4 3094 	str.w	r3, [r4, #148]	; 0x94
      tickstart = HAL_GetTick();
 800168a:	f7ff fc91 	bl	8000fb0 <HAL_GetTick>
 800168e:	4607      	mov	r7, r0
      while(READ_BIT(RCC->CSR, RCC_CSR_LSIRDY) != 0U)
 8001690:	f8d4 3094 	ldr.w	r3, [r4, #148]	; 0x94
 8001694:	079b      	lsls	r3, r3, #30
 8001696:	f57f af3c 	bpl.w	8001512 <HAL_RCC_OscConfig+0x11a>
        if((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 800169a:	f7ff fc89 	bl	8000fb0 <HAL_GetTick>
 800169e:	1bc0      	subs	r0, r0, r7
 80016a0:	2802      	cmp	r0, #2
 80016a2:	d9f5      	bls.n	8001690 <HAL_RCC_OscConfig+0x298>
 80016a4:	e749      	b.n	800153a <HAL_RCC_OscConfig+0x142>
 80016a6:	bf00      	nop
 80016a8:	40021000 	.word	0x40021000
 80016ac:	08007753 	.word	0x08007753
 80016b0:	20000000 	.word	0x20000000
    if(HAL_IS_BIT_CLR(RCC->APB1ENR1, RCC_APB1ENR1_PWREN))
 80016b4:	6da3      	ldr	r3, [r4, #88]	; 0x58
 80016b6:	00d8      	lsls	r0, r3, #3
 80016b8:	d429      	bmi.n	800170e <HAL_RCC_OscConfig+0x316>
      __HAL_RCC_PWR_CLK_ENABLE();
 80016ba:	6da3      	ldr	r3, [r4, #88]	; 0x58
 80016bc:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80016c0:	65a3      	str	r3, [r4, #88]	; 0x58
 80016c2:	6da3      	ldr	r3, [r4, #88]	; 0x58
 80016c4:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80016c8:	9301      	str	r3, [sp, #4]
 80016ca:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 80016cc:	f04f 0801 	mov.w	r8, #1
    if(HAL_IS_BIT_CLR(PWR->CR1, PWR_CR1_DBP))
 80016d0:	4f71      	ldr	r7, [pc, #452]	; (8001898 <HAL_RCC_OscConfig+0x4a0>)
 80016d2:	683b      	ldr	r3, [r7, #0]
 80016d4:	05d9      	lsls	r1, r3, #23
 80016d6:	d51d      	bpl.n	8001714 <HAL_RCC_OscConfig+0x31c>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 80016d8:	68ab      	ldr	r3, [r5, #8]
 80016da:	2b01      	cmp	r3, #1
 80016dc:	d12b      	bne.n	8001736 <HAL_RCC_OscConfig+0x33e>
 80016de:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 80016e2:	f043 0301 	orr.w	r3, r3, #1
 80016e6:	f8c4 3090 	str.w	r3, [r4, #144]	; 0x90
      tickstart = HAL_GetTick();
 80016ea:	f7ff fc61 	bl	8000fb0 <HAL_GetTick>
        if((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 80016ee:	f241 3988 	movw	r9, #5000	; 0x1388
      tickstart = HAL_GetTick();
 80016f2:	4607      	mov	r7, r0
      while(READ_BIT(RCC->BDCR, RCC_BDCR_LSERDY) == 0U)
 80016f4:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 80016f8:	079b      	lsls	r3, r3, #30
 80016fa:	d542      	bpl.n	8001782 <HAL_RCC_OscConfig+0x38a>
    if(pwrclkchanged == SET)
 80016fc:	f1b8 0f00 	cmp.w	r8, #0
 8001700:	f43f af0b 	beq.w	800151a <HAL_RCC_OscConfig+0x122>
      __HAL_RCC_PWR_CLK_DISABLE();
 8001704:	6da3      	ldr	r3, [r4, #88]	; 0x58
 8001706:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800170a:	65a3      	str	r3, [r4, #88]	; 0x58
 800170c:	e705      	b.n	800151a <HAL_RCC_OscConfig+0x122>
    FlagStatus       pwrclkchanged = RESET;
 800170e:	f04f 0800 	mov.w	r8, #0
 8001712:	e7dd      	b.n	80016d0 <HAL_RCC_OscConfig+0x2d8>
      SET_BIT(PWR->CR1, PWR_CR1_DBP);
 8001714:	683b      	ldr	r3, [r7, #0]
 8001716:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800171a:	603b      	str	r3, [r7, #0]
      tickstart = HAL_GetTick();
 800171c:	f7ff fc48 	bl	8000fb0 <HAL_GetTick>
 8001720:	4681      	mov	r9, r0
      while(HAL_IS_BIT_CLR(PWR->CR1, PWR_CR1_DBP))
 8001722:	683b      	ldr	r3, [r7, #0]
 8001724:	05da      	lsls	r2, r3, #23
 8001726:	d4d7      	bmi.n	80016d8 <HAL_RCC_OscConfig+0x2e0>
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8001728:	f7ff fc42 	bl	8000fb0 <HAL_GetTick>
 800172c:	eba0 0009 	sub.w	r0, r0, r9
 8001730:	2802      	cmp	r0, #2
 8001732:	d9f6      	bls.n	8001722 <HAL_RCC_OscConfig+0x32a>
 8001734:	e701      	b.n	800153a <HAL_RCC_OscConfig+0x142>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8001736:	2b05      	cmp	r3, #5
 8001738:	d106      	bne.n	8001748 <HAL_RCC_OscConfig+0x350>
 800173a:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800173e:	f043 0304 	orr.w	r3, r3, #4
 8001742:	f8c4 3090 	str.w	r3, [r4, #144]	; 0x90
 8001746:	e7ca      	b.n	80016de <HAL_RCC_OscConfig+0x2e6>
 8001748:	f8d4 2090 	ldr.w	r2, [r4, #144]	; 0x90
 800174c:	f022 0201 	bic.w	r2, r2, #1
 8001750:	f8c4 2090 	str.w	r2, [r4, #144]	; 0x90
 8001754:	f8d4 2090 	ldr.w	r2, [r4, #144]	; 0x90
 8001758:	f022 0204 	bic.w	r2, r2, #4
 800175c:	f8c4 2090 	str.w	r2, [r4, #144]	; 0x90
    if(RCC_OscInitStruct->LSEState != RCC_LSE_OFF)
 8001760:	2b00      	cmp	r3, #0
 8001762:	d1c2      	bne.n	80016ea <HAL_RCC_OscConfig+0x2f2>
      tickstart = HAL_GetTick();
 8001764:	f7ff fc24 	bl	8000fb0 <HAL_GetTick>
        if((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8001768:	f241 3988 	movw	r9, #5000	; 0x1388
      tickstart = HAL_GetTick();
 800176c:	4607      	mov	r7, r0
      while(READ_BIT(RCC->BDCR, RCC_BDCR_LSERDY) != 0U)
 800176e:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 8001772:	0798      	lsls	r0, r3, #30
 8001774:	d5c2      	bpl.n	80016fc <HAL_RCC_OscConfig+0x304>
        if((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8001776:	f7ff fc1b 	bl	8000fb0 <HAL_GetTick>
 800177a:	1bc0      	subs	r0, r0, r7
 800177c:	4548      	cmp	r0, r9
 800177e:	d9f6      	bls.n	800176e <HAL_RCC_OscConfig+0x376>
 8001780:	e6db      	b.n	800153a <HAL_RCC_OscConfig+0x142>
        if((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8001782:	f7ff fc15 	bl	8000fb0 <HAL_GetTick>
 8001786:	1bc0      	subs	r0, r0, r7
 8001788:	4548      	cmp	r0, r9
 800178a:	d9b3      	bls.n	80016f4 <HAL_RCC_OscConfig+0x2fc>
 800178c:	e6d5      	b.n	800153a <HAL_RCC_OscConfig+0x142>
    if(RCC_OscInitStruct->HSI48State != RCC_HSI48_OFF)
 800178e:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 8001790:	b19b      	cbz	r3, 80017ba <HAL_RCC_OscConfig+0x3c2>
      __HAL_RCC_HSI48_ENABLE();
 8001792:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
 8001796:	f043 0301 	orr.w	r3, r3, #1
 800179a:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
      tickstart = HAL_GetTick();
 800179e:	f7ff fc07 	bl	8000fb0 <HAL_GetTick>
 80017a2:	4607      	mov	r7, r0
      while(READ_BIT(RCC->CRRCR, RCC_CRRCR_HSI48RDY) == 0U)
 80017a4:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
 80017a8:	079a      	lsls	r2, r3, #30
 80017aa:	f53f aeba 	bmi.w	8001522 <HAL_RCC_OscConfig+0x12a>
        if((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
 80017ae:	f7ff fbff 	bl	8000fb0 <HAL_GetTick>
 80017b2:	1bc0      	subs	r0, r0, r7
 80017b4:	2802      	cmp	r0, #2
 80017b6:	d9f5      	bls.n	80017a4 <HAL_RCC_OscConfig+0x3ac>
 80017b8:	e6bf      	b.n	800153a <HAL_RCC_OscConfig+0x142>
      __HAL_RCC_HSI48_DISABLE();
 80017ba:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
 80017be:	f023 0301 	bic.w	r3, r3, #1
 80017c2:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
      tickstart = HAL_GetTick();
 80017c6:	f7ff fbf3 	bl	8000fb0 <HAL_GetTick>
 80017ca:	4607      	mov	r7, r0
      while(READ_BIT(RCC->CRRCR, RCC_CRRCR_HSI48RDY) != 0U)
 80017cc:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
 80017d0:	079b      	lsls	r3, r3, #30
 80017d2:	f57f aea6 	bpl.w	8001522 <HAL_RCC_OscConfig+0x12a>
        if((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
 80017d6:	f7ff fbeb 	bl	8000fb0 <HAL_GetTick>
 80017da:	1bc0      	subs	r0, r0, r7
 80017dc:	2802      	cmp	r0, #2
 80017de:	d9f5      	bls.n	80017cc <HAL_RCC_OscConfig+0x3d4>
 80017e0:	e6ab      	b.n	800153a <HAL_RCC_OscConfig+0x142>
    if(sysclk_source != RCC_CFGR_SWS_PLL)
 80017e2:	2e0c      	cmp	r6, #12
 80017e4:	f43f ae0c 	beq.w	8001400 <HAL_RCC_OscConfig+0x8>
      if(RCC_OscInitStruct->PLL.PLLState == RCC_PLL_ON)
 80017e8:	2b02      	cmp	r3, #2
        __HAL_RCC_PLL_DISABLE();
 80017ea:	6823      	ldr	r3, [r4, #0]
 80017ec:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 80017f0:	6023      	str	r3, [r4, #0]
      if(RCC_OscInitStruct->PLL.PLLState == RCC_PLL_ON)
 80017f2:	d136      	bne.n	8001862 <HAL_RCC_OscConfig+0x46a>
        tickstart = HAL_GetTick();
 80017f4:	f7ff fbdc 	bl	8000fb0 <HAL_GetTick>
 80017f8:	4606      	mov	r6, r0
        while(READ_BIT(RCC->CR, RCC_CR_PLLRDY) != 0U)
 80017fa:	6823      	ldr	r3, [r4, #0]
 80017fc:	0198      	lsls	r0, r3, #6
 80017fe:	d42a      	bmi.n	8001856 <HAL_RCC_OscConfig+0x45e>
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 8001800:	6bab      	ldr	r3, [r5, #56]	; 0x38
 8001802:	6b6a      	ldr	r2, [r5, #52]	; 0x34
 8001804:	06db      	lsls	r3, r3, #27
 8001806:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 800180a:	6aea      	ldr	r2, [r5, #44]	; 0x2c
 800180c:	4313      	orrs	r3, r2
 800180e:	6b2a      	ldr	r2, [r5, #48]	; 0x30
 8001810:	3a01      	subs	r2, #1
 8001812:	ea43 1302 	orr.w	r3, r3, r2, lsl #4
 8001816:	6bea      	ldr	r2, [r5, #60]	; 0x3c
 8001818:	0852      	lsrs	r2, r2, #1
 800181a:	3a01      	subs	r2, #1
 800181c:	ea43 5342 	orr.w	r3, r3, r2, lsl #21
 8001820:	6c2a      	ldr	r2, [r5, #64]	; 0x40
 8001822:	0852      	lsrs	r2, r2, #1
 8001824:	3a01      	subs	r2, #1
 8001826:	ea43 6342 	orr.w	r3, r3, r2, lsl #25
 800182a:	60e3      	str	r3, [r4, #12]
        __HAL_RCC_PLL_ENABLE();
 800182c:	6823      	ldr	r3, [r4, #0]
 800182e:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8001832:	6023      	str	r3, [r4, #0]
         __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL_SYSCLK);
 8001834:	68e3      	ldr	r3, [r4, #12]
 8001836:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 800183a:	60e3      	str	r3, [r4, #12]
        tickstart = HAL_GetTick();
 800183c:	f7ff fbb8 	bl	8000fb0 <HAL_GetTick>
 8001840:	4605      	mov	r5, r0
        while(READ_BIT(RCC->CR, RCC_CR_PLLRDY) == 0U)
 8001842:	6823      	ldr	r3, [r4, #0]
 8001844:	0199      	lsls	r1, r3, #6
 8001846:	f53f ae70 	bmi.w	800152a <HAL_RCC_OscConfig+0x132>
          if((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 800184a:	f7ff fbb1 	bl	8000fb0 <HAL_GetTick>
 800184e:	1b40      	subs	r0, r0, r5
 8001850:	2802      	cmp	r0, #2
 8001852:	d9f6      	bls.n	8001842 <HAL_RCC_OscConfig+0x44a>
 8001854:	e671      	b.n	800153a <HAL_RCC_OscConfig+0x142>
          if((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8001856:	f7ff fbab 	bl	8000fb0 <HAL_GetTick>
 800185a:	1b80      	subs	r0, r0, r6
 800185c:	2802      	cmp	r0, #2
 800185e:	d9cc      	bls.n	80017fa <HAL_RCC_OscConfig+0x402>
 8001860:	e66b      	b.n	800153a <HAL_RCC_OscConfig+0x142>
        if(READ_BIT(RCC->CR, RCC_CR_PLLSAI1RDY) == 0U)
 8001862:	6823      	ldr	r3, [r4, #0]
 8001864:	011a      	lsls	r2, r3, #4
          MODIFY_REG(RCC->PLLCFGR, RCC_PLLCFGR_PLLSRC, RCC_PLLSOURCE_NONE);
 8001866:	bf5e      	ittt	pl
 8001868:	68e3      	ldrpl	r3, [r4, #12]
 800186a:	f023 0303 	bicpl.w	r3, r3, #3
 800186e:	60e3      	strpl	r3, [r4, #12]
        __HAL_RCC_PLLCLKOUT_DISABLE(RCC_PLL_SYSCLK | RCC_PLL_48M1CLK | RCC_PLL_SAI2CLK);
 8001870:	68e3      	ldr	r3, [r4, #12]
 8001872:	f023 7388 	bic.w	r3, r3, #17825792	; 0x1100000
 8001876:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 800187a:	60e3      	str	r3, [r4, #12]
        tickstart = HAL_GetTick();
 800187c:	f7ff fb98 	bl	8000fb0 <HAL_GetTick>
 8001880:	4605      	mov	r5, r0
        while(READ_BIT(RCC->CR, RCC_CR_PLLRDY) != 0U)
 8001882:	6823      	ldr	r3, [r4, #0]
 8001884:	019b      	lsls	r3, r3, #6
 8001886:	f57f ae50 	bpl.w	800152a <HAL_RCC_OscConfig+0x132>
          if((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 800188a:	f7ff fb91 	bl	8000fb0 <HAL_GetTick>
 800188e:	1b40      	subs	r0, r0, r5
 8001890:	2802      	cmp	r0, #2
 8001892:	d9f6      	bls.n	8001882 <HAL_RCC_OscConfig+0x48a>
 8001894:	e651      	b.n	800153a <HAL_RCC_OscConfig+0x142>
 8001896:	bf00      	nop
 8001898:	40007000 	.word	0x40007000

0800189c <HAL_RCC_ClockConfig>:
{
 800189c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80018a0:	460e      	mov	r6, r1
  if(RCC_ClkInitStruct == NULL)
 80018a2:	4604      	mov	r4, r0
 80018a4:	b910      	cbnz	r0, 80018ac <HAL_RCC_ClockConfig+0x10>
    return HAL_ERROR;
 80018a6:	2001      	movs	r0, #1
 80018a8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 80018ac:	4a40      	ldr	r2, [pc, #256]	; (80019b0 <HAL_RCC_ClockConfig+0x114>)
 80018ae:	6813      	ldr	r3, [r2, #0]
 80018b0:	f003 0307 	and.w	r3, r3, #7
 80018b4:	428b      	cmp	r3, r1
 80018b6:	d329      	bcc.n	800190c <HAL_RCC_ClockConfig+0x70>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 80018b8:	6823      	ldr	r3, [r4, #0]
 80018ba:	07d9      	lsls	r1, r3, #31
 80018bc:	d431      	bmi.n	8001922 <HAL_RCC_ClockConfig+0x86>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 80018be:	6821      	ldr	r1, [r4, #0]
 80018c0:	078a      	lsls	r2, r1, #30
 80018c2:	d45b      	bmi.n	800197c <HAL_RCC_ClockConfig+0xe0>
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 80018c4:	4a3a      	ldr	r2, [pc, #232]	; (80019b0 <HAL_RCC_ClockConfig+0x114>)
 80018c6:	6813      	ldr	r3, [r2, #0]
 80018c8:	f003 0307 	and.w	r3, r3, #7
 80018cc:	429e      	cmp	r6, r3
 80018ce:	d35d      	bcc.n	800198c <HAL_RCC_ClockConfig+0xf0>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 80018d0:	f011 0f04 	tst.w	r1, #4
 80018d4:	4d37      	ldr	r5, [pc, #220]	; (80019b4 <HAL_RCC_ClockConfig+0x118>)
 80018d6:	d164      	bne.n	80019a2 <HAL_RCC_ClockConfig+0x106>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 80018d8:	070b      	lsls	r3, r1, #28
 80018da:	d506      	bpl.n	80018ea <HAL_RCC_ClockConfig+0x4e>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 80018dc:	68ab      	ldr	r3, [r5, #8]
 80018de:	6922      	ldr	r2, [r4, #16]
 80018e0:	f423 5360 	bic.w	r3, r3, #14336	; 0x3800
 80018e4:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 80018e8:	60ab      	str	r3, [r5, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> (AHBPrescTable[READ_BIT(RCC->CFGR, RCC_CFGR_HPRE) >> RCC_CFGR_HPRE_Pos] & 0x1FU);
 80018ea:	f7ff fd31 	bl	8001350 <HAL_RCC_GetSysClockFreq>
 80018ee:	68ab      	ldr	r3, [r5, #8]
 80018f0:	4a31      	ldr	r2, [pc, #196]	; (80019b8 <HAL_RCC_ClockConfig+0x11c>)
 80018f2:	f3c3 1303 	ubfx	r3, r3, #4, #4
}
 80018f6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> (AHBPrescTable[READ_BIT(RCC->CFGR, RCC_CFGR_HPRE) >> RCC_CFGR_HPRE_Pos] & 0x1FU);
 80018fa:	5cd3      	ldrb	r3, [r2, r3]
 80018fc:	f003 031f 	and.w	r3, r3, #31
 8001900:	40d8      	lsrs	r0, r3
 8001902:	4b2e      	ldr	r3, [pc, #184]	; (80019bc <HAL_RCC_ClockConfig+0x120>)
 8001904:	6018      	str	r0, [r3, #0]
  status = HAL_InitTick (TICK_INT_PRIORITY);
 8001906:	2000      	movs	r0, #0
 8001908:	f7ff bb22 	b.w	8000f50 <HAL_InitTick>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800190c:	6813      	ldr	r3, [r2, #0]
 800190e:	f023 0307 	bic.w	r3, r3, #7
 8001912:	430b      	orrs	r3, r1
 8001914:	6013      	str	r3, [r2, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8001916:	6813      	ldr	r3, [r2, #0]
 8001918:	f003 0307 	and.w	r3, r3, #7
 800191c:	4299      	cmp	r1, r3
 800191e:	d1c2      	bne.n	80018a6 <HAL_RCC_ClockConfig+0xa>
 8001920:	e7ca      	b.n	80018b8 <HAL_RCC_ClockConfig+0x1c>
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 8001922:	6862      	ldr	r2, [r4, #4]
 8001924:	4d23      	ldr	r5, [pc, #140]	; (80019b4 <HAL_RCC_ClockConfig+0x118>)
 8001926:	2a03      	cmp	r2, #3
      if(READ_BIT(RCC->CR, RCC_CR_PLLRDY) == 0U)
 8001928:	682b      	ldr	r3, [r5, #0]
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 800192a:	d11b      	bne.n	8001964 <HAL_RCC_ClockConfig+0xc8>
      if(READ_BIT(RCC->CR, RCC_CR_PLLRDY) == 0U)
 800192c:	f013 7f00 	tst.w	r3, #33554432	; 0x2000000
        if(READ_BIT(RCC->CR, RCC_CR_HSIRDY) == 0U)
 8001930:	d0b9      	beq.n	80018a6 <HAL_RCC_ClockConfig+0xa>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_SW, RCC_ClkInitStruct->SYSCLKSource);
 8001932:	68ab      	ldr	r3, [r5, #8]
 8001934:	f023 0303 	bic.w	r3, r3, #3
 8001938:	4313      	orrs	r3, r2
 800193a:	60ab      	str	r3, [r5, #8]
    tickstart = HAL_GetTick();
 800193c:	f7ff fb38 	bl	8000fb0 <HAL_GetTick>
      if((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8001940:	f241 3888 	movw	r8, #5000	; 0x1388
    tickstart = HAL_GetTick();
 8001944:	4607      	mov	r7, r0
    while(__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8001946:	68ab      	ldr	r3, [r5, #8]
 8001948:	6862      	ldr	r2, [r4, #4]
 800194a:	f003 030c 	and.w	r3, r3, #12
 800194e:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 8001952:	d0b4      	beq.n	80018be <HAL_RCC_ClockConfig+0x22>
      if((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8001954:	f7ff fb2c 	bl	8000fb0 <HAL_GetTick>
 8001958:	1bc0      	subs	r0, r0, r7
 800195a:	4540      	cmp	r0, r8
 800195c:	d9f3      	bls.n	8001946 <HAL_RCC_ClockConfig+0xaa>
        return HAL_TIMEOUT;
 800195e:	2003      	movs	r0, #3
}
 8001960:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8001964:	2a02      	cmp	r2, #2
 8001966:	d102      	bne.n	800196e <HAL_RCC_ClockConfig+0xd2>
        if(READ_BIT(RCC->CR, RCC_CR_HSERDY) == 0U)
 8001968:	f413 3f00 	tst.w	r3, #131072	; 0x20000
 800196c:	e7e0      	b.n	8001930 <HAL_RCC_ClockConfig+0x94>
      else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_MSI)
 800196e:	b912      	cbnz	r2, 8001976 <HAL_RCC_ClockConfig+0xda>
        if(READ_BIT(RCC->CR, RCC_CR_MSIRDY) == 0U)
 8001970:	f013 0f02 	tst.w	r3, #2
 8001974:	e7dc      	b.n	8001930 <HAL_RCC_ClockConfig+0x94>
        if(READ_BIT(RCC->CR, RCC_CR_HSIRDY) == 0U)
 8001976:	f413 6f80 	tst.w	r3, #1024	; 0x400
 800197a:	e7d9      	b.n	8001930 <HAL_RCC_ClockConfig+0x94>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 800197c:	4a0d      	ldr	r2, [pc, #52]	; (80019b4 <HAL_RCC_ClockConfig+0x118>)
 800197e:	68a0      	ldr	r0, [r4, #8]
 8001980:	6893      	ldr	r3, [r2, #8]
 8001982:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8001986:	4303      	orrs	r3, r0
 8001988:	6093      	str	r3, [r2, #8]
 800198a:	e79b      	b.n	80018c4 <HAL_RCC_ClockConfig+0x28>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800198c:	6813      	ldr	r3, [r2, #0]
 800198e:	f023 0307 	bic.w	r3, r3, #7
 8001992:	4333      	orrs	r3, r6
 8001994:	6013      	str	r3, [r2, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8001996:	6813      	ldr	r3, [r2, #0]
 8001998:	f003 0307 	and.w	r3, r3, #7
 800199c:	429e      	cmp	r6, r3
 800199e:	d182      	bne.n	80018a6 <HAL_RCC_ClockConfig+0xa>
 80019a0:	e796      	b.n	80018d0 <HAL_RCC_ClockConfig+0x34>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 80019a2:	68ab      	ldr	r3, [r5, #8]
 80019a4:	68e2      	ldr	r2, [r4, #12]
 80019a6:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 80019aa:	4313      	orrs	r3, r2
 80019ac:	60ab      	str	r3, [r5, #8]
 80019ae:	e793      	b.n	80018d8 <HAL_RCC_ClockConfig+0x3c>
 80019b0:	40022000 	.word	0x40022000
 80019b4:	40021000 	.word	0x40021000
 80019b8:	08007753 	.word	0x08007753
 80019bc:	20000000 	.word	0x20000000

080019c0 <HAL_RCC_GetHCLKFreq>:
}
 80019c0:	4b01      	ldr	r3, [pc, #4]	; (80019c8 <HAL_RCC_GetHCLKFreq+0x8>)
 80019c2:	6818      	ldr	r0, [r3, #0]
 80019c4:	4770      	bx	lr
 80019c6:	bf00      	nop
 80019c8:	20000000 	.word	0x20000000

080019cc <HAL_RCC_GetPCLK1Freq>:
  return (HAL_RCC_GetHCLKFreq() >> (APBPrescTable[READ_BIT(RCC->CFGR, RCC_CFGR_PPRE1) >> RCC_CFGR_PPRE1_Pos] & 0x1FU));
 80019cc:	4b05      	ldr	r3, [pc, #20]	; (80019e4 <HAL_RCC_GetPCLK1Freq+0x18>)
 80019ce:	4a06      	ldr	r2, [pc, #24]	; (80019e8 <HAL_RCC_GetPCLK1Freq+0x1c>)
 80019d0:	689b      	ldr	r3, [r3, #8]
 80019d2:	f3c3 2302 	ubfx	r3, r3, #8, #3
 80019d6:	5cd3      	ldrb	r3, [r2, r3]
 80019d8:	4a04      	ldr	r2, [pc, #16]	; (80019ec <HAL_RCC_GetPCLK1Freq+0x20>)
 80019da:	6810      	ldr	r0, [r2, #0]
 80019dc:	f003 031f 	and.w	r3, r3, #31
}
 80019e0:	40d8      	lsrs	r0, r3
 80019e2:	4770      	bx	lr
 80019e4:	40021000 	.word	0x40021000
 80019e8:	08007763 	.word	0x08007763
 80019ec:	20000000 	.word	0x20000000

080019f0 <HAL_RCC_GetPCLK2Freq>:
  return (HAL_RCC_GetHCLKFreq()>> (APBPrescTable[READ_BIT(RCC->CFGR, RCC_CFGR_PPRE2) >> RCC_CFGR_PPRE2_Pos] & 0x1FU));
 80019f0:	4b05      	ldr	r3, [pc, #20]	; (8001a08 <HAL_RCC_GetPCLK2Freq+0x18>)
 80019f2:	4a06      	ldr	r2, [pc, #24]	; (8001a0c <HAL_RCC_GetPCLK2Freq+0x1c>)
 80019f4:	689b      	ldr	r3, [r3, #8]
 80019f6:	f3c3 23c2 	ubfx	r3, r3, #11, #3
 80019fa:	5cd3      	ldrb	r3, [r2, r3]
 80019fc:	4a04      	ldr	r2, [pc, #16]	; (8001a10 <HAL_RCC_GetPCLK2Freq+0x20>)
 80019fe:	6810      	ldr	r0, [r2, #0]
 8001a00:	f003 031f 	and.w	r3, r3, #31
}
 8001a04:	40d8      	lsrs	r0, r3
 8001a06:	4770      	bx	lr
 8001a08:	40021000 	.word	0x40021000
 8001a0c:	08007763 	.word	0x08007763
 8001a10:	20000000 	.word	0x20000000

08001a14 <RCCEx_PLLSAI1_Config>:
  * @note   PLLSAI1 is temporary disable to apply new parameters
  *
  * @retval HAL status
  */
static HAL_StatusTypeDef RCCEx_PLLSAI1_Config(RCC_PLLSAI1InitTypeDef *PllSai1, uint32_t Divider)
{
 8001a14:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  assert_param(IS_RCC_PLLSAI1M_VALUE(PllSai1->PLLSAI1M));
  assert_param(IS_RCC_PLLSAI1N_VALUE(PllSai1->PLLSAI1N));
  assert_param(IS_RCC_PLLSAI1CLOCKOUT_VALUE(PllSai1->PLLSAI1ClockOut));

  /* Check that PLLSAI1 clock source and divider M can be applied */
  if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_NONE)
 8001a16:	4b44      	ldr	r3, [pc, #272]	; (8001b28 <RCCEx_PLLSAI1_Config+0x114>)
 8001a18:	68da      	ldr	r2, [r3, #12]
 8001a1a:	f012 0f03 	tst.w	r2, #3
{
 8001a1e:	4605      	mov	r5, r0
 8001a20:	460e      	mov	r6, r1
 8001a22:	461c      	mov	r4, r3
 8001a24:	6800      	ldr	r0, [r0, #0]
  if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_NONE)
 8001a26:	d039      	beq.n	8001a9c <RCCEx_PLLSAI1_Config+0x88>
  {
    /* PLL clock source and divider M already set, check that no request for change  */
    if((__HAL_RCC_GET_PLL_OSCSOURCE() != PllSai1->PLLSAI1Source)
 8001a28:	68da      	ldr	r2, [r3, #12]
 8001a2a:	f002 0203 	and.w	r2, r2, #3
 8001a2e:	4282      	cmp	r2, r0
 8001a30:	d14b      	bne.n	8001aca <RCCEx_PLLSAI1_Config+0xb6>
       ||
 8001a32:	2a00      	cmp	r2, #0
 8001a34:	d049      	beq.n	8001aca <RCCEx_PLLSAI1_Config+0xb6>
       (PllSai1->PLLSAI1Source == RCC_PLLSOURCE_NONE)
#if !defined(RCC_PLLSAI1M_DIV_1_16_SUPPORT)
       ||
       (((READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLM) >> RCC_PLLCFGR_PLLM_Pos) + 1U) != PllSai1->PLLSAI1M)
 8001a36:	68db      	ldr	r3, [r3, #12]
       ||
 8001a38:	686a      	ldr	r2, [r5, #4]
       (((READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLM) >> RCC_PLLCFGR_PLLM_Pos) + 1U) != PllSai1->PLLSAI1M)
 8001a3a:	f3c3 1302 	ubfx	r3, r3, #4, #3
 8001a3e:	3301      	adds	r3, #1
       ||
 8001a40:	4293      	cmp	r3, r2
 8001a42:	d142      	bne.n	8001aca <RCCEx_PLLSAI1_Config+0xb6>
  }

  if(status == HAL_OK)
  {
    /* Disable the PLLSAI1 */
    __HAL_RCC_PLLSAI1_DISABLE();
 8001a44:	6823      	ldr	r3, [r4, #0]
 8001a46:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
 8001a4a:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 8001a4c:	f7ff fab0 	bl	8000fb0 <HAL_GetTick>
 8001a50:	4607      	mov	r7, r0

    /* Wait till PLLSAI1 is ready to be updated */
    while(READ_BIT(RCC->CR, RCC_CR_PLLSAI1RDY) != 0U)
 8001a52:	6823      	ldr	r3, [r4, #0]
 8001a54:	011a      	lsls	r2, r3, #4
 8001a56:	d441      	bmi.n	8001adc <RCCEx_PLLSAI1_Config+0xc8>
 8001a58:	68af      	ldr	r7, [r5, #8]
      }
    }

    if(status == HAL_OK)
    {
      if(Divider == DIVIDER_P_UPDATE)
 8001a5a:	2e00      	cmp	r6, #0
 8001a5c:	d045      	beq.n	8001aea <RCCEx_PLLSAI1_Config+0xd6>
                   ((PllSai1->PLLSAI1P >> 4U) << RCC_PLLSAI1CFGR_PLLSAI1P_Pos));
#endif /* RCC_PLLSAI1P_DIV_2_31_SUPPORT */

#endif /* RCC_PLLSAI1M_DIV_1_16_SUPPORT */
      }
      else if(Divider == DIVIDER_Q_UPDATE)
 8001a5e:	2e01      	cmp	r6, #1
 8001a60:	d14f      	bne.n	8001b02 <RCCEx_PLLSAI1_Config+0xee>
                   (PllSai1->PLLSAI1N << RCC_PLLSAI1CFGR_PLLSAI1N_Pos) |
                   (((PllSai1->PLLSAI1Q >> 1U) - 1U) << RCC_PLLSAI1CFGR_PLLSAI1Q_Pos) |
                   ((PllSai1->PLLSAI1M - 1U) << RCC_PLLSAI1CFGR_PLLSAI1M_Pos));
#else
        /* Configure the PLLSAI1 Division factor Q and Multiplication factor N*/
        MODIFY_REG(RCC->PLLSAI1CFGR,
 8001a62:	6922      	ldr	r2, [r4, #16]
 8001a64:	6928      	ldr	r0, [r5, #16]
 8001a66:	f422 02c0 	bic.w	r2, r2, #6291456	; 0x600000
 8001a6a:	0840      	lsrs	r0, r0, #1
 8001a6c:	f422 42fe 	bic.w	r2, r2, #32512	; 0x7f00
 8001a70:	3801      	subs	r0, #1
 8001a72:	ea42 2207 	orr.w	r2, r2, r7, lsl #8
 8001a76:	ea42 5240 	orr.w	r2, r2, r0, lsl #21
 8001a7a:	6122      	str	r2, [r4, #16]
                   (((PllSai1->PLLSAI1R >> 1U) - 1U) << RCC_PLLSAI1CFGR_PLLSAI1R_Pos));
#endif /* RCC_PLLSAI1M_DIV_1_16_SUPPORT */
      }

      /* Enable the PLLSAI1 again by setting PLLSAI1ON to 1*/
      __HAL_RCC_PLLSAI1_ENABLE();
 8001a7c:	6823      	ldr	r3, [r4, #0]
 8001a7e:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 8001a82:	6023      	str	r3, [r4, #0]

      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8001a84:	f7ff fa94 	bl	8000fb0 <HAL_GetTick>
 8001a88:	4606      	mov	r6, r0

      /* Wait till PLLSAI1 is ready */
      while(READ_BIT(RCC->CR, RCC_CR_PLLSAI1RDY) == 0U)
 8001a8a:	6823      	ldr	r3, [r4, #0]
 8001a8c:	011b      	lsls	r3, r3, #4
 8001a8e:	d545      	bpl.n	8001b1c <RCCEx_PLLSAI1_Config+0x108>
      }

      if(status == HAL_OK)
      {
        /* Configure the PLLSAI1 Clock output(s) */
        __HAL_RCC_PLLSAI1CLKOUT_ENABLE(PllSai1->PLLSAI1ClockOut);
 8001a90:	6923      	ldr	r3, [r4, #16]
 8001a92:	69aa      	ldr	r2, [r5, #24]
 8001a94:	4313      	orrs	r3, r2
 8001a96:	6123      	str	r3, [r4, #16]
 8001a98:	2000      	movs	r0, #0
      }
    }
  }

  return status;
}
 8001a9a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    switch(PllSai1->PLLSAI1Source)
 8001a9c:	2802      	cmp	r0, #2
 8001a9e:	d010      	beq.n	8001ac2 <RCCEx_PLLSAI1_Config+0xae>
 8001aa0:	2803      	cmp	r0, #3
 8001aa2:	d014      	beq.n	8001ace <RCCEx_PLLSAI1_Config+0xba>
 8001aa4:	2801      	cmp	r0, #1
 8001aa6:	d110      	bne.n	8001aca <RCCEx_PLLSAI1_Config+0xb6>
      if(HAL_IS_BIT_CLR(RCC->CR, RCC_CR_MSIRDY))
 8001aa8:	681b      	ldr	r3, [r3, #0]
 8001aaa:	079f      	lsls	r7, r3, #30
 8001aac:	d5f5      	bpl.n	8001a9a <RCCEx_PLLSAI1_Config+0x86>
      MODIFY_REG(RCC->PLLCFGR, RCC_PLLCFGR_PLLSRC | RCC_PLLCFGR_PLLM, PllSai1->PLLSAI1Source | (PllSai1->PLLSAI1M - 1U) << RCC_PLLCFGR_PLLM_Pos);
 8001aae:	68e3      	ldr	r3, [r4, #12]
 8001ab0:	686a      	ldr	r2, [r5, #4]
 8001ab2:	f023 0373 	bic.w	r3, r3, #115	; 0x73
 8001ab6:	3a01      	subs	r2, #1
 8001ab8:	4318      	orrs	r0, r3
 8001aba:	ea40 1002 	orr.w	r0, r0, r2, lsl #4
 8001abe:	60e0      	str	r0, [r4, #12]
 8001ac0:	e7c0      	b.n	8001a44 <RCCEx_PLLSAI1_Config+0x30>
      if(HAL_IS_BIT_CLR(RCC->CR, RCC_CR_HSIRDY))
 8001ac2:	681b      	ldr	r3, [r3, #0]
 8001ac4:	f413 6f80 	tst.w	r3, #1024	; 0x400
        if(HAL_IS_BIT_CLR(RCC->CR, RCC_CR_HSEBYP))
 8001ac8:	d1f1      	bne.n	8001aae <RCCEx_PLLSAI1_Config+0x9a>
 8001aca:	2001      	movs	r0, #1
 8001acc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      if(HAL_IS_BIT_CLR(RCC->CR, RCC_CR_HSERDY))
 8001ace:	681a      	ldr	r2, [r3, #0]
 8001ad0:	0391      	lsls	r1, r2, #14
 8001ad2:	d4ec      	bmi.n	8001aae <RCCEx_PLLSAI1_Config+0x9a>
        if(HAL_IS_BIT_CLR(RCC->CR, RCC_CR_HSEBYP))
 8001ad4:	681b      	ldr	r3, [r3, #0]
 8001ad6:	f413 2f80 	tst.w	r3, #262144	; 0x40000
 8001ada:	e7f5      	b.n	8001ac8 <RCCEx_PLLSAI1_Config+0xb4>
      if((HAL_GetTick() - tickstart) > PLLSAI1_TIMEOUT_VALUE)
 8001adc:	f7ff fa68 	bl	8000fb0 <HAL_GetTick>
 8001ae0:	1bc0      	subs	r0, r0, r7
 8001ae2:	2802      	cmp	r0, #2
 8001ae4:	d9b5      	bls.n	8001a52 <RCCEx_PLLSAI1_Config+0x3e>
        status = HAL_TIMEOUT;
 8001ae6:	2003      	movs	r0, #3
 8001ae8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        MODIFY_REG(RCC->PLLSAI1CFGR,
 8001aea:	6922      	ldr	r2, [r4, #16]
 8001aec:	68e9      	ldr	r1, [r5, #12]
 8001aee:	f022 4278 	bic.w	r2, r2, #4160749568	; 0xf8000000
 8001af2:	06c9      	lsls	r1, r1, #27
 8001af4:	ea41 2307 	orr.w	r3, r1, r7, lsl #8
 8001af8:	f422 42fe 	bic.w	r2, r2, #32512	; 0x7f00
 8001afc:	4313      	orrs	r3, r2
        MODIFY_REG(RCC->PLLSAI1CFGR,
 8001afe:	6123      	str	r3, [r4, #16]
 8001b00:	e7bc      	b.n	8001a7c <RCCEx_PLLSAI1_Config+0x68>
 8001b02:	6923      	ldr	r3, [r4, #16]
 8001b04:	6968      	ldr	r0, [r5, #20]
 8001b06:	f023 63c0 	bic.w	r3, r3, #100663296	; 0x6000000
 8001b0a:	0840      	lsrs	r0, r0, #1
 8001b0c:	f423 43fe 	bic.w	r3, r3, #32512	; 0x7f00
 8001b10:	3801      	subs	r0, #1
 8001b12:	ea43 2307 	orr.w	r3, r3, r7, lsl #8
 8001b16:	ea43 6340 	orr.w	r3, r3, r0, lsl #25
 8001b1a:	e7f0      	b.n	8001afe <RCCEx_PLLSAI1_Config+0xea>
        if((HAL_GetTick() - tickstart) > PLLSAI1_TIMEOUT_VALUE)
 8001b1c:	f7ff fa48 	bl	8000fb0 <HAL_GetTick>
 8001b20:	1b80      	subs	r0, r0, r6
 8001b22:	2802      	cmp	r0, #2
 8001b24:	d9b1      	bls.n	8001a8a <RCCEx_PLLSAI1_Config+0x76>
 8001b26:	e7de      	b.n	8001ae6 <RCCEx_PLLSAI1_Config+0xd2>
 8001b28:	40021000 	.word	0x40021000

08001b2c <HAL_RCCEx_PeriphCLKConfig>:
{
 8001b2c:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1))
 8001b30:	6805      	ldr	r5, [r0, #0]
 8001b32:	f415 6500 	ands.w	r5, r5, #2048	; 0x800
{
 8001b36:	4604      	mov	r4, r0
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1))
 8001b38:	d00e      	beq.n	8001b58 <HAL_RCCEx_PeriphCLKConfig+0x2c>
    switch(PeriphClkInit->Sai1ClockSelection)
 8001b3a:	6bc1      	ldr	r1, [r0, #60]	; 0x3c
 8001b3c:	f5b1 0f00 	cmp.w	r1, #8388608	; 0x800000
 8001b40:	d053      	beq.n	8001bea <HAL_RCCEx_PeriphCLKConfig+0xbe>
 8001b42:	f5b1 0f40 	cmp.w	r1, #12582912	; 0xc00000
 8001b46:	d055      	beq.n	8001bf4 <HAL_RCCEx_PeriphCLKConfig+0xc8>
 8001b48:	2900      	cmp	r1, #0
 8001b4a:	d15e      	bne.n	8001c0a <HAL_RCCEx_PeriphCLKConfig+0xde>
      ret = RCCEx_PLLSAI1_Config(&(PeriphClkInit->PLLSAI1), DIVIDER_P_UPDATE);
 8001b4c:	3004      	adds	r0, #4
 8001b4e:	f7ff ff61 	bl	8001a14 <RCCEx_PLLSAI1_Config>
    if(ret == HAL_OK)
 8001b52:	4605      	mov	r5, r0
 8001b54:	2800      	cmp	r0, #0
 8001b56:	d04d      	beq.n	8001bf4 <HAL_RCCEx_PeriphCLKConfig+0xc8>
  if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_RTC) == RCC_PERIPHCLK_RTC)
 8001b58:	6823      	ldr	r3, [r4, #0]
 8001b5a:	039e      	lsls	r6, r3, #14
 8001b5c:	d563      	bpl.n	8001c26 <HAL_RCCEx_PeriphCLKConfig+0xfa>
    if(__HAL_RCC_PWR_IS_CLK_DISABLED() != 0U)
 8001b5e:	4e93      	ldr	r6, [pc, #588]	; (8001dac <HAL_RCCEx_PeriphCLKConfig+0x280>)
 8001b60:	6db3      	ldr	r3, [r6, #88]	; 0x58
 8001b62:	00d8      	lsls	r0, r3, #3
 8001b64:	f140 8116 	bpl.w	8001d94 <HAL_RCCEx_PeriphCLKConfig+0x268>
    FlagStatus       pwrclkchanged = RESET;
 8001b68:	2700      	movs	r7, #0
    SET_BIT(PWR->CR1, PWR_CR1_DBP);
 8001b6a:	f8df 8244 	ldr.w	r8, [pc, #580]	; 8001db0 <HAL_RCCEx_PeriphCLKConfig+0x284>
 8001b6e:	f8d8 3000 	ldr.w	r3, [r8]
 8001b72:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8001b76:	f8c8 3000 	str.w	r3, [r8]
    tickstart = HAL_GetTick();
 8001b7a:	f7ff fa19 	bl	8000fb0 <HAL_GetTick>
 8001b7e:	4681      	mov	r9, r0
    while(READ_BIT(PWR->CR1, PWR_CR1_DBP) == 0U)
 8001b80:	f8d8 3000 	ldr.w	r3, [r8]
 8001b84:	05d9      	lsls	r1, r3, #23
 8001b86:	d542      	bpl.n	8001c0e <HAL_RCCEx_PeriphCLKConfig+0xe2>
    if(ret == HAL_OK)
 8001b88:	2d00      	cmp	r5, #0
 8001b8a:	d147      	bne.n	8001c1c <HAL_RCCEx_PeriphCLKConfig+0xf0>
      tmpregister = READ_BIT(RCC->BDCR, RCC_BDCR_RTCSEL);
 8001b8c:	f8d6 3090 	ldr.w	r3, [r6, #144]	; 0x90
      if((tmpregister != RCC_RTCCLKSOURCE_NONE) && (tmpregister != PeriphClkInit->RTCClockSelection))
 8001b90:	f413 7340 	ands.w	r3, r3, #768	; 0x300
 8001b94:	d014      	beq.n	8001bc0 <HAL_RCCEx_PeriphCLKConfig+0x94>
 8001b96:	6d22      	ldr	r2, [r4, #80]	; 0x50
 8001b98:	4293      	cmp	r3, r2
 8001b9a:	d011      	beq.n	8001bc0 <HAL_RCCEx_PeriphCLKConfig+0x94>
        tmpregister = READ_BIT(RCC->BDCR, ~(RCC_BDCR_RTCSEL));
 8001b9c:	f8d6 3090 	ldr.w	r3, [r6, #144]	; 0x90
        __HAL_RCC_BACKUPRESET_FORCE();
 8001ba0:	f8d6 2090 	ldr.w	r2, [r6, #144]	; 0x90
 8001ba4:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 8001ba8:	f8c6 2090 	str.w	r2, [r6, #144]	; 0x90
        __HAL_RCC_BACKUPRESET_RELEASE();
 8001bac:	f8d6 2090 	ldr.w	r2, [r6, #144]	; 0x90
        tmpregister = READ_BIT(RCC->BDCR, ~(RCC_BDCR_RTCSEL));
 8001bb0:	f423 7340 	bic.w	r3, r3, #768	; 0x300
        __HAL_RCC_BACKUPRESET_RELEASE();
 8001bb4:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 8001bb8:	f8c6 2090 	str.w	r2, [r6, #144]	; 0x90
        RCC->BDCR = tmpregister;
 8001bbc:	f8c6 3090 	str.w	r3, [r6, #144]	; 0x90
      if (HAL_IS_BIT_SET(tmpregister, RCC_BDCR_LSEON))
 8001bc0:	07da      	lsls	r2, r3, #31
 8001bc2:	d509      	bpl.n	8001bd8 <HAL_RCCEx_PeriphCLKConfig+0xac>
        tickstart = HAL_GetTick();
 8001bc4:	f7ff f9f4 	bl	8000fb0 <HAL_GetTick>
          if((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8001bc8:	f241 3988 	movw	r9, #5000	; 0x1388
        tickstart = HAL_GetTick();
 8001bcc:	4680      	mov	r8, r0
        while(READ_BIT(RCC->BDCR, RCC_BDCR_LSERDY) == 0U)
 8001bce:	f8d6 3090 	ldr.w	r3, [r6, #144]	; 0x90
 8001bd2:	079b      	lsls	r3, r3, #30
 8001bd4:	f140 80c0 	bpl.w	8001d58 <HAL_RCCEx_PeriphCLKConfig+0x22c>
        __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8001bd8:	f8d6 3090 	ldr.w	r3, [r6, #144]	; 0x90
 8001bdc:	6d22      	ldr	r2, [r4, #80]	; 0x50
 8001bde:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8001be2:	4313      	orrs	r3, r2
 8001be4:	f8c6 3090 	str.w	r3, [r6, #144]	; 0x90
 8001be8:	e018      	b.n	8001c1c <HAL_RCCEx_PeriphCLKConfig+0xf0>
      __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL_SAI2CLK);
 8001bea:	4a70      	ldr	r2, [pc, #448]	; (8001dac <HAL_RCCEx_PeriphCLKConfig+0x280>)
 8001bec:	68d3      	ldr	r3, [r2, #12]
 8001bee:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8001bf2:	60d3      	str	r3, [r2, #12]
      __HAL_RCC_SAI1_CONFIG(PeriphClkInit->Sai1ClockSelection);
 8001bf4:	4a6d      	ldr	r2, [pc, #436]	; (8001dac <HAL_RCCEx_PeriphCLKConfig+0x280>)
 8001bf6:	6be1      	ldr	r1, [r4, #60]	; 0x3c
 8001bf8:	f8d2 3088 	ldr.w	r3, [r2, #136]	; 0x88
 8001bfc:	f423 0340 	bic.w	r3, r3, #12582912	; 0xc00000
 8001c00:	430b      	orrs	r3, r1
 8001c02:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
 8001c06:	2500      	movs	r5, #0
 8001c08:	e7a6      	b.n	8001b58 <HAL_RCCEx_PeriphCLKConfig+0x2c>
      ret = HAL_ERROR;
 8001c0a:	2501      	movs	r5, #1
 8001c0c:	e7a4      	b.n	8001b58 <HAL_RCCEx_PeriphCLKConfig+0x2c>
      if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8001c0e:	f7ff f9cf 	bl	8000fb0 <HAL_GetTick>
 8001c12:	eba0 0009 	sub.w	r0, r0, r9
 8001c16:	2802      	cmp	r0, #2
 8001c18:	d9b2      	bls.n	8001b80 <HAL_RCCEx_PeriphCLKConfig+0x54>
        ret = HAL_TIMEOUT;
 8001c1a:	2503      	movs	r5, #3
    if(pwrclkchanged == SET)
 8001c1c:	b11f      	cbz	r7, 8001c26 <HAL_RCCEx_PeriphCLKConfig+0xfa>
      __HAL_RCC_PWR_CLK_DISABLE();
 8001c1e:	6db3      	ldr	r3, [r6, #88]	; 0x58
 8001c20:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8001c24:	65b3      	str	r3, [r6, #88]	; 0x58
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART1) == RCC_PERIPHCLK_USART1)
 8001c26:	6823      	ldr	r3, [r4, #0]
 8001c28:	07df      	lsls	r7, r3, #31
 8001c2a:	d508      	bpl.n	8001c3e <HAL_RCCEx_PeriphCLKConfig+0x112>
    __HAL_RCC_USART1_CONFIG(PeriphClkInit->Usart1ClockSelection);
 8001c2c:	495f      	ldr	r1, [pc, #380]	; (8001dac <HAL_RCCEx_PeriphCLKConfig+0x280>)
 8001c2e:	6a20      	ldr	r0, [r4, #32]
 8001c30:	f8d1 2088 	ldr.w	r2, [r1, #136]	; 0x88
 8001c34:	f022 0203 	bic.w	r2, r2, #3
 8001c38:	4302      	orrs	r2, r0
 8001c3a:	f8c1 2088 	str.w	r2, [r1, #136]	; 0x88
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART2) == RCC_PERIPHCLK_USART2)
 8001c3e:	079e      	lsls	r6, r3, #30
 8001c40:	d508      	bpl.n	8001c54 <HAL_RCCEx_PeriphCLKConfig+0x128>
    __HAL_RCC_USART2_CONFIG(PeriphClkInit->Usart2ClockSelection);
 8001c42:	495a      	ldr	r1, [pc, #360]	; (8001dac <HAL_RCCEx_PeriphCLKConfig+0x280>)
 8001c44:	6a60      	ldr	r0, [r4, #36]	; 0x24
 8001c46:	f8d1 2088 	ldr.w	r2, [r1, #136]	; 0x88
 8001c4a:	f022 020c 	bic.w	r2, r2, #12
 8001c4e:	4302      	orrs	r2, r0
 8001c50:	f8c1 2088 	str.w	r2, [r1, #136]	; 0x88
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPUART1) == RCC_PERIPHCLK_LPUART1)
 8001c54:	0698      	lsls	r0, r3, #26
 8001c56:	d508      	bpl.n	8001c6a <HAL_RCCEx_PeriphCLKConfig+0x13e>
    __HAL_RCC_LPUART1_CONFIG(PeriphClkInit->Lpuart1ClockSelection);
 8001c58:	4954      	ldr	r1, [pc, #336]	; (8001dac <HAL_RCCEx_PeriphCLKConfig+0x280>)
 8001c5a:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8001c5c:	f8d1 2088 	ldr.w	r2, [r1, #136]	; 0x88
 8001c60:	f422 6240 	bic.w	r2, r2, #3072	; 0xc00
 8001c64:	4302      	orrs	r2, r0
 8001c66:	f8c1 2088 	str.w	r2, [r1, #136]	; 0x88
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == (RCC_PERIPHCLK_LPTIM1))
 8001c6a:	0599      	lsls	r1, r3, #22
 8001c6c:	d508      	bpl.n	8001c80 <HAL_RCCEx_PeriphCLKConfig+0x154>
    __HAL_RCC_LPTIM1_CONFIG(PeriphClkInit->Lptim1ClockSelection);
 8001c6e:	494f      	ldr	r1, [pc, #316]	; (8001dac <HAL_RCCEx_PeriphCLKConfig+0x280>)
 8001c70:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8001c72:	f8d1 2088 	ldr.w	r2, [r1, #136]	; 0x88
 8001c76:	f422 2240 	bic.w	r2, r2, #786432	; 0xc0000
 8001c7a:	4302      	orrs	r2, r0
 8001c7c:	f8c1 2088 	str.w	r2, [r1, #136]	; 0x88
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM2) == (RCC_PERIPHCLK_LPTIM2))
 8001c80:	055a      	lsls	r2, r3, #21
 8001c82:	d508      	bpl.n	8001c96 <HAL_RCCEx_PeriphCLKConfig+0x16a>
    __HAL_RCC_LPTIM2_CONFIG(PeriphClkInit->Lptim2ClockSelection);
 8001c84:	4949      	ldr	r1, [pc, #292]	; (8001dac <HAL_RCCEx_PeriphCLKConfig+0x280>)
 8001c86:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 8001c88:	f8d1 2088 	ldr.w	r2, [r1, #136]	; 0x88
 8001c8c:	f422 1240 	bic.w	r2, r2, #3145728	; 0x300000
 8001c90:	4302      	orrs	r2, r0
 8001c92:	f8c1 2088 	str.w	r2, [r1, #136]	; 0x88
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C1) == RCC_PERIPHCLK_I2C1)
 8001c96:	065f      	lsls	r7, r3, #25
 8001c98:	d508      	bpl.n	8001cac <HAL_RCCEx_PeriphCLKConfig+0x180>
    __HAL_RCC_I2C1_CONFIG(PeriphClkInit->I2c1ClockSelection);
 8001c9a:	4944      	ldr	r1, [pc, #272]	; (8001dac <HAL_RCCEx_PeriphCLKConfig+0x280>)
 8001c9c:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 8001c9e:	f8d1 2088 	ldr.w	r2, [r1, #136]	; 0x88
 8001ca2:	f422 5240 	bic.w	r2, r2, #12288	; 0x3000
 8001ca6:	4302      	orrs	r2, r0
 8001ca8:	f8c1 2088 	str.w	r2, [r1, #136]	; 0x88
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C3) == RCC_PERIPHCLK_I2C3)
 8001cac:	05de      	lsls	r6, r3, #23
 8001cae:	d508      	bpl.n	8001cc2 <HAL_RCCEx_PeriphCLKConfig+0x196>
    __HAL_RCC_I2C3_CONFIG(PeriphClkInit->I2c3ClockSelection);
 8001cb0:	493e      	ldr	r1, [pc, #248]	; (8001dac <HAL_RCCEx_PeriphCLKConfig+0x280>)
 8001cb2:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8001cb4:	f8d1 2088 	ldr.w	r2, [r1, #136]	; 0x88
 8001cb8:	f422 3240 	bic.w	r2, r2, #196608	; 0x30000
 8001cbc:	4302      	orrs	r2, r0
 8001cbe:	f8c1 2088 	str.w	r2, [r1, #136]	; 0x88
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USB) == (RCC_PERIPHCLK_USB))
 8001cc2:	0498      	lsls	r0, r3, #18
 8001cc4:	d50f      	bpl.n	8001ce6 <HAL_RCCEx_PeriphCLKConfig+0x1ba>
    __HAL_RCC_USB_CONFIG(PeriphClkInit->UsbClockSelection);
 8001cc6:	4a39      	ldr	r2, [pc, #228]	; (8001dac <HAL_RCCEx_PeriphCLKConfig+0x280>)
 8001cc8:	6c21      	ldr	r1, [r4, #64]	; 0x40
 8001cca:	f8d2 3088 	ldr.w	r3, [r2, #136]	; 0x88
 8001cce:	f023 6340 	bic.w	r3, r3, #201326592	; 0xc000000
 8001cd2:	430b      	orrs	r3, r1
    if(PeriphClkInit->UsbClockSelection == RCC_USBCLKSOURCE_PLL)
 8001cd4:	f1b1 6f00 	cmp.w	r1, #134217728	; 0x8000000
    __HAL_RCC_USB_CONFIG(PeriphClkInit->UsbClockSelection);
 8001cd8:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
    if(PeriphClkInit->UsbClockSelection == RCC_USBCLKSOURCE_PLL)
 8001cdc:	d144      	bne.n	8001d68 <HAL_RCCEx_PeriphCLKConfig+0x23c>
      __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL_48M1CLK);
 8001cde:	68d3      	ldr	r3, [r2, #12]
 8001ce0:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8001ce4:	60d3      	str	r3, [r2, #12]
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RNG) == (RCC_PERIPHCLK_RNG))
 8001ce6:	6823      	ldr	r3, [r4, #0]
 8001ce8:	0359      	lsls	r1, r3, #13
 8001cea:	d50f      	bpl.n	8001d0c <HAL_RCCEx_PeriphCLKConfig+0x1e0>
    __HAL_RCC_RNG_CONFIG(PeriphClkInit->RngClockSelection);
 8001cec:	4a2f      	ldr	r2, [pc, #188]	; (8001dac <HAL_RCCEx_PeriphCLKConfig+0x280>)
 8001cee:	6c61      	ldr	r1, [r4, #68]	; 0x44
 8001cf0:	f8d2 3088 	ldr.w	r3, [r2, #136]	; 0x88
 8001cf4:	f023 6340 	bic.w	r3, r3, #201326592	; 0xc000000
 8001cf8:	430b      	orrs	r3, r1
    if(PeriphClkInit->RngClockSelection == RCC_RNGCLKSOURCE_PLL)
 8001cfa:	f1b1 6f00 	cmp.w	r1, #134217728	; 0x8000000
    __HAL_RCC_RNG_CONFIG(PeriphClkInit->RngClockSelection);
 8001cfe:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
    if(PeriphClkInit->RngClockSelection == RCC_RNGCLKSOURCE_PLL)
 8001d02:	d13c      	bne.n	8001d7e <HAL_RCCEx_PeriphCLKConfig+0x252>
      __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL_48M1CLK);
 8001d04:	68d3      	ldr	r3, [r2, #12]
 8001d06:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8001d0a:	60d3      	str	r3, [r2, #12]
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_ADC) == RCC_PERIPHCLK_ADC)
 8001d0c:	6823      	ldr	r3, [r4, #0]
 8001d0e:	045a      	lsls	r2, r3, #17
 8001d10:	d512      	bpl.n	8001d38 <HAL_RCCEx_PeriphCLKConfig+0x20c>
    __HAL_RCC_ADC_CONFIG(PeriphClkInit->AdcClockSelection);
 8001d12:	4926      	ldr	r1, [pc, #152]	; (8001dac <HAL_RCCEx_PeriphCLKConfig+0x280>)
 8001d14:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 8001d16:	f8d1 3088 	ldr.w	r3, [r1, #136]	; 0x88
 8001d1a:	f023 5340 	bic.w	r3, r3, #805306368	; 0x30000000
 8001d1e:	4313      	orrs	r3, r2
    if(PeriphClkInit->AdcClockSelection == RCC_ADCCLKSOURCE_PLLSAI1)
 8001d20:	f1b2 5f80 	cmp.w	r2, #268435456	; 0x10000000
    __HAL_RCC_ADC_CONFIG(PeriphClkInit->AdcClockSelection);
 8001d24:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
    if(PeriphClkInit->AdcClockSelection == RCC_ADCCLKSOURCE_PLLSAI1)
 8001d28:	d106      	bne.n	8001d38 <HAL_RCCEx_PeriphCLKConfig+0x20c>
      ret = RCCEx_PLLSAI1_Config(&(PeriphClkInit->PLLSAI1), DIVIDER_R_UPDATE);
 8001d2a:	2102      	movs	r1, #2
 8001d2c:	1d20      	adds	r0, r4, #4
 8001d2e:	f7ff fe71 	bl	8001a14 <RCCEx_PLLSAI1_Config>
      if(ret != HAL_OK)
 8001d32:	2800      	cmp	r0, #0
 8001d34:	bf18      	it	ne
 8001d36:	4605      	movne	r5, r0
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SWPMI1) == RCC_PERIPHCLK_SWPMI1)
 8001d38:	6823      	ldr	r3, [r4, #0]
 8001d3a:	041b      	lsls	r3, r3, #16
 8001d3c:	d508      	bpl.n	8001d50 <HAL_RCCEx_PeriphCLKConfig+0x224>
    __HAL_RCC_SWPMI1_CONFIG(PeriphClkInit->Swpmi1ClockSelection);
 8001d3e:	4a1b      	ldr	r2, [pc, #108]	; (8001dac <HAL_RCCEx_PeriphCLKConfig+0x280>)
 8001d40:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 8001d42:	f8d2 3088 	ldr.w	r3, [r2, #136]	; 0x88
 8001d46:	f023 4380 	bic.w	r3, r3, #1073741824	; 0x40000000
 8001d4a:	430b      	orrs	r3, r1
 8001d4c:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
}
 8001d50:	4628      	mov	r0, r5
 8001d52:	b003      	add	sp, #12
 8001d54:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
          if((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8001d58:	f7ff f92a 	bl	8000fb0 <HAL_GetTick>
 8001d5c:	eba0 0008 	sub.w	r0, r0, r8
 8001d60:	4548      	cmp	r0, r9
 8001d62:	f67f af34 	bls.w	8001bce <HAL_RCCEx_PeriphCLKConfig+0xa2>
 8001d66:	e758      	b.n	8001c1a <HAL_RCCEx_PeriphCLKConfig+0xee>
      if(PeriphClkInit->UsbClockSelection == RCC_USBCLKSOURCE_PLLSAI1)
 8001d68:	f1b1 6f80 	cmp.w	r1, #67108864	; 0x4000000
 8001d6c:	d1bb      	bne.n	8001ce6 <HAL_RCCEx_PeriphCLKConfig+0x1ba>
        ret = RCCEx_PLLSAI1_Config(&(PeriphClkInit->PLLSAI1), DIVIDER_Q_UPDATE);
 8001d6e:	2101      	movs	r1, #1
 8001d70:	1d20      	adds	r0, r4, #4
 8001d72:	f7ff fe4f 	bl	8001a14 <RCCEx_PLLSAI1_Config>
        if(ret != HAL_OK)
 8001d76:	2800      	cmp	r0, #0
 8001d78:	bf18      	it	ne
 8001d7a:	4605      	movne	r5, r0
 8001d7c:	e7b3      	b.n	8001ce6 <HAL_RCCEx_PeriphCLKConfig+0x1ba>
    else if(PeriphClkInit->RngClockSelection == RCC_RNGCLKSOURCE_PLLSAI1)
 8001d7e:	f1b1 6f80 	cmp.w	r1, #67108864	; 0x4000000
 8001d82:	d1c3      	bne.n	8001d0c <HAL_RCCEx_PeriphCLKConfig+0x1e0>
      ret = RCCEx_PLLSAI1_Config(&(PeriphClkInit->PLLSAI1), DIVIDER_Q_UPDATE);
 8001d84:	2101      	movs	r1, #1
 8001d86:	1d20      	adds	r0, r4, #4
 8001d88:	f7ff fe44 	bl	8001a14 <RCCEx_PLLSAI1_Config>
      if(ret != HAL_OK)
 8001d8c:	2800      	cmp	r0, #0
 8001d8e:	bf18      	it	ne
 8001d90:	4605      	movne	r5, r0
 8001d92:	e7bb      	b.n	8001d0c <HAL_RCCEx_PeriphCLKConfig+0x1e0>
      __HAL_RCC_PWR_CLK_ENABLE();
 8001d94:	6db3      	ldr	r3, [r6, #88]	; 0x58
 8001d96:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8001d9a:	65b3      	str	r3, [r6, #88]	; 0x58
 8001d9c:	6db3      	ldr	r3, [r6, #88]	; 0x58
 8001d9e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001da2:	9301      	str	r3, [sp, #4]
 8001da4:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 8001da6:	2701      	movs	r7, #1
 8001da8:	e6df      	b.n	8001b6a <HAL_RCCEx_PeriphCLKConfig+0x3e>
 8001daa:	bf00      	nop
 8001dac:	40021000 	.word	0x40021000
 8001db0:	40007000 	.word	0x40007000

08001db4 <HAL_RCCEx_EnableMSIPLLMode>:
  SET_BIT(RCC->CR, RCC_CR_MSIPLLEN) ;
 8001db4:	4a02      	ldr	r2, [pc, #8]	; (8001dc0 <HAL_RCCEx_EnableMSIPLLMode+0xc>)
 8001db6:	6813      	ldr	r3, [r2, #0]
 8001db8:	f043 0304 	orr.w	r3, r3, #4
 8001dbc:	6013      	str	r3, [r2, #0]
 8001dbe:	4770      	bx	lr
 8001dc0:	40021000 	.word	0x40021000

08001dc4 <HAL_RNG_Init>:
  * @brief  Initialize the RNG peripheral and initialize the associated handle.
  * @param  hrng: pointer to a RNG_HandleTypeDef structure.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RNG_Init(RNG_HandleTypeDef *hrng)
{ 
 8001dc4:	b510      	push	{r4, lr}
  /* Check the RNG handle allocation */
  if(hrng == NULL)
 8001dc6:	4604      	mov	r4, r0
 8001dc8:	b190      	cbz	r0, 8001df0 <HAL_RNG_Init+0x2c>

    /* Init the low level hardware */
    hrng->MspInitCallback(hrng);
  }
#else
  if(hrng->State == HAL_RNG_STATE_RESET)
 8001dca:	7943      	ldrb	r3, [r0, #5]
 8001dcc:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8001dd0:	b913      	cbnz	r3, 8001dd8 <HAL_RNG_Init+0x14>
  {  
    /* Allocate lock resource and initialize it */
    hrng->Lock = HAL_UNLOCKED;
 8001dd2:	7102      	strb	r2, [r0, #4]

    /* Init the low level hardware */
    HAL_RNG_MspInit(hrng);
 8001dd4:	f000 fdb6 	bl	8002944 <HAL_RNG_MspInit>
  /* Clock Error Detection configuration */
  MODIFY_REG(hrng->Instance->CR, RNG_CR_CED, hrng->Init.ClockErrorDetection);
#endif /* defined(RNG_CR_CED) */

  /* Enable the RNG Peripheral */
  __HAL_RNG_ENABLE(hrng);
 8001dd8:	6822      	ldr	r2, [r4, #0]
  hrng->State = HAL_RNG_STATE_BUSY;
 8001dda:	2302      	movs	r3, #2
 8001ddc:	7163      	strb	r3, [r4, #5]
  __HAL_RNG_ENABLE(hrng);
 8001dde:	6813      	ldr	r3, [r2, #0]
 8001de0:	f043 0304 	orr.w	r3, r3, #4
 8001de4:	6013      	str	r3, [r2, #0]

  /* Initialize the RNG state */
  hrng->State = HAL_RNG_STATE_READY;
  
  /* Initialise the error code */
  hrng->ErrorCode = HAL_RNG_ERROR_NONE;
 8001de6:	2000      	movs	r0, #0
  hrng->State = HAL_RNG_STATE_READY;
 8001de8:	2301      	movs	r3, #1
 8001dea:	7163      	strb	r3, [r4, #5]
  hrng->ErrorCode = HAL_RNG_ERROR_NONE;
 8001dec:	60a0      	str	r0, [r4, #8]
  
  /* Return function status */
  return HAL_OK;
 8001dee:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8001df0:	2001      	movs	r0, #1
}
 8001df2:	bd10      	pop	{r4, pc}

08001df4 <HAL_RNG_GenerateRandomNumber>:
  * @param  random32bit: pointer to generated random number variable if successful.
  * @retval HAL status
  */

HAL_StatusTypeDef HAL_RNG_GenerateRandomNumber(RNG_HandleTypeDef *hrng, uint32_t *random32bit)
{
 8001df4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  uint32_t tickstart = 0;    
  HAL_StatusTypeDef status = HAL_OK;

  /* Process Locked */
  __HAL_LOCK(hrng); 
 8001df6:	7903      	ldrb	r3, [r0, #4]
 8001df8:	2b01      	cmp	r3, #1
{
 8001dfa:	4604      	mov	r4, r0
 8001dfc:	460e      	mov	r6, r1
  __HAL_LOCK(hrng); 
 8001dfe:	d021      	beq.n	8001e44 <HAL_RNG_GenerateRandomNumber+0x50>
  
  /* Check RNS peripheral state */
  if(hrng->State == HAL_RNG_STATE_READY)
 8001e00:	7963      	ldrb	r3, [r4, #5]
  __HAL_LOCK(hrng); 
 8001e02:	2001      	movs	r0, #1
  if(hrng->State == HAL_RNG_STATE_READY)
 8001e04:	4283      	cmp	r3, r0
  __HAL_LOCK(hrng); 
 8001e06:	7120      	strb	r0, [r4, #4]
  if(hrng->State == HAL_RNG_STATE_READY)
 8001e08:	d10f      	bne.n	8001e2a <HAL_RNG_GenerateRandomNumber+0x36>
  {
    /* Change RNG peripheral state */  
    hrng->State = HAL_RNG_STATE_BUSY;  
 8001e0a:	2302      	movs	r3, #2
 8001e0c:	7163      	strb	r3, [r4, #5]

    /* Get tick */
    tickstart = HAL_GetTick();
 8001e0e:	f7ff f8cf 	bl	8000fb0 <HAL_GetTick>
 8001e12:	4607      	mov	r7, r0
  
    /* Check if data register contains valid random data */
    while(__HAL_RNG_GET_FLAG(hrng, RNG_FLAG_DRDY) == RESET)
 8001e14:	6822      	ldr	r2, [r4, #0]
 8001e16:	6855      	ldr	r5, [r2, #4]
 8001e18:	f015 0501 	ands.w	r5, r5, #1
 8001e1c:	d008      	beq.n	8001e30 <HAL_RNG_GenerateRandomNumber+0x3c>
        return HAL_TIMEOUT;
      } 
    }
  
    /* Get a 32bit Random number */
    hrng->RandomNumber = hrng->Instance->DR;
 8001e1e:	6893      	ldr	r3, [r2, #8]
 8001e20:	60e3      	str	r3, [r4, #12]
    *random32bit = hrng->RandomNumber;
 8001e22:	6033      	str	r3, [r6, #0]
  
    hrng->State = HAL_RNG_STATE_READY;
 8001e24:	2301      	movs	r3, #1
 8001e26:	7163      	strb	r3, [r4, #5]
  HAL_StatusTypeDef status = HAL_OK;
 8001e28:	2000      	movs	r0, #0
  {
    status = HAL_ERROR;
  }
  
  /* Process Unlocked */
  __HAL_UNLOCK(hrng);
 8001e2a:	2300      	movs	r3, #0
 8001e2c:	7123      	strb	r3, [r4, #4]
 8001e2e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      if((HAL_GetTick() - tickstart ) > RNG_TIMEOUT_VALUE)
 8001e30:	f7ff f8be 	bl	8000fb0 <HAL_GetTick>
 8001e34:	1bc0      	subs	r0, r0, r7
 8001e36:	2802      	cmp	r0, #2
 8001e38:	d9ec      	bls.n	8001e14 <HAL_RNG_GenerateRandomNumber+0x20>
        hrng->State = HAL_RNG_STATE_ERROR;
 8001e3a:	2304      	movs	r3, #4
 8001e3c:	7163      	strb	r3, [r4, #5]
        __HAL_UNLOCK(hrng);
 8001e3e:	7125      	strb	r5, [r4, #4]
        return HAL_TIMEOUT;
 8001e40:	2003      	movs	r0, #3
 8001e42:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  __HAL_LOCK(hrng); 
 8001e44:	2002      	movs	r0, #2

  return status;
}
 8001e46:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08001e48 <HAL_RNG_GetRandomNumber>:
  * @param  hrng: pointer to a RNG_HandleTypeDef structure that contains
  *                the configuration information for RNG.
  * @retval random value
  */
uint32_t HAL_RNG_GetRandomNumber(RNG_HandleTypeDef *hrng)
{
 8001e48:	b510      	push	{r4, lr}
  if(HAL_RNG_GenerateRandomNumber(hrng, &(hrng->RandomNumber)) == HAL_OK)
 8001e4a:	f100 010c 	add.w	r1, r0, #12
{
 8001e4e:	4604      	mov	r4, r0
  if(HAL_RNG_GenerateRandomNumber(hrng, &(hrng->RandomNumber)) == HAL_OK)
 8001e50:	f7ff ffd0 	bl	8001df4 <HAL_RNG_GenerateRandomNumber>
 8001e54:	b908      	cbnz	r0, 8001e5a <HAL_RNG_GetRandomNumber+0x12>
  {
    return hrng->RandomNumber; 
 8001e56:	68e0      	ldr	r0, [r4, #12]
 8001e58:	bd10      	pop	{r4, pc}
  }
  else
  {
    return 0;
 8001e5a:	2000      	movs	r0, #0
  }
}
 8001e5c:	bd10      	pop	{r4, pc}
	...

08001e60 <HAL_TIM_Base_Start_IT>:
{
  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance));

  /* Enable the TIM Update interrupt */
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 8001e60:	6803      	ldr	r3, [r0, #0]

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(htim))
 8001e62:	480a      	ldr	r0, [pc, #40]	; (8001e8c <HAL_TIM_Base_Start_IT+0x2c>)
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 8001e64:	68da      	ldr	r2, [r3, #12]
 8001e66:	f042 0201 	orr.w	r2, r2, #1
 8001e6a:	60da      	str	r2, [r3, #12]
  if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(htim))
 8001e6c:	6899      	ldr	r1, [r3, #8]
 8001e6e:	4001      	ands	r1, r0
 8001e70:	2906      	cmp	r1, #6
 8001e72:	d008      	beq.n	8001e86 <HAL_TIM_Base_Start_IT+0x26>
 8001e74:	689a      	ldr	r2, [r3, #8]
 8001e76:	4002      	ands	r2, r0
 8001e78:	f5b2 3f80 	cmp.w	r2, #65536	; 0x10000
  {
    __HAL_TIM_ENABLE(htim);
 8001e7c:	bf1e      	ittt	ne
 8001e7e:	681a      	ldrne	r2, [r3, #0]
 8001e80:	f042 0201 	orrne.w	r2, r2, #1
 8001e84:	601a      	strne	r2, [r3, #0]
  }

  /* Return function status */
  return HAL_OK;
}
 8001e86:	2000      	movs	r0, #0
 8001e88:	4770      	bx	lr
 8001e8a:	bf00      	nop
 8001e8c:	00010007 	.word	0x00010007

08001e90 <HAL_TIM_OC_DelayElapsedCallback>:
 8001e90:	4770      	bx	lr

08001e92 <HAL_TIM_IC_CaptureCallback>:
 8001e92:	4770      	bx	lr

08001e94 <HAL_TIM_PWM_PulseFinishedCallback>:
 8001e94:	4770      	bx	lr

08001e96 <HAL_TIM_TriggerCallback>:
 8001e96:	4770      	bx	lr

08001e98 <HAL_TIM_IRQHandler>:
  * @retval None
  */
void HAL_TIM_IRQHandler(TIM_HandleTypeDef *htim)
{
  /* Capture compare 1 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 8001e98:	6803      	ldr	r3, [r0, #0]
 8001e9a:	691a      	ldr	r2, [r3, #16]
 8001e9c:	0791      	lsls	r1, r2, #30
{
 8001e9e:	b510      	push	{r4, lr}
 8001ea0:	4604      	mov	r4, r0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 8001ea2:	d50f      	bpl.n	8001ec4 <HAL_TIM_IRQHandler+0x2c>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
 8001ea4:	68da      	ldr	r2, [r3, #12]
 8001ea6:	0792      	lsls	r2, r2, #30
 8001ea8:	d50c      	bpl.n	8001ec4 <HAL_TIM_IRQHandler+0x2c>
    {
      {
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 8001eaa:	f06f 0202 	mvn.w	r2, #2
 8001eae:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;

        /* Input capture event */
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 8001eb0:	699b      	ldr	r3, [r3, #24]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 8001eb2:	2201      	movs	r2, #1
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 8001eb4:	0799      	lsls	r1, r3, #30
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 8001eb6:	7702      	strb	r2, [r0, #28]
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 8001eb8:	f000 8085 	beq.w	8001fc6 <HAL_TIM_IRQHandler+0x12e>
        {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
          htim->IC_CaptureCallback(htim);
#else
          HAL_TIM_IC_CaptureCallback(htim);
 8001ebc:	f7ff ffe9 	bl	8001e92 <HAL_TIM_IC_CaptureCallback>
#else
          HAL_TIM_OC_DelayElapsedCallback(htim);
          HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
        }
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8001ec0:	2300      	movs	r3, #0
 8001ec2:	7723      	strb	r3, [r4, #28]
      }
    }
  }
  /* Capture compare 2 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 8001ec4:	6823      	ldr	r3, [r4, #0]
 8001ec6:	691a      	ldr	r2, [r3, #16]
 8001ec8:	0752      	lsls	r2, r2, #29
 8001eca:	d510      	bpl.n	8001eee <HAL_TIM_IRQHandler+0x56>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
 8001ecc:	68da      	ldr	r2, [r3, #12]
 8001ece:	0750      	lsls	r0, r2, #29
 8001ed0:	d50d      	bpl.n	8001eee <HAL_TIM_IRQHandler+0x56>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 8001ed2:	f06f 0204 	mvn.w	r2, #4
 8001ed6:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
      /* Input capture event */
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 8001ed8:	699b      	ldr	r3, [r3, #24]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 8001eda:	2202      	movs	r2, #2
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 8001edc:	f413 7f40 	tst.w	r3, #768	; 0x300
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 8001ee0:	7722      	strb	r2, [r4, #28]
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 8001ee2:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 8001ee4:	d075      	beq.n	8001fd2 <HAL_TIM_IRQHandler+0x13a>
        HAL_TIM_IC_CaptureCallback(htim);
 8001ee6:	f7ff ffd4 	bl	8001e92 <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8001eea:	2300      	movs	r3, #0
 8001eec:	7723      	strb	r3, [r4, #28]
    }
  }
  /* Capture compare 3 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 8001eee:	6823      	ldr	r3, [r4, #0]
 8001ef0:	691a      	ldr	r2, [r3, #16]
 8001ef2:	0711      	lsls	r1, r2, #28
 8001ef4:	d50f      	bpl.n	8001f16 <HAL_TIM_IRQHandler+0x7e>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
 8001ef6:	68da      	ldr	r2, [r3, #12]
 8001ef8:	0712      	lsls	r2, r2, #28
 8001efa:	d50c      	bpl.n	8001f16 <HAL_TIM_IRQHandler+0x7e>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 8001efc:	f06f 0208 	mvn.w	r2, #8
 8001f00:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 8001f02:	69db      	ldr	r3, [r3, #28]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 8001f04:	2204      	movs	r2, #4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 8001f06:	079b      	lsls	r3, r3, #30
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 8001f08:	7722      	strb	r2, [r4, #28]
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 8001f0a:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 8001f0c:	d067      	beq.n	8001fde <HAL_TIM_IRQHandler+0x146>
        HAL_TIM_IC_CaptureCallback(htim);
 8001f0e:	f7ff ffc0 	bl	8001e92 <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8001f12:	2300      	movs	r3, #0
 8001f14:	7723      	strb	r3, [r4, #28]
    }
  }
  /* Capture compare 4 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 8001f16:	6823      	ldr	r3, [r4, #0]
 8001f18:	691a      	ldr	r2, [r3, #16]
 8001f1a:	06d0      	lsls	r0, r2, #27
 8001f1c:	d510      	bpl.n	8001f40 <HAL_TIM_IRQHandler+0xa8>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
 8001f1e:	68da      	ldr	r2, [r3, #12]
 8001f20:	06d1      	lsls	r1, r2, #27
 8001f22:	d50d      	bpl.n	8001f40 <HAL_TIM_IRQHandler+0xa8>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 8001f24:	f06f 0210 	mvn.w	r2, #16
 8001f28:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 8001f2a:	69db      	ldr	r3, [r3, #28]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 8001f2c:	2208      	movs	r2, #8
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 8001f2e:	f413 7f40 	tst.w	r3, #768	; 0x300
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 8001f32:	7722      	strb	r2, [r4, #28]
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 8001f34:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 8001f36:	d058      	beq.n	8001fea <HAL_TIM_IRQHandler+0x152>
        HAL_TIM_IC_CaptureCallback(htim);
 8001f38:	f7ff ffab 	bl	8001e92 <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8001f3c:	2300      	movs	r3, #0
 8001f3e:	7723      	strb	r3, [r4, #28]
    }
  }
  /* TIM Update event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 8001f40:	6823      	ldr	r3, [r4, #0]
 8001f42:	691a      	ldr	r2, [r3, #16]
 8001f44:	07d2      	lsls	r2, r2, #31
 8001f46:	d508      	bpl.n	8001f5a <HAL_TIM_IRQHandler+0xc2>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
 8001f48:	68da      	ldr	r2, [r3, #12]
 8001f4a:	07d0      	lsls	r0, r2, #31
 8001f4c:	d505      	bpl.n	8001f5a <HAL_TIM_IRQHandler+0xc2>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 8001f4e:	f06f 0201 	mvn.w	r2, #1
 8001f52:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->PeriodElapsedCallback(htim);
#else
      HAL_TIM_PeriodElapsedCallback(htim);
 8001f54:	4620      	mov	r0, r4
 8001f56:	f000 fb3d 	bl	80025d4 <HAL_TIM_PeriodElapsedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Break input event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 8001f5a:	6823      	ldr	r3, [r4, #0]
 8001f5c:	691a      	ldr	r2, [r3, #16]
 8001f5e:	0611      	lsls	r1, r2, #24
 8001f60:	d508      	bpl.n	8001f74 <HAL_TIM_IRQHandler+0xdc>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 8001f62:	68da      	ldr	r2, [r3, #12]
 8001f64:	0612      	lsls	r2, r2, #24
 8001f66:	d505      	bpl.n	8001f74 <HAL_TIM_IRQHandler+0xdc>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 8001f68:	f06f 0280 	mvn.w	r2, #128	; 0x80
 8001f6c:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->BreakCallback(htim);
#else
      HAL_TIMEx_BreakCallback(htim);
 8001f6e:	4620      	mov	r0, r4
 8001f70:	f000 f8bf 	bl	80020f2 <HAL_TIMEx_BreakCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Break2 input event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK2) != RESET)
 8001f74:	6823      	ldr	r3, [r4, #0]
 8001f76:	691a      	ldr	r2, [r3, #16]
 8001f78:	05d0      	lsls	r0, r2, #23
 8001f7a:	d508      	bpl.n	8001f8e <HAL_TIM_IRQHandler+0xf6>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 8001f7c:	68da      	ldr	r2, [r3, #12]
 8001f7e:	0611      	lsls	r1, r2, #24
 8001f80:	d505      	bpl.n	8001f8e <HAL_TIM_IRQHandler+0xf6>
    {
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK2);
 8001f82:	f46f 7280 	mvn.w	r2, #256	; 0x100
 8001f86:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->Break2Callback(htim);
#else
      HAL_TIMEx_Break2Callback(htim);
 8001f88:	4620      	mov	r0, r4
 8001f8a:	f000 f8b3 	bl	80020f4 <HAL_TIMEx_Break2Callback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Trigger detection event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 8001f8e:	6823      	ldr	r3, [r4, #0]
 8001f90:	691a      	ldr	r2, [r3, #16]
 8001f92:	0652      	lsls	r2, r2, #25
 8001f94:	d508      	bpl.n	8001fa8 <HAL_TIM_IRQHandler+0x110>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
 8001f96:	68da      	ldr	r2, [r3, #12]
 8001f98:	0650      	lsls	r0, r2, #25
 8001f9a:	d505      	bpl.n	8001fa8 <HAL_TIM_IRQHandler+0x110>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 8001f9c:	f06f 0240 	mvn.w	r2, #64	; 0x40
 8001fa0:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->TriggerCallback(htim);
#else
      HAL_TIM_TriggerCallback(htim);
 8001fa2:	4620      	mov	r0, r4
 8001fa4:	f7ff ff77 	bl	8001e96 <HAL_TIM_TriggerCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM commutation event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 8001fa8:	6823      	ldr	r3, [r4, #0]
 8001faa:	691a      	ldr	r2, [r3, #16]
 8001fac:	0691      	lsls	r1, r2, #26
 8001fae:	d522      	bpl.n	8001ff6 <HAL_TIM_IRQHandler+0x15e>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
 8001fb0:	68da      	ldr	r2, [r3, #12]
 8001fb2:	0692      	lsls	r2, r2, #26
 8001fb4:	d51f      	bpl.n	8001ff6 <HAL_TIM_IRQHandler+0x15e>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 8001fb6:	f06f 0220 	mvn.w	r2, #32
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->CommutationCallback(htim);
#else
      HAL_TIMEx_CommutationCallback(htim);
 8001fba:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 8001fbc:	611a      	str	r2, [r3, #16]
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
}
 8001fbe:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      HAL_TIMEx_CommutationCallback(htim);
 8001fc2:	f000 b895 	b.w	80020f0 <HAL_TIMEx_CommutationCallback>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 8001fc6:	f7ff ff63 	bl	8001e90 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 8001fca:	4620      	mov	r0, r4
 8001fcc:	f7ff ff62 	bl	8001e94 <HAL_TIM_PWM_PulseFinishedCallback>
 8001fd0:	e776      	b.n	8001ec0 <HAL_TIM_IRQHandler+0x28>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8001fd2:	f7ff ff5d 	bl	8001e90 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8001fd6:	4620      	mov	r0, r4
 8001fd8:	f7ff ff5c 	bl	8001e94 <HAL_TIM_PWM_PulseFinishedCallback>
 8001fdc:	e785      	b.n	8001eea <HAL_TIM_IRQHandler+0x52>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8001fde:	f7ff ff57 	bl	8001e90 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8001fe2:	4620      	mov	r0, r4
 8001fe4:	f7ff ff56 	bl	8001e94 <HAL_TIM_PWM_PulseFinishedCallback>
 8001fe8:	e793      	b.n	8001f12 <HAL_TIM_IRQHandler+0x7a>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8001fea:	f7ff ff51 	bl	8001e90 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8001fee:	4620      	mov	r0, r4
 8001ff0:	f7ff ff50 	bl	8001e94 <HAL_TIM_PWM_PulseFinishedCallback>
 8001ff4:	e7a2      	b.n	8001f3c <HAL_TIM_IRQHandler+0xa4>
 8001ff6:	bd10      	pop	{r4, pc}

08001ff8 <TIM_Base_SetConfig>:
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 8001ff8:	4a1a      	ldr	r2, [pc, #104]	; (8002064 <TIM_Base_SetConfig+0x6c>)
  tmpcr1 = TIMx->CR1;
 8001ffa:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 8001ffc:	4290      	cmp	r0, r2
{
 8001ffe:	b510      	push	{r4, lr}
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 8002000:	d002      	beq.n	8002008 <TIM_Base_SetConfig+0x10>
 8002002:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 8002006:	d109      	bne.n	800201c <TIM_Base_SetConfig+0x24>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
 8002008:	684c      	ldr	r4, [r1, #4]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800200a:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 800200e:	4290      	cmp	r0, r2
    tmpcr1 |= Structure->CounterMode;
 8002010:	ea43 0304 	orr.w	r3, r3, r4
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 8002014:	d009      	beq.n	800202a <TIM_Base_SetConfig+0x32>
 8002016:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 800201a:	d006      	beq.n	800202a <TIM_Base_SetConfig+0x32>
 800201c:	4a12      	ldr	r2, [pc, #72]	; (8002068 <TIM_Base_SetConfig+0x70>)
 800201e:	4290      	cmp	r0, r2
 8002020:	d003      	beq.n	800202a <TIM_Base_SetConfig+0x32>
 8002022:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8002026:	4290      	cmp	r0, r2
 8002028:	d103      	bne.n	8002032 <TIM_Base_SetConfig+0x3a>
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800202a:	68ca      	ldr	r2, [r1, #12]
    tmpcr1 &= ~TIM_CR1_CKD;
 800202c:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 8002030:	4313      	orrs	r3, r2
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 8002032:	694a      	ldr	r2, [r1, #20]
 8002034:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8002038:	4313      	orrs	r3, r2

  TIMx->CR1 = tmpcr1;
 800203a:	6003      	str	r3, [r0, #0]

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 800203c:	688b      	ldr	r3, [r1, #8]
 800203e:	62c3      	str	r3, [r0, #44]	; 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 8002040:	680b      	ldr	r3, [r1, #0]
 8002042:	6283      	str	r3, [r0, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 8002044:	4b07      	ldr	r3, [pc, #28]	; (8002064 <TIM_Base_SetConfig+0x6c>)
 8002046:	4298      	cmp	r0, r3
 8002048:	d007      	beq.n	800205a <TIM_Base_SetConfig+0x62>
 800204a:	f503 53a0 	add.w	r3, r3, #5120	; 0x1400
 800204e:	4298      	cmp	r0, r3
 8002050:	d003      	beq.n	800205a <TIM_Base_SetConfig+0x62>
 8002052:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8002056:	4298      	cmp	r0, r3
 8002058:	d101      	bne.n	800205e <TIM_Base_SetConfig+0x66>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
 800205a:	690b      	ldr	r3, [r1, #16]
 800205c:	6303      	str	r3, [r0, #48]	; 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 800205e:	2301      	movs	r3, #1
 8002060:	6143      	str	r3, [r0, #20]
 8002062:	bd10      	pop	{r4, pc}
 8002064:	40012c00 	.word	0x40012c00
 8002068:	40014000 	.word	0x40014000

0800206c <HAL_TIM_Base_Init>:
{
 800206c:	b510      	push	{r4, lr}
  if (htim == NULL)
 800206e:	4604      	mov	r4, r0
 8002070:	b1a0      	cbz	r0, 800209c <HAL_TIM_Base_Init+0x30>
  if (htim->State == HAL_TIM_STATE_RESET)
 8002072:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8002076:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800207a:	b91b      	cbnz	r3, 8002084 <HAL_TIM_Base_Init+0x18>
    htim->Lock = HAL_UNLOCKED;
 800207c:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_Base_MspInit(htim);
 8002080:	f000 fc76 	bl	8002970 <HAL_TIM_Base_MspInit>
  htim->State = HAL_TIM_STATE_BUSY;
 8002084:	2302      	movs	r3, #2
 8002086:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800208a:	6820      	ldr	r0, [r4, #0]
 800208c:	1d21      	adds	r1, r4, #4
 800208e:	f7ff ffb3 	bl	8001ff8 <TIM_Base_SetConfig>
  htim->State = HAL_TIM_STATE_READY;
 8002092:	2301      	movs	r3, #1
 8002094:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  return HAL_OK;
 8002098:	2000      	movs	r0, #0
 800209a:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 800209c:	2001      	movs	r0, #1
}
 800209e:	bd10      	pop	{r4, pc}

080020a0 <HAL_TIMEx_MasterConfigSynchronization>:
  assert_param(IS_TIM_SYNCHRO_INSTANCE(htim->Instance));
  assert_param(IS_TIM_TRGO_SOURCE(sMasterConfig->MasterOutputTrigger));
  assert_param(IS_TIM_MSM_STATE(sMasterConfig->MasterSlaveMode));

  /* Check input state */
  __HAL_LOCK(htim);
 80020a0:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 80020a4:	2b01      	cmp	r3, #1
{
 80020a6:	b530      	push	{r4, r5, lr}
 80020a8:	f04f 0302 	mov.w	r3, #2
  __HAL_LOCK(htim);
 80020ac:	d01b      	beq.n	80020e6 <HAL_TIMEx_MasterConfigSynchronization+0x46>

  /* Change the handler state */
  htim->State = HAL_TIM_STATE_BUSY;

  /* Get the TIMx CR2 register value */
  tmpcr2 = htim->Instance->CR2;
 80020ae:	6802      	ldr	r2, [r0, #0]

  /* Get the TIMx SMCR register value */
  tmpsmcr = htim->Instance->SMCR;

  /* If the timer supports ADC synchronization through TRGO2, set the master mode selection 2 */
  if (IS_TIM_TRGO2_INSTANCE(htim->Instance))
 80020b0:	4d0e      	ldr	r5, [pc, #56]	; (80020ec <HAL_TIMEx_MasterConfigSynchronization+0x4c>)
  htim->State = HAL_TIM_STATE_BUSY;
 80020b2:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
  tmpcr2 = htim->Instance->CR2;
 80020b6:	6853      	ldr	r3, [r2, #4]
  tmpsmcr = htim->Instance->SMCR;
 80020b8:	6894      	ldr	r4, [r2, #8]
  if (IS_TIM_TRGO2_INSTANCE(htim->Instance))
 80020ba:	42aa      	cmp	r2, r5
    assert_param(IS_TIM_TRGO2_SOURCE(sMasterConfig->MasterOutputTrigger2));

    /* Clear the MMS2 bits */
    tmpcr2 &= ~TIM_CR2_MMS2;
    /* Select the TRGO2 source*/
    tmpcr2 |= sMasterConfig->MasterOutputTrigger2;
 80020bc:	bf02      	ittt	eq
 80020be:	684d      	ldreq	r5, [r1, #4]
    tmpcr2 &= ~TIM_CR2_MMS2;
 80020c0:	f423 0370 	biceq.w	r3, r3, #15728640	; 0xf00000
    tmpcr2 |= sMasterConfig->MasterOutputTrigger2;
 80020c4:	432b      	orreq	r3, r5
  }

  /* Reset the MMS Bits */
  tmpcr2 &= ~TIM_CR2_MMS;
  /* Select the TRGO source */
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 80020c6:	680d      	ldr	r5, [r1, #0]

  /* Reset the MSM Bit */
  tmpsmcr &= ~TIM_SMCR_MSM;
  /* Set master mode */
  tmpsmcr |= sMasterConfig->MasterSlaveMode;
 80020c8:	6889      	ldr	r1, [r1, #8]
  tmpcr2 &= ~TIM_CR2_MMS;
 80020ca:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 80020ce:	432b      	orrs	r3, r5
  tmpsmcr &= ~TIM_SMCR_MSM;
 80020d0:	f024 0480 	bic.w	r4, r4, #128	; 0x80

  /* Update TIMx CR2 */
  htim->Instance->CR2 = tmpcr2;
 80020d4:	6053      	str	r3, [r2, #4]
  tmpsmcr |= sMasterConfig->MasterSlaveMode;
 80020d6:	4321      	orrs	r1, r4

  /* Update TIMx SMCR */
  htim->Instance->SMCR = tmpsmcr;

  /* Change the htim state */
  htim->State = HAL_TIM_STATE_READY;
 80020d8:	2301      	movs	r3, #1
  htim->Instance->SMCR = tmpsmcr;
 80020da:	6091      	str	r1, [r2, #8]
  htim->State = HAL_TIM_STATE_READY;
 80020dc:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d

  __HAL_UNLOCK(htim);
 80020e0:	2300      	movs	r3, #0
 80020e2:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
  __HAL_LOCK(htim);
 80020e6:	4618      	mov	r0, r3

  return HAL_OK;
}
 80020e8:	bd30      	pop	{r4, r5, pc}
 80020ea:	bf00      	nop
 80020ec:	40012c00 	.word	0x40012c00

080020f0 <HAL_TIMEx_CommutationCallback>:
 80020f0:	4770      	bx	lr

080020f2 <HAL_TIMEx_BreakCallback>:
 80020f2:	4770      	bx	lr

080020f4 <HAL_TIMEx_Break2Callback>:
  * @brief  Hall Break2 detection callback in non blocking mode
  * @param  htim: TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_Break2Callback(TIM_HandleTypeDef *htim)
{
 80020f4:	4770      	bx	lr
	...

080020f8 <UART_SetConfig>:
  uint32_t lpuart_ker_ck_pres         = 0x00000000U;

  /* Check the parameters */
  assert_param(IS_UART_BAUDRATE(huart->Init.BaudRate));
  assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
  if (UART_INSTANCE_LOWPOWER(huart))
 80020f8:	6802      	ldr	r2, [r0, #0]
  *  the UART Word Length, Parity, Mode and oversampling:
  *  set the M bits according to huart->Init.WordLength value
  *  set PCE and PS bits according to huart->Init.Parity value
  *  set TE and RE bits according to huart->Init.Mode value
  *  set OVER8 bit according to huart->Init.OverSampling value */
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
 80020fa:	69c1      	ldr	r1, [r0, #28]
{
 80020fc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80020fe:	4604      	mov	r4, r0
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
 8002100:	6883      	ldr	r3, [r0, #8]
 8002102:	6900      	ldr	r0, [r0, #16]
#if defined(USART_CR1_FIFOEN)
  tmpreg |= (uint32_t)huart->FifoMode;
#endif
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 8002104:	6815      	ldr	r5, [r2, #0]
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
 8002106:	4303      	orrs	r3, r0
 8002108:	6960      	ldr	r0, [r4, #20]
 800210a:	4303      	orrs	r3, r0
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 800210c:	4882      	ldr	r0, [pc, #520]	; (8002318 <UART_SetConfig+0x220>)
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
 800210e:	430b      	orrs	r3, r1
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 8002110:	4028      	ands	r0, r5
 8002112:	4303      	orrs	r3, r0
 8002114:	6013      	str	r3, [r2, #0]

  /*-------------------------- USART CR2 Configuration -----------------------*/
  /* Configure the UART Stop Bits: Set STOP[13:12] bits according
  * to huart->Init.StopBits value */
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 8002116:	6853      	ldr	r3, [r2, #4]
 8002118:	68e0      	ldr	r0, [r4, #12]
 800211a:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 800211e:	4303      	orrs	r3, r0
 8002120:	6053      	str	r3, [r2, #4]
  *   to huart->Init.HwFlowCtl value
  * - one-bit sampling method versus three samples' majority rule according
  *   to huart->Init.OneBitSampling (not applicable to LPUART) */
  tmpreg = (uint32_t)huart->Init.HwFlowCtl;

  if (!(UART_INSTANCE_LOWPOWER(huart)))
 8002122:	4b7e      	ldr	r3, [pc, #504]	; (800231c <UART_SetConfig+0x224>)
  tmpreg = (uint32_t)huart->Init.HwFlowCtl;
 8002124:	69a0      	ldr	r0, [r4, #24]
  if (!(UART_INSTANCE_LOWPOWER(huart)))
 8002126:	429a      	cmp	r2, r3
  {
    tmpreg |= huart->Init.OneBitSampling;
 8002128:	bf1c      	itt	ne
 800212a:	6a23      	ldrne	r3, [r4, #32]
 800212c:	4318      	orrne	r0, r3
  }
  MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
 800212e:	6893      	ldr	r3, [r2, #8]
 8002130:	f423 6330 	bic.w	r3, r3, #2816	; 0xb00
 8002134:	4303      	orrs	r3, r0
 8002136:	6093      	str	r3, [r2, #8]
  * - UART Clock Prescaler : set PRESCALER according to huart->Init.ClockPrescaler value */
  MODIFY_REG(huart->Instance->PRESC, USART_PRESC_PRESCALER, huart->Init.ClockPrescaler);
#endif

  /*-------------------------- USART BRR Configuration -----------------------*/
  UART_GETCLOCKSOURCE(huart, clocksource);
 8002138:	4b79      	ldr	r3, [pc, #484]	; (8002320 <UART_SetConfig+0x228>)
 800213a:	429a      	cmp	r2, r3
 800213c:	d114      	bne.n	8002168 <UART_SetConfig+0x70>
 800213e:	f503 4358 	add.w	r3, r3, #55296	; 0xd800
 8002142:	4a78      	ldr	r2, [pc, #480]	; (8002324 <UART_SetConfig+0x22c>)
 8002144:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8002148:	f003 0303 	and.w	r3, r3, #3
        }
      }  /*   if ( (tmpreg < (3 * huart->Init.BaudRate) ) || (tmpreg > (4096 * huart->Init.BaudRate) )) */
    } /* if (tmpreg != 0) */
  }
  /* Check UART Over Sampling to set Baud Rate Register */
  else if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 800214c:	f5b1 4f00 	cmp.w	r1, #32768	; 0x8000
 8002150:	5cd3      	ldrb	r3, [r2, r3]
 8002152:	f040 80aa 	bne.w	80022aa <UART_SetConfig+0x1b2>
  {
    switch (clocksource)
 8002156:	2b08      	cmp	r3, #8
 8002158:	d820      	bhi.n	800219c <UART_SetConfig+0xa4>
 800215a:	e8df f003 	tbb	[pc, r3]
 800215e:	8f77      	.short	0x8f77
 8002160:	1f9b1f92 	.word	0x1f9b1f92
 8002164:	1f1f      	.short	0x1f1f
 8002166:	9e          	.byte	0x9e
 8002167:	00          	.byte	0x00
  UART_GETCLOCKSOURCE(huart, clocksource);
 8002168:	4b6f      	ldr	r3, [pc, #444]	; (8002328 <UART_SetConfig+0x230>)
 800216a:	429a      	cmp	r2, r3
 800216c:	d107      	bne.n	800217e <UART_SetConfig+0x86>
 800216e:	f503 33e6 	add.w	r3, r3, #117760	; 0x1cc00
 8002172:	4a6e      	ldr	r2, [pc, #440]	; (800232c <UART_SetConfig+0x234>)
 8002174:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8002178:	f003 030c 	and.w	r3, r3, #12
 800217c:	e7e6      	b.n	800214c <UART_SetConfig+0x54>
 800217e:	4b67      	ldr	r3, [pc, #412]	; (800231c <UART_SetConfig+0x224>)
 8002180:	429a      	cmp	r2, r3
 8002182:	f040 80c2 	bne.w	800230a <UART_SetConfig+0x212>
 8002186:	f503 33c8 	add.w	r3, r3, #102400	; 0x19000
 800218a:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
 800218e:	f405 6540 	and.w	r5, r5, #3072	; 0xc00
 8002192:	f5b5 6f80 	cmp.w	r5, #1024	; 0x400
 8002196:	d02a      	beq.n	80021ee <UART_SetConfig+0xf6>
 8002198:	d806      	bhi.n	80021a8 <UART_SetConfig+0xb0>
 800219a:	b315      	cbz	r5, 80021e2 <UART_SetConfig+0xea>
        ret = HAL_ERROR;
 800219c:	2201      	movs	r2, #1
  huart->NbTxDataToProcess = 1;
  huart->NbRxDataToProcess = 1;
#endif

  /* Clear ISR function pointers */
  huart->RxISR = NULL;
 800219e:	2300      	movs	r3, #0
 80021a0:	6623      	str	r3, [r4, #96]	; 0x60
  huart->TxISR = NULL;
 80021a2:	6663      	str	r3, [r4, #100]	; 0x64

  return ret;
}
 80021a4:	4610      	mov	r0, r2
 80021a6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  UART_GETCLOCKSOURCE(huart, clocksource);
 80021a8:	f5b5 6f00 	cmp.w	r5, #2048	; 0x800
 80021ac:	d006      	beq.n	80021bc <UART_SetConfig+0xc4>
 80021ae:	f5b5 6f40 	cmp.w	r5, #3072	; 0xc00
 80021b2:	d1f3      	bne.n	800219c <UART_SetConfig+0xa4>
        lpuart_ker_ck_pres = (uint32_t)LSE_VALUE;
 80021b4:	f44f 4000 	mov.w	r0, #32768	; 0x8000
  UART_GETCLOCKSOURCE(huart, clocksource);
 80021b8:	2508      	movs	r5, #8
 80021ba:	e001      	b.n	80021c0 <UART_SetConfig+0xc8>
        lpuart_ker_ck_pres = (uint32_t)HSI_VALUE;
 80021bc:	485c      	ldr	r0, [pc, #368]	; (8002330 <UART_SetConfig+0x238>)
  UART_GETCLOCKSOURCE(huart, clocksource);
 80021be:	2502      	movs	r5, #2
      if ((lpuart_ker_ck_pres < (3 * huart->Init.BaudRate)) ||
 80021c0:	6862      	ldr	r2, [r4, #4]
 80021c2:	eb02 0342 	add.w	r3, r2, r2, lsl #1
 80021c6:	4283      	cmp	r3, r0
 80021c8:	d8e8      	bhi.n	800219c <UART_SetConfig+0xa4>
 80021ca:	ebb0 3f02 	cmp.w	r0, r2, lsl #12
 80021ce:	d8e5      	bhi.n	800219c <UART_SetConfig+0xa4>
        switch (clocksource)
 80021d0:	2d08      	cmp	r5, #8
 80021d2:	d838      	bhi.n	8002246 <UART_SetConfig+0x14e>
 80021d4:	e8df f005 	tbb	[pc, r5]
 80021d8:	3726370f 	.word	0x3726370f
 80021dc:	3737372e 	.word	0x3737372e
 80021e0:	31          	.byte	0x31
 80021e1:	00          	.byte	0x00
        lpuart_ker_ck_pres = HAL_RCC_GetPCLK1Freq();
 80021e2:	f7ff fbf3 	bl	80019cc <HAL_RCC_GetPCLK1Freq>
    if (lpuart_ker_ck_pres != 0U)
 80021e6:	2800      	cmp	r0, #0
 80021e8:	d1ea      	bne.n	80021c0 <UART_SetConfig+0xc8>
 80021ea:	4602      	mov	r2, r0
 80021ec:	e7d7      	b.n	800219e <UART_SetConfig+0xa6>
        lpuart_ker_ck_pres = HAL_RCC_GetSysClockFreq();
 80021ee:	f7ff f8af 	bl	8001350 <HAL_RCC_GetSysClockFreq>
        break;
 80021f2:	2504      	movs	r5, #4
 80021f4:	e7f7      	b.n	80021e6 <UART_SetConfig+0xee>
            usartdiv = (uint32_t)(UART_DIV_LPUART(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate));
 80021f6:	f7ff fbe9 	bl	80019cc <HAL_RCC_GetPCLK1Freq>
            usartdiv = (uint32_t)(UART_DIV_LPUART(HAL_RCC_GetSysClockFreq(), huart->Init.BaudRate));
 80021fa:	6862      	ldr	r2, [r4, #4]
 80021fc:	f44f 7180 	mov.w	r1, #256	; 0x100
 8002200:	0856      	lsrs	r6, r2, #1
 8002202:	2700      	movs	r7, #0
 8002204:	fbe1 6700 	umlal	r6, r7, r1, r0
 8002208:	2300      	movs	r3, #0
 800220a:	4630      	mov	r0, r6
 800220c:	4639      	mov	r1, r7
            usartdiv = (uint32_t)(UART_DIV_LPUART(LSE_VALUE, huart->Init.BaudRate));
 800220e:	f7fe fd17 	bl	8000c40 <__aeabi_uldivmod>
            break;
 8002212:	2200      	movs	r2, #0
        if ((usartdiv >= LPUART_BRR_MIN) && (usartdiv <= LPUART_BRR_MAX))
 8002214:	4b47      	ldr	r3, [pc, #284]	; (8002334 <UART_SetConfig+0x23c>)
 8002216:	f5a0 7140 	sub.w	r1, r0, #768	; 0x300
 800221a:	4299      	cmp	r1, r3
 800221c:	d8be      	bhi.n	800219c <UART_SetConfig+0xa4>
          huart->Instance->BRR = usartdiv;
 800221e:	6823      	ldr	r3, [r4, #0]
 8002220:	60d8      	str	r0, [r3, #12]
 8002222:	e7bc      	b.n	800219e <UART_SetConfig+0xa6>
            usartdiv = (uint32_t)(UART_DIV_LPUART(HSI_VALUE, huart->Init.BaudRate));
 8002224:	4844      	ldr	r0, [pc, #272]	; (8002338 <UART_SetConfig+0x240>)
 8002226:	0855      	lsrs	r5, r2, #1
 8002228:	2300      	movs	r3, #0
 800222a:	2100      	movs	r1, #0
 800222c:	1940      	adds	r0, r0, r5
            usartdiv = (uint32_t)(UART_DIV_LPUART(LSE_VALUE, huart->Init.BaudRate));
 800222e:	f141 0100 	adc.w	r1, r1, #0
 8002232:	e7ec      	b.n	800220e <UART_SetConfig+0x116>
            usartdiv = (uint32_t)(UART_DIV_LPUART(HAL_RCC_GetSysClockFreq(), huart->Init.BaudRate));
 8002234:	f7ff f88c 	bl	8001350 <HAL_RCC_GetSysClockFreq>
 8002238:	e7df      	b.n	80021fa <UART_SetConfig+0x102>
            usartdiv = (uint32_t)(UART_DIV_LPUART(LSE_VALUE, huart->Init.BaudRate));
 800223a:	0850      	lsrs	r0, r2, #1
 800223c:	2100      	movs	r1, #0
 800223e:	2300      	movs	r3, #0
 8002240:	f510 0000 	adds.w	r0, r0, #8388608	; 0x800000
 8002244:	e7f3      	b.n	800222e <UART_SetConfig+0x136>
            ret = HAL_ERROR;
 8002246:	2201      	movs	r2, #1
  uint32_t usartdiv                   = 0x00000000U;
 8002248:	2000      	movs	r0, #0
 800224a:	e7e3      	b.n	8002214 <UART_SetConfig+0x11c>
        usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate));
 800224c:	f7ff fbbe 	bl	80019cc <HAL_RCC_GetPCLK1Freq>
        usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HAL_RCC_GetSysClockFreq(), huart->Init.BaudRate));
 8002250:	6861      	ldr	r1, [r4, #4]
 8002252:	084a      	lsrs	r2, r1, #1
 8002254:	eb02 0340 	add.w	r3, r2, r0, lsl #1
 8002258:	fbb3 f3f1 	udiv	r3, r3, r1
 800225c:	b29b      	uxth	r3, r3
  HAL_StatusTypeDef ret               = HAL_OK;
 800225e:	2200      	movs	r2, #0
    if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 8002260:	f1a3 0010 	sub.w	r0, r3, #16
 8002264:	f64f 71ef 	movw	r1, #65519	; 0xffef
 8002268:	4288      	cmp	r0, r1
 800226a:	d897      	bhi.n	800219c <UART_SetConfig+0xa4>
      brrtemp = usartdiv & 0xFFF0U;
 800226c:	f023 010f 	bic.w	r1, r3, #15
      huart->Instance->BRR = brrtemp;
 8002270:	6820      	ldr	r0, [r4, #0]
      brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
 8002272:	f3c3 0342 	ubfx	r3, r3, #1, #3
      huart->Instance->BRR = brrtemp;
 8002276:	430b      	orrs	r3, r1
 8002278:	60c3      	str	r3, [r0, #12]
 800227a:	e790      	b.n	800219e <UART_SetConfig+0xa6>
        usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HAL_RCC_GetPCLK2Freq(), huart->Init.BaudRate));
 800227c:	f7ff fbb8 	bl	80019f0 <HAL_RCC_GetPCLK2Freq>
 8002280:	e7e6      	b.n	8002250 <UART_SetConfig+0x158>
        usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HSI_VALUE, huart->Init.BaudRate));
 8002282:	6860      	ldr	r0, [r4, #4]
 8002284:	0843      	lsrs	r3, r0, #1
 8002286:	f103 73f4 	add.w	r3, r3, #31981568	; 0x1e80000
 800228a:	f503 4390 	add.w	r3, r3, #18432	; 0x4800
        usartdiv = (uint16_t)(UART_DIV_SAMPLING8(LSE_VALUE, huart->Init.BaudRate));
 800228e:	fbb3 f3f0 	udiv	r3, r3, r0
 8002292:	e7e3      	b.n	800225c <UART_SetConfig+0x164>
        usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HAL_RCC_GetSysClockFreq(), huart->Init.BaudRate));
 8002294:	f7ff f85c 	bl	8001350 <HAL_RCC_GetSysClockFreq>
 8002298:	e7da      	b.n	8002250 <UART_SetConfig+0x158>
        usartdiv = (uint16_t)(UART_DIV_SAMPLING8(LSE_VALUE, huart->Init.BaudRate));
 800229a:	6860      	ldr	r0, [r4, #4]
 800229c:	0843      	lsrs	r3, r0, #1
 800229e:	f503 3380 	add.w	r3, r3, #65536	; 0x10000
 80022a2:	e7f4      	b.n	800228e <UART_SetConfig+0x196>
        ret = HAL_ERROR;
 80022a4:	2201      	movs	r2, #1
  uint32_t usartdiv                   = 0x00000000U;
 80022a6:	2300      	movs	r3, #0
 80022a8:	e7da      	b.n	8002260 <UART_SetConfig+0x168>
    switch (clocksource)
 80022aa:	2b08      	cmp	r3, #8
 80022ac:	d830      	bhi.n	8002310 <UART_SetConfig+0x218>
 80022ae:	e8df f003 	tbb	[pc, r3]
 80022b2:	1805      	.short	0x1805
 80022b4:	2f242f1b 	.word	0x2f242f1b
 80022b8:	2f2f      	.short	0x2f2f
 80022ba:	27          	.byte	0x27
 80022bb:	00          	.byte	0x00
        usartdiv = (uint16_t)(UART_DIV_SAMPLING16(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate));
 80022bc:	f7ff fb86 	bl	80019cc <HAL_RCC_GetPCLK1Freq>
        usartdiv = (uint16_t)(UART_DIV_SAMPLING16(HAL_RCC_GetPCLK2Freq(), huart->Init.BaudRate));
 80022c0:	6862      	ldr	r2, [r4, #4]
 80022c2:	eb00 0352 	add.w	r3, r0, r2, lsr #1
 80022c6:	fbb3 f3f2 	udiv	r3, r3, r2
 80022ca:	b29b      	uxth	r3, r3
  HAL_StatusTypeDef ret               = HAL_OK;
 80022cc:	2200      	movs	r2, #0
    if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 80022ce:	f1a3 0010 	sub.w	r0, r3, #16
 80022d2:	f64f 71ef 	movw	r1, #65519	; 0xffef
 80022d6:	4288      	cmp	r0, r1
 80022d8:	f63f af60 	bhi.w	800219c <UART_SetConfig+0xa4>
      huart->Instance->BRR = usartdiv;
 80022dc:	6821      	ldr	r1, [r4, #0]
 80022de:	60cb      	str	r3, [r1, #12]
 80022e0:	e75d      	b.n	800219e <UART_SetConfig+0xa6>
        usartdiv = (uint16_t)(UART_DIV_SAMPLING16(HAL_RCC_GetPCLK2Freq(), huart->Init.BaudRate));
 80022e2:	f7ff fb85 	bl	80019f0 <HAL_RCC_GetPCLK2Freq>
 80022e6:	e7eb      	b.n	80022c0 <UART_SetConfig+0x1c8>
        usartdiv = (uint16_t)(UART_DIV_SAMPLING16(HSI_VALUE, huart->Init.BaudRate));
 80022e8:	6860      	ldr	r0, [r4, #4]
 80022ea:	0843      	lsrs	r3, r0, #1
 80022ec:	f503 0374 	add.w	r3, r3, #15990784	; 0xf40000
 80022f0:	f503 5310 	add.w	r3, r3, #9216	; 0x2400
        usartdiv = (uint16_t)(UART_DIV_SAMPLING16(LSE_VALUE, huart->Init.BaudRate));
 80022f4:	fbb3 f3f0 	udiv	r3, r3, r0
 80022f8:	e7e7      	b.n	80022ca <UART_SetConfig+0x1d2>
        usartdiv = (uint16_t)(UART_DIV_SAMPLING16(HAL_RCC_GetSysClockFreq(), huart->Init.BaudRate));
 80022fa:	f7ff f829 	bl	8001350 <HAL_RCC_GetSysClockFreq>
 80022fe:	e7df      	b.n	80022c0 <UART_SetConfig+0x1c8>
        usartdiv = (uint16_t)(UART_DIV_SAMPLING16(LSE_VALUE, huart->Init.BaudRate));
 8002300:	6860      	ldr	r0, [r4, #4]
 8002302:	0843      	lsrs	r3, r0, #1
 8002304:	f503 4300 	add.w	r3, r3, #32768	; 0x8000
 8002308:	e7f4      	b.n	80022f4 <UART_SetConfig+0x1fc>
  else if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 800230a:	f5b1 4f00 	cmp.w	r1, #32768	; 0x8000
 800230e:	d0c9      	beq.n	80022a4 <UART_SetConfig+0x1ac>
        ret = HAL_ERROR;
 8002310:	2201      	movs	r2, #1
  uint32_t usartdiv                   = 0x00000000U;
 8002312:	2300      	movs	r3, #0
 8002314:	e7db      	b.n	80022ce <UART_SetConfig+0x1d6>
 8002316:	bf00      	nop
 8002318:	efff69f3 	.word	0xefff69f3
 800231c:	40008000 	.word	0x40008000
 8002320:	40013800 	.word	0x40013800
 8002324:	08007738 	.word	0x08007738
 8002328:	40004400 	.word	0x40004400
 800232c:	0800773c 	.word	0x0800773c
 8002330:	00f42400 	.word	0x00f42400
 8002334:	000ffcff 	.word	0x000ffcff
 8002338:	f4240000 	.word	0xf4240000

0800233c <UART_AdvFeatureConfig>:
{
  /* Check whether the set of advanced features to configure is properly set */
  assert_param(IS_UART_ADVFEATURE_INIT(huart->AdvancedInit.AdvFeatureInit));

  /* if required, configure TX pin active level inversion */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
 800233c:	6a43      	ldr	r3, [r0, #36]	; 0x24
 800233e:	07da      	lsls	r2, r3, #31
{
 8002340:	b510      	push	{r4, lr}
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
 8002342:	d506      	bpl.n	8002352 <UART_AdvFeatureConfig+0x16>
  {
    assert_param(IS_UART_ADVFEATURE_TXINV(huart->AdvancedInit.TxPinLevelInvert));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_TXINV, huart->AdvancedInit.TxPinLevelInvert);
 8002344:	6801      	ldr	r1, [r0, #0]
 8002346:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8002348:	684a      	ldr	r2, [r1, #4]
 800234a:	f422 3200 	bic.w	r2, r2, #131072	; 0x20000
 800234e:	4322      	orrs	r2, r4
 8002350:	604a      	str	r2, [r1, #4]
  }

  /* if required, configure RX pin active level inversion */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXINVERT_INIT))
 8002352:	079c      	lsls	r4, r3, #30
 8002354:	d506      	bpl.n	8002364 <UART_AdvFeatureConfig+0x28>
  {
    assert_param(IS_UART_ADVFEATURE_RXINV(huart->AdvancedInit.RxPinLevelInvert));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_RXINV, huart->AdvancedInit.RxPinLevelInvert);
 8002356:	6801      	ldr	r1, [r0, #0]
 8002358:	6ac4      	ldr	r4, [r0, #44]	; 0x2c
 800235a:	684a      	ldr	r2, [r1, #4]
 800235c:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 8002360:	4322      	orrs	r2, r4
 8002362:	604a      	str	r2, [r1, #4]
  }

  /* if required, configure data inversion */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DATAINVERT_INIT))
 8002364:	0759      	lsls	r1, r3, #29
 8002366:	d506      	bpl.n	8002376 <UART_AdvFeatureConfig+0x3a>
  {
    assert_param(IS_UART_ADVFEATURE_DATAINV(huart->AdvancedInit.DataInvert));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_DATAINV, huart->AdvancedInit.DataInvert);
 8002368:	6801      	ldr	r1, [r0, #0]
 800236a:	6b04      	ldr	r4, [r0, #48]	; 0x30
 800236c:	684a      	ldr	r2, [r1, #4]
 800236e:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 8002372:	4322      	orrs	r2, r4
 8002374:	604a      	str	r2, [r1, #4]
  }

  /* if required, configure RX/TX pins swap */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_SWAP_INIT))
 8002376:	071a      	lsls	r2, r3, #28
 8002378:	d506      	bpl.n	8002388 <UART_AdvFeatureConfig+0x4c>
  {
    assert_param(IS_UART_ADVFEATURE_SWAP(huart->AdvancedInit.Swap));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_SWAP, huart->AdvancedInit.Swap);
 800237a:	6801      	ldr	r1, [r0, #0]
 800237c:	6b44      	ldr	r4, [r0, #52]	; 0x34
 800237e:	684a      	ldr	r2, [r1, #4]
 8002380:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 8002384:	4322      	orrs	r2, r4
 8002386:	604a      	str	r2, [r1, #4]
  }

  /* if required, configure RX overrun detection disabling */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXOVERRUNDISABLE_INIT))
 8002388:	06dc      	lsls	r4, r3, #27
 800238a:	d506      	bpl.n	800239a <UART_AdvFeatureConfig+0x5e>
  {
    assert_param(IS_UART_OVERRUN(huart->AdvancedInit.OverrunDisable));
    MODIFY_REG(huart->Instance->CR3, USART_CR3_OVRDIS, huart->AdvancedInit.OverrunDisable);
 800238c:	6801      	ldr	r1, [r0, #0]
 800238e:	6b84      	ldr	r4, [r0, #56]	; 0x38
 8002390:	688a      	ldr	r2, [r1, #8]
 8002392:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 8002396:	4322      	orrs	r2, r4
 8002398:	608a      	str	r2, [r1, #8]
  }

  /* if required, configure DMA disabling on reception error */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DMADISABLEONERROR_INIT))
 800239a:	0699      	lsls	r1, r3, #26
 800239c:	d506      	bpl.n	80023ac <UART_AdvFeatureConfig+0x70>
  {
    assert_param(IS_UART_ADVFEATURE_DMAONRXERROR(huart->AdvancedInit.DMADisableonRxError));
    MODIFY_REG(huart->Instance->CR3, USART_CR3_DDRE, huart->AdvancedInit.DMADisableonRxError);
 800239e:	6801      	ldr	r1, [r0, #0]
 80023a0:	6bc4      	ldr	r4, [r0, #60]	; 0x3c
 80023a2:	688a      	ldr	r2, [r1, #8]
 80023a4:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 80023a8:	4322      	orrs	r2, r4
 80023aa:	608a      	str	r2, [r1, #8]
  }

  /* if required, configure auto Baud rate detection scheme */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_AUTOBAUDRATE_INIT))
 80023ac:	065a      	lsls	r2, r3, #25
 80023ae:	d50f      	bpl.n	80023d0 <UART_AdvFeatureConfig+0x94>
  {
    assert_param(IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(huart->Instance));
    assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATE(huart->AdvancedInit.AutoBaudRateEnable));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
 80023b0:	6801      	ldr	r1, [r0, #0]
 80023b2:	6c04      	ldr	r4, [r0, #64]	; 0x40
 80023b4:	684a      	ldr	r2, [r1, #4]
 80023b6:	f422 1280 	bic.w	r2, r2, #1048576	; 0x100000
 80023ba:	4322      	orrs	r2, r4
    /* set auto Baudrate detection parameters if detection is enabled */
    if (huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
 80023bc:	f5b4 1f80 	cmp.w	r4, #1048576	; 0x100000
    MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
 80023c0:	604a      	str	r2, [r1, #4]
    if (huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
 80023c2:	d105      	bne.n	80023d0 <UART_AdvFeatureConfig+0x94>
    {
      assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATEMODE(huart->AdvancedInit.AutoBaudRateMode));
      MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
 80023c4:	684a      	ldr	r2, [r1, #4]
 80023c6:	6c44      	ldr	r4, [r0, #68]	; 0x44
 80023c8:	f422 02c0 	bic.w	r2, r2, #6291456	; 0x600000
 80023cc:	4322      	orrs	r2, r4
 80023ce:	604a      	str	r2, [r1, #4]
    }
  }

  /* if required, configure MSB first on communication line */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_MSBFIRST_INIT))
 80023d0:	061b      	lsls	r3, r3, #24
 80023d2:	d506      	bpl.n	80023e2 <UART_AdvFeatureConfig+0xa6>
  {
    assert_param(IS_UART_ADVFEATURE_MSBFIRST(huart->AdvancedInit.MSBFirst));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_MSBFIRST, huart->AdvancedInit.MSBFirst);
 80023d4:	6802      	ldr	r2, [r0, #0]
 80023d6:	6c81      	ldr	r1, [r0, #72]	; 0x48
 80023d8:	6853      	ldr	r3, [r2, #4]
 80023da:	f423 2300 	bic.w	r3, r3, #524288	; 0x80000
 80023de:	430b      	orrs	r3, r1
 80023e0:	6053      	str	r3, [r2, #4]
 80023e2:	bd10      	pop	{r4, pc}

080023e4 <UART_WaitOnFlagUntilTimeout>:
  * @param Tickstart Tick start value
  * @param Timeout   Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, FlagStatus Status, uint32_t Tickstart, uint32_t Timeout)
{
 80023e4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80023e8:	9d06      	ldr	r5, [sp, #24]
 80023ea:	4604      	mov	r4, r0
 80023ec:	460f      	mov	r7, r1
 80023ee:	4616      	mov	r6, r2
 80023f0:	4698      	mov	r8, r3
  /* Wait until flag is set */
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 80023f2:	6821      	ldr	r1, [r4, #0]
 80023f4:	69ca      	ldr	r2, [r1, #28]
 80023f6:	ea37 0302 	bics.w	r3, r7, r2
 80023fa:	bf0c      	ite	eq
 80023fc:	2201      	moveq	r2, #1
 80023fe:	2200      	movne	r2, #0
 8002400:	42b2      	cmp	r2, r6
 8002402:	d002      	beq.n	800240a <UART_WaitOnFlagUntilTimeout+0x26>

        return HAL_TIMEOUT;
      }
    }
  }
  return HAL_OK;
 8002404:	2000      	movs	r0, #0
}
 8002406:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if (Timeout != HAL_MAX_DELAY)
 800240a:	1c6b      	adds	r3, r5, #1
 800240c:	d0f2      	beq.n	80023f4 <UART_WaitOnFlagUntilTimeout+0x10>
      if ((Timeout == 0U) || ((HAL_GetTick() - Tickstart) > Timeout))
 800240e:	b99d      	cbnz	r5, 8002438 <UART_WaitOnFlagUntilTimeout+0x54>
        CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
 8002410:	6823      	ldr	r3, [r4, #0]
 8002412:	681a      	ldr	r2, [r3, #0]
 8002414:	f422 72d0 	bic.w	r2, r2, #416	; 0x1a0
 8002418:	601a      	str	r2, [r3, #0]
        CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 800241a:	689a      	ldr	r2, [r3, #8]
 800241c:	f022 0201 	bic.w	r2, r2, #1
 8002420:	609a      	str	r2, [r3, #8]
        huart->gState = HAL_UART_STATE_READY;
 8002422:	2320      	movs	r3, #32
 8002424:	f884 3071 	strb.w	r3, [r4, #113]	; 0x71
        huart->RxState = HAL_UART_STATE_READY;
 8002428:	f884 3072 	strb.w	r3, [r4, #114]	; 0x72
        __HAL_UNLOCK(huart);
 800242c:	2300      	movs	r3, #0
 800242e:	f884 3070 	strb.w	r3, [r4, #112]	; 0x70
 8002432:	2003      	movs	r0, #3
 8002434:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      if ((Timeout == 0U) || ((HAL_GetTick() - Tickstart) > Timeout))
 8002438:	f7fe fdba 	bl	8000fb0 <HAL_GetTick>
 800243c:	eba0 0008 	sub.w	r0, r0, r8
 8002440:	4285      	cmp	r5, r0
 8002442:	d2d6      	bcs.n	80023f2 <UART_WaitOnFlagUntilTimeout+0xe>
 8002444:	e7e4      	b.n	8002410 <UART_WaitOnFlagUntilTimeout+0x2c>

08002446 <HAL_UART_Transmit>:
{
 8002446:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800244a:	461f      	mov	r7, r3
  if (huart->gState == HAL_UART_STATE_READY)
 800244c:	f890 3071 	ldrb.w	r3, [r0, #113]	; 0x71
 8002450:	2b20      	cmp	r3, #32
{
 8002452:	4604      	mov	r4, r0
 8002454:	460d      	mov	r5, r1
 8002456:	4690      	mov	r8, r2
  if (huart->gState == HAL_UART_STATE_READY)
 8002458:	d14a      	bne.n	80024f0 <HAL_UART_Transmit+0xaa>
    if ((pData == NULL) || (Size == 0U))
 800245a:	2900      	cmp	r1, #0
 800245c:	d046      	beq.n	80024ec <HAL_UART_Transmit+0xa6>
 800245e:	2a00      	cmp	r2, #0
 8002460:	d044      	beq.n	80024ec <HAL_UART_Transmit+0xa6>
    __HAL_LOCK(huart);
 8002462:	f890 3070 	ldrb.w	r3, [r0, #112]	; 0x70
 8002466:	2b01      	cmp	r3, #1
 8002468:	d042      	beq.n	80024f0 <HAL_UART_Transmit+0xaa>
 800246a:	2301      	movs	r3, #1
 800246c:	f880 3070 	strb.w	r3, [r0, #112]	; 0x70
    huart->ErrorCode = HAL_UART_ERROR_NONE;
 8002470:	2300      	movs	r3, #0
 8002472:	6743      	str	r3, [r0, #116]	; 0x74
    huart->gState = HAL_UART_STATE_BUSY_TX;
 8002474:	2321      	movs	r3, #33	; 0x21
 8002476:	f880 3071 	strb.w	r3, [r0, #113]	; 0x71
    tickstart = HAL_GetTick();
 800247a:	f7fe fd99 	bl	8000fb0 <HAL_GetTick>
    huart->TxXferSize  = Size;
 800247e:	f8a4 8050 	strh.w	r8, [r4, #80]	; 0x50
    tickstart = HAL_GetTick();
 8002482:	4606      	mov	r6, r0
    huart->TxXferCount = Size;
 8002484:	f8a4 8052 	strh.w	r8, [r4, #82]	; 0x52
    while (huart->TxXferCount > 0U)
 8002488:	f8b4 2052 	ldrh.w	r2, [r4, #82]	; 0x52
      if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 800248c:	9700      	str	r7, [sp, #0]
    while (huart->TxXferCount > 0U)
 800248e:	b292      	uxth	r2, r2
      if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 8002490:	4633      	mov	r3, r6
    while (huart->TxXferCount > 0U)
 8002492:	b952      	cbnz	r2, 80024aa <HAL_UART_Transmit+0x64>
    if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 8002494:	2140      	movs	r1, #64	; 0x40
 8002496:	4620      	mov	r0, r4
 8002498:	f7ff ffa4 	bl	80023e4 <UART_WaitOnFlagUntilTimeout>
 800249c:	b958      	cbnz	r0, 80024b6 <HAL_UART_Transmit+0x70>
    huart->gState = HAL_UART_STATE_READY;
 800249e:	2320      	movs	r3, #32
 80024a0:	f884 3071 	strb.w	r3, [r4, #113]	; 0x71
    __HAL_UNLOCK(huart);
 80024a4:	f884 0070 	strb.w	r0, [r4, #112]	; 0x70
    return HAL_OK;
 80024a8:	e006      	b.n	80024b8 <HAL_UART_Transmit+0x72>
      if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 80024aa:	2200      	movs	r2, #0
 80024ac:	2180      	movs	r1, #128	; 0x80
 80024ae:	4620      	mov	r0, r4
 80024b0:	f7ff ff98 	bl	80023e4 <UART_WaitOnFlagUntilTimeout>
 80024b4:	b118      	cbz	r0, 80024be <HAL_UART_Transmit+0x78>
        return HAL_TIMEOUT;
 80024b6:	2003      	movs	r0, #3
}
 80024b8:	b002      	add	sp, #8
 80024ba:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 80024be:	68a3      	ldr	r3, [r4, #8]
 80024c0:	6822      	ldr	r2, [r4, #0]
 80024c2:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80024c6:	d10d      	bne.n	80024e4 <HAL_UART_Transmit+0x9e>
 80024c8:	6923      	ldr	r3, [r4, #16]
 80024ca:	b95b      	cbnz	r3, 80024e4 <HAL_UART_Transmit+0x9e>
        huart->Instance->TDR = (*tmp & (uint16_t)0x01FFU);
 80024cc:	f835 3b02 	ldrh.w	r3, [r5], #2
 80024d0:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80024d4:	8513      	strh	r3, [r2, #40]	; 0x28
      huart->TxXferCount--;
 80024d6:	f8b4 3052 	ldrh.w	r3, [r4, #82]	; 0x52
 80024da:	3b01      	subs	r3, #1
 80024dc:	b29b      	uxth	r3, r3
 80024de:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
 80024e2:	e7d1      	b.n	8002488 <HAL_UART_Transmit+0x42>
        huart->Instance->TDR = (*pData++ & (uint8_t)0xFFU);
 80024e4:	782b      	ldrb	r3, [r5, #0]
 80024e6:	8513      	strh	r3, [r2, #40]	; 0x28
 80024e8:	3501      	adds	r5, #1
 80024ea:	e7f4      	b.n	80024d6 <HAL_UART_Transmit+0x90>
      return  HAL_ERROR;
 80024ec:	2001      	movs	r0, #1
 80024ee:	e7e3      	b.n	80024b8 <HAL_UART_Transmit+0x72>
    return HAL_BUSY;
 80024f0:	2002      	movs	r0, #2
 80024f2:	e7e1      	b.n	80024b8 <HAL_UART_Transmit+0x72>

080024f4 <UART_CheckIdleState>:
{
 80024f4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80024f6:	4604      	mov	r4, r0
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 80024f8:	2600      	movs	r6, #0
 80024fa:	6746      	str	r6, [r0, #116]	; 0x74
  tickstart = HAL_GetTick();
 80024fc:	f7fe fd58 	bl	8000fb0 <HAL_GetTick>
  if ((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
 8002500:	6823      	ldr	r3, [r4, #0]
 8002502:	681b      	ldr	r3, [r3, #0]
 8002504:	071a      	lsls	r2, r3, #28
  tickstart = HAL_GetTick();
 8002506:	4605      	mov	r5, r0
  if ((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
 8002508:	d417      	bmi.n	800253a <UART_CheckIdleState+0x46>
  if ((huart->Instance->CR1 & USART_CR1_RE) == USART_CR1_RE)
 800250a:	6823      	ldr	r3, [r4, #0]
 800250c:	681b      	ldr	r3, [r3, #0]
 800250e:	075b      	lsls	r3, r3, #29
 8002510:	d50a      	bpl.n	8002528 <UART_CheckIdleState+0x34>
    if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_REACK, RESET, tickstart, HAL_UART_TIMEOUT_VALUE) != HAL_OK)
 8002512:	f06f 437e 	mvn.w	r3, #4261412864	; 0xfe000000
 8002516:	9300      	str	r3, [sp, #0]
 8002518:	2200      	movs	r2, #0
 800251a:	462b      	mov	r3, r5
 800251c:	f44f 0180 	mov.w	r1, #4194304	; 0x400000
 8002520:	4620      	mov	r0, r4
 8002522:	f7ff ff5f 	bl	80023e4 <UART_WaitOnFlagUntilTimeout>
 8002526:	b9a0      	cbnz	r0, 8002552 <UART_CheckIdleState+0x5e>
  huart->gState = HAL_UART_STATE_READY;
 8002528:	2320      	movs	r3, #32
  __HAL_UNLOCK(huart);
 800252a:	2000      	movs	r0, #0
  huart->gState = HAL_UART_STATE_READY;
 800252c:	f884 3071 	strb.w	r3, [r4, #113]	; 0x71
  __HAL_UNLOCK(huart);
 8002530:	f884 0070 	strb.w	r0, [r4, #112]	; 0x70
  huart->RxState = HAL_UART_STATE_READY;
 8002534:	f884 3072 	strb.w	r3, [r4, #114]	; 0x72
  return HAL_OK;
 8002538:	e00c      	b.n	8002554 <UART_CheckIdleState+0x60>
    if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_TEACK, RESET, tickstart, HAL_UART_TIMEOUT_VALUE) != HAL_OK)
 800253a:	f06f 437e 	mvn.w	r3, #4261412864	; 0xfe000000
 800253e:	9300      	str	r3, [sp, #0]
 8002540:	4632      	mov	r2, r6
 8002542:	4603      	mov	r3, r0
 8002544:	f44f 1100 	mov.w	r1, #2097152	; 0x200000
 8002548:	4620      	mov	r0, r4
 800254a:	f7ff ff4b 	bl	80023e4 <UART_WaitOnFlagUntilTimeout>
 800254e:	2800      	cmp	r0, #0
 8002550:	d0db      	beq.n	800250a <UART_CheckIdleState+0x16>
      return HAL_TIMEOUT;
 8002552:	2003      	movs	r0, #3
}
 8002554:	b002      	add	sp, #8
 8002556:	bd70      	pop	{r4, r5, r6, pc}

08002558 <HAL_UART_Init>:
{
 8002558:	b510      	push	{r4, lr}
  if (huart == NULL)
 800255a:	4604      	mov	r4, r0
 800255c:	b360      	cbz	r0, 80025b8 <HAL_UART_Init+0x60>
  if (huart->gState == HAL_UART_STATE_RESET)
 800255e:	f890 3071 	ldrb.w	r3, [r0, #113]	; 0x71
 8002562:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8002566:	b91b      	cbnz	r3, 8002570 <HAL_UART_Init+0x18>
    huart->Lock = HAL_UNLOCKED;
 8002568:	f880 2070 	strb.w	r2, [r0, #112]	; 0x70
    HAL_UART_MspInit(huart);
 800256c:	f000 fa1e 	bl	80029ac <HAL_UART_MspInit>
  __HAL_UART_DISABLE(huart);
 8002570:	6822      	ldr	r2, [r4, #0]
  huart->gState = HAL_UART_STATE_BUSY;
 8002572:	2324      	movs	r3, #36	; 0x24
 8002574:	f884 3071 	strb.w	r3, [r4, #113]	; 0x71
  __HAL_UART_DISABLE(huart);
 8002578:	6813      	ldr	r3, [r2, #0]
 800257a:	f023 0301 	bic.w	r3, r3, #1
 800257e:	6013      	str	r3, [r2, #0]
  if (UART_SetConfig(huart) == HAL_ERROR)
 8002580:	4620      	mov	r0, r4
 8002582:	f7ff fdb9 	bl	80020f8 <UART_SetConfig>
 8002586:	2801      	cmp	r0, #1
 8002588:	d016      	beq.n	80025b8 <HAL_UART_Init+0x60>
  if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 800258a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800258c:	b113      	cbz	r3, 8002594 <HAL_UART_Init+0x3c>
    UART_AdvFeatureConfig(huart);
 800258e:	4620      	mov	r0, r4
 8002590:	f7ff fed4 	bl	800233c <UART_AdvFeatureConfig>
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 8002594:	6823      	ldr	r3, [r4, #0]
 8002596:	685a      	ldr	r2, [r3, #4]
 8002598:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 800259c:	605a      	str	r2, [r3, #4]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 800259e:	689a      	ldr	r2, [r3, #8]
 80025a0:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 80025a4:	609a      	str	r2, [r3, #8]
  __HAL_UART_ENABLE(huart);
 80025a6:	681a      	ldr	r2, [r3, #0]
 80025a8:	f042 0201 	orr.w	r2, r2, #1
  return (UART_CheckIdleState(huart));
 80025ac:	4620      	mov	r0, r4
  __HAL_UART_ENABLE(huart);
 80025ae:	601a      	str	r2, [r3, #0]
}
 80025b0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  return (UART_CheckIdleState(huart));
 80025b4:	f7ff bf9e 	b.w	80024f4 <UART_CheckIdleState>
}
 80025b8:	2001      	movs	r0, #1
 80025ba:	bd10      	pop	{r4, pc}

080025bc <_write>:
/* USER CODE END PFP */

/* USER CODE BEGIN 0 */
#ifdef __GNUC__
int _write(int file,uint8_t*ptr,int len)
{
 80025bc:	b510      	push	{r4, lr}
	HAL_UART_Transmit(&huart2,ptr,len,1000);
 80025be:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
{
 80025c2:	4614      	mov	r4, r2
	HAL_UART_Transmit(&huart2,ptr,len,1000);
 80025c4:	4802      	ldr	r0, [pc, #8]	; (80025d0 <_write+0x14>)
 80025c6:	b292      	uxth	r2, r2
 80025c8:	f7ff ff3d 	bl	8002446 <HAL_UART_Transmit>
return len;
}
 80025cc:	4620      	mov	r0, r4
 80025ce:	bd10      	pop	{r4, pc}
 80025d0:	20000744 	.word	0x20000744

080025d4 <HAL_TIM_PeriodElapsedCallback>:
}
#endif

void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
	if(htim->Instance==TIM6)		Rst=1;
 80025d4:	6802      	ldr	r2, [r0, #0]
 80025d6:	4b03      	ldr	r3, [pc, #12]	; (80025e4 <HAL_TIM_PeriodElapsedCallback+0x10>)
 80025d8:	429a      	cmp	r2, r3
 80025da:	bf02      	ittt	eq
 80025dc:	4b02      	ldreq	r3, [pc, #8]	; (80025e8 <HAL_TIM_PeriodElapsedCallback+0x14>)
 80025de:	2201      	moveq	r2, #1
 80025e0:	601a      	streq	r2, [r3, #0]
 80025e2:	4770      	bx	lr
 80025e4:	40001000 	.word	0x40001000
 80025e8:	20000690 	.word	0x20000690

080025ec <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 80025ec:	b570      	push	{r4, r5, r6, lr}
 80025ee:	b0ac      	sub	sp, #176	; 0xb0
  RCC_ClkInitTypeDef RCC_ClkInitStruct;
  RCC_PeriphCLKInitTypeDef PeriphClkInit;

    /**Configure LSE Drive Capability 
    */
  HAL_PWR_EnableBkUpAccess();
 80025f0:	f7fe fe26 	bl	8001240 <HAL_PWR_EnableBkUpAccess>

  __HAL_RCC_LSEDRIVE_CONFIG(RCC_LSEDRIVE_LOW);
 80025f4:	4a2e      	ldr	r2, [pc, #184]	; (80026b0 <SystemClock_Config+0xc4>)
 80025f6:	f8d2 3090 	ldr.w	r3, [r2, #144]	; 0x90
 80025fa:	f023 0318 	bic.w	r3, r3, #24
 80025fe:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90

    /**Initializes the CPU, AHB and APB busses clocks 
    */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_LSE|RCC_OSCILLATORTYPE_MSI;
 8002602:	2314      	movs	r3, #20
 8002604:	9306      	str	r3, [sp, #24]
  RCC_OscInitStruct.LSEState = RCC_LSE_ON;
  RCC_OscInitStruct.MSIState = RCC_MSI_ON;
  RCC_OscInitStruct.MSICalibrationValue = 0;
 8002606:	2300      	movs	r3, #0
 8002608:	930d      	str	r3, [sp, #52]	; 0x34
  RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_6;
 800260a:	2360      	movs	r3, #96	; 0x60
  RCC_OscInitStruct.LSEState = RCC_LSE_ON;
 800260c:	2401      	movs	r4, #1
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 800260e:	2502      	movs	r5, #2
  RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_6;
 8002610:	930e      	str	r3, [sp, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_MSI;
  RCC_OscInitStruct.PLL.PLLM = 1;
  RCC_OscInitStruct.PLL.PLLN = 40;
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV7;
 8002612:	2607      	movs	r6, #7
  RCC_OscInitStruct.PLL.PLLN = 40;
 8002614:	2328      	movs	r3, #40	; 0x28
  RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
  RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8002616:	a806      	add	r0, sp, #24
  RCC_OscInitStruct.LSEState = RCC_LSE_ON;
 8002618:	9408      	str	r4, [sp, #32]
  RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 800261a:	940c      	str	r4, [sp, #48]	; 0x30
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 800261c:	9510      	str	r5, [sp, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_MSI;
 800261e:	9411      	str	r4, [sp, #68]	; 0x44
  RCC_OscInitStruct.PLL.PLLM = 1;
 8002620:	9412      	str	r4, [sp, #72]	; 0x48
  RCC_OscInitStruct.PLL.PLLN = 40;
 8002622:	9313      	str	r3, [sp, #76]	; 0x4c
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV7;
 8002624:	9614      	str	r6, [sp, #80]	; 0x50
  RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 8002626:	9515      	str	r5, [sp, #84]	; 0x54
  RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 8002628:	9516      	str	r5, [sp, #88]	; 0x58
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 800262a:	f7fe fee5 	bl	80013f8 <HAL_RCC_OscConfig>
 800262e:	b100      	cbz	r0, 8002632 <SystemClock_Config+0x46>
 8002630:	e7fe      	b.n	8002630 <SystemClock_Config+0x44>
    _Error_Handler(__FILE__, __LINE__);
  }

    /**Initializes the CPU, AHB and APB busses clocks 
    */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8002632:	230f      	movs	r3, #15
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_4) != HAL_OK)
 8002634:	2104      	movs	r1, #4
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8002636:	9301      	str	r3, [sp, #4]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8002638:	9003      	str	r0, [sp, #12]
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 800263a:	2303      	movs	r3, #3
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 800263c:	9004      	str	r0, [sp, #16]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 800263e:	9005      	str	r0, [sp, #20]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_4) != HAL_OK)
 8002640:	eb0d 0001 	add.w	r0, sp, r1
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8002644:	9302      	str	r3, [sp, #8]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_4) != HAL_OK)
 8002646:	f7ff f929 	bl	800189c <HAL_RCC_ClockConfig>
 800264a:	b100      	cbz	r0, 800264e <SystemClock_Config+0x62>
 800264c:	e7fe      	b.n	800264c <SystemClock_Config+0x60>
  {
    _Error_Handler(__FILE__, __LINE__);
  }

  PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART2|RCC_PERIPHCLK_RNG;
 800264e:	4b19      	ldr	r3, [pc, #100]	; (80026b4 <SystemClock_Config+0xc8>)
 8002650:	9317      	str	r3, [sp, #92]	; 0x5c
  PeriphClkInit.Usart2ClockSelection = RCC_USART2CLKSOURCE_PCLK1;
  PeriphClkInit.RngClockSelection = RCC_RNGCLKSOURCE_PLLSAI1;
 8002652:	f04f 6380 	mov.w	r3, #67108864	; 0x4000000
 8002656:	9328      	str	r3, [sp, #160]	; 0xa0
  PeriphClkInit.PLLSAI1.PLLSAI1Source = RCC_PLLSOURCE_MSI;
  PeriphClkInit.PLLSAI1.PLLSAI1M = 1;
  PeriphClkInit.PLLSAI1.PLLSAI1N = 16;
 8002658:	2310      	movs	r3, #16
  PeriphClkInit.Usart2ClockSelection = RCC_USART2CLKSOURCE_PCLK1;
 800265a:	9020      	str	r0, [sp, #128]	; 0x80
  PeriphClkInit.PLLSAI1.PLLSAI1N = 16;
 800265c:	931a      	str	r3, [sp, #104]	; 0x68
  PeriphClkInit.PLLSAI1.PLLSAI1P = RCC_PLLP_DIV7;
  PeriphClkInit.PLLSAI1.PLLSAI1Q = RCC_PLLQ_DIV2;
  PeriphClkInit.PLLSAI1.PLLSAI1R = RCC_PLLR_DIV2;
  PeriphClkInit.PLLSAI1.PLLSAI1ClockOut = RCC_PLLSAI1_48M2CLK;
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 800265e:	a817      	add	r0, sp, #92	; 0x5c
  PeriphClkInit.PLLSAI1.PLLSAI1ClockOut = RCC_PLLSAI1_48M2CLK;
 8002660:	f44f 1380 	mov.w	r3, #1048576	; 0x100000
  PeriphClkInit.PLLSAI1.PLLSAI1Source = RCC_PLLSOURCE_MSI;
 8002664:	9418      	str	r4, [sp, #96]	; 0x60
  PeriphClkInit.PLLSAI1.PLLSAI1M = 1;
 8002666:	9419      	str	r4, [sp, #100]	; 0x64
  PeriphClkInit.PLLSAI1.PLLSAI1P = RCC_PLLP_DIV7;
 8002668:	961b      	str	r6, [sp, #108]	; 0x6c
  PeriphClkInit.PLLSAI1.PLLSAI1Q = RCC_PLLQ_DIV2;
 800266a:	951c      	str	r5, [sp, #112]	; 0x70
  PeriphClkInit.PLLSAI1.PLLSAI1R = RCC_PLLR_DIV2;
 800266c:	951d      	str	r5, [sp, #116]	; 0x74
  PeriphClkInit.PLLSAI1.PLLSAI1ClockOut = RCC_PLLSAI1_48M2CLK;
 800266e:	931e      	str	r3, [sp, #120]	; 0x78
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 8002670:	f7ff fa5c 	bl	8001b2c <HAL_RCCEx_PeriphCLKConfig>
 8002674:	b100      	cbz	r0, 8002678 <SystemClock_Config+0x8c>
 8002676:	e7fe      	b.n	8002676 <SystemClock_Config+0x8a>
    _Error_Handler(__FILE__, __LINE__);
  }

    /**Configure the main internal regulator output voltage 
    */
  if (HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1) != HAL_OK)
 8002678:	f44f 7000 	mov.w	r0, #512	; 0x200
 800267c:	f7fe fdf0 	bl	8001260 <HAL_PWREx_ControlVoltageScaling>
 8002680:	4604      	mov	r4, r0
 8002682:	b100      	cbz	r0, 8002686 <SystemClock_Config+0x9a>
 8002684:	e7fe      	b.n	8002684 <SystemClock_Config+0x98>
    _Error_Handler(__FILE__, __LINE__);
  }

    /**Configure the Systick interrupt time 
    */
  HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq()/1000);
 8002686:	f7ff f99b 	bl	80019c0 <HAL_RCC_GetHCLKFreq>
 800268a:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800268e:	fbb0 f0f3 	udiv	r0, r0, r3
 8002692:	f7fe fcf3 	bl	800107c <HAL_SYSTICK_Config>

    /**Configure the Systick 
    */
  HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 8002696:	2004      	movs	r0, #4
 8002698:	f7fe fd06 	bl	80010a8 <HAL_SYSTICK_CLKSourceConfig>

    /**Enable MSI Auto calibration 
    */
  HAL_RCCEx_EnableMSIPLLMode();
 800269c:	f7ff fb8a 	bl	8001db4 <HAL_RCCEx_EnableMSIPLLMode>

  /* SysTick_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(SysTick_IRQn, 0, 0);
 80026a0:	4622      	mov	r2, r4
 80026a2:	4621      	mov	r1, r4
 80026a4:	f04f 30ff 	mov.w	r0, #4294967295
 80026a8:	f7fe fca8 	bl	8000ffc <HAL_NVIC_SetPriority>
}
 80026ac:	b02c      	add	sp, #176	; 0xb0
 80026ae:	bd70      	pop	{r4, r5, r6, pc}
 80026b0:	40021000 	.word	0x40021000
 80026b4:	00040002 	.word	0x00040002

080026b8 <main>:
{
 80026b8:	b580      	push	{r7, lr}
 80026ba:	b08c      	sub	sp, #48	; 0x30
  HAL_Init();
 80026bc:	f7fe fc60 	bl	8000f80 <HAL_Init>
  SystemClock_Config();
 80026c0:	f7ff ff94 	bl	80025ec <SystemClock_Config>
{

  GPIO_InitTypeDef GPIO_InitStruct;

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 80026c4:	4b68      	ldr	r3, [pc, #416]	; (8002868 <main+0x1b0>)
  __HAL_RCC_GPIOA_CLK_ENABLE();
  __HAL_RCC_GPIOB_CLK_ENABLE();

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(LD3_GPIO_Port, LD3_Pin, GPIO_PIN_RESET);
 80026c6:	4869      	ldr	r0, [pc, #420]	; (800286c <main+0x1b4>)
  __HAL_RCC_GPIOC_CLK_ENABLE();
 80026c8:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 80026ca:	f042 0204 	orr.w	r2, r2, #4
 80026ce:	64da      	str	r2, [r3, #76]	; 0x4c
 80026d0:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 80026d2:	f002 0204 	and.w	r2, r2, #4
 80026d6:	9201      	str	r2, [sp, #4]
 80026d8:	9a01      	ldr	r2, [sp, #4]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 80026da:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 80026dc:	f042 0201 	orr.w	r2, r2, #1
 80026e0:	64da      	str	r2, [r3, #76]	; 0x4c
 80026e2:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 80026e4:	f002 0201 	and.w	r2, r2, #1
 80026e8:	9202      	str	r2, [sp, #8]
 80026ea:	9a02      	ldr	r2, [sp, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 80026ec:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 80026ee:	f042 0202 	orr.w	r2, r2, #2
 80026f2:	64da      	str	r2, [r3, #76]	; 0x4c
 80026f4:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80026f6:	f003 0302 	and.w	r3, r3, #2
 80026fa:	9303      	str	r3, [sp, #12]
  HAL_GPIO_WritePin(LD3_GPIO_Port, LD3_Pin, GPIO_PIN_RESET);
 80026fc:	2200      	movs	r2, #0
 80026fe:	2108      	movs	r1, #8
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8002700:	9b03      	ldr	r3, [sp, #12]
  HAL_GPIO_WritePin(LD3_GPIO_Port, LD3_Pin, GPIO_PIN_RESET);
 8002702:	f7fe fd97 	bl	8001234 <HAL_GPIO_WritePin>

  /*Configure GPIO pin : LD3_Pin */
  GPIO_InitStruct.Pin = LD3_Pin;
 8002706:	2308      	movs	r3, #8
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002708:	2400      	movs	r4, #0
  GPIO_InitStruct.Pin = LD3_Pin;
 800270a:	9306      	str	r3, [sp, #24]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
  HAL_GPIO_Init(LD3_GPIO_Port, &GPIO_InitStruct);
 800270c:	a906      	add	r1, sp, #24
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800270e:	2301      	movs	r3, #1
  HAL_GPIO_Init(LD3_GPIO_Port, &GPIO_InitStruct);
 8002710:	4856      	ldr	r0, [pc, #344]	; (800286c <main+0x1b4>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8002712:	9307      	str	r3, [sp, #28]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002714:	9408      	str	r4, [sp, #32]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002716:	9409      	str	r4, [sp, #36]	; 0x24
  HAL_GPIO_Init(LD3_GPIO_Port, &GPIO_InitStruct);
 8002718:	f7fe fcd8 	bl	80010cc <HAL_GPIO_Init>
  huart2.Instance = USART2;
 800271c:	4854      	ldr	r0, [pc, #336]	; (8002870 <main+0x1b8>)
  huart2.Init.BaudRate = 115200;
 800271e:	4955      	ldr	r1, [pc, #340]	; (8002874 <main+0x1bc>)
  huart2.Init.WordLength = UART_WORDLENGTH_8B;
 8002720:	6084      	str	r4, [r0, #8]
  huart2.Init.BaudRate = 115200;
 8002722:	f44f 33e1 	mov.w	r3, #115200	; 0x1c200
 8002726:	e880 000a 	stmia.w	r0, {r1, r3}
  huart2.Init.Mode = UART_MODE_TX_RX;
 800272a:	230c      	movs	r3, #12
  huart2.Init.StopBits = UART_STOPBITS_1;
 800272c:	60c4      	str	r4, [r0, #12]
  huart2.Init.Parity = UART_PARITY_NONE;
 800272e:	6104      	str	r4, [r0, #16]
  huart2.Init.Mode = UART_MODE_TX_RX;
 8002730:	6143      	str	r3, [r0, #20]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8002732:	6184      	str	r4, [r0, #24]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 8002734:	61c4      	str	r4, [r0, #28]
  huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 8002736:	6204      	str	r4, [r0, #32]
  huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 8002738:	6244      	str	r4, [r0, #36]	; 0x24
  if (HAL_UART_Init(&huart2) != HAL_OK)
 800273a:	f7ff ff0d 	bl	8002558 <HAL_UART_Init>
 800273e:	b100      	cbz	r0, 8002742 <main+0x8a>
 8002740:	e7fe      	b.n	8002740 <main+0x88>
  hrng.Instance = RNG;
 8002742:	484d      	ldr	r0, [pc, #308]	; (8002878 <main+0x1c0>)
 8002744:	4b4d      	ldr	r3, [pc, #308]	; (800287c <main+0x1c4>)
 8002746:	6003      	str	r3, [r0, #0]
  if (HAL_RNG_Init(&hrng) != HAL_OK)
 8002748:	f7ff fb3c 	bl	8001dc4 <HAL_RNG_Init>
 800274c:	b100      	cbz	r0, 8002750 <main+0x98>
 800274e:	e7fe      	b.n	800274e <main+0x96>
  htim6.Instance = TIM6;
 8002750:	4c4b      	ldr	r4, [pc, #300]	; (8002880 <main+0x1c8>)
  htim6.Init.Prescaler = 7999;
 8002752:	4a4c      	ldr	r2, [pc, #304]	; (8002884 <main+0x1cc>)
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 8002754:	60a0      	str	r0, [r4, #8]
  htim6.Init.Prescaler = 7999;
 8002756:	f641 733f 	movw	r3, #7999	; 0x1f3f
 800275a:	e884 000c 	stmia.w	r4, {r2, r3}
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 800275e:	61a0      	str	r0, [r4, #24]
  htim6.Init.Period = 4999;
 8002760:	f241 3387 	movw	r3, #4999	; 0x1387
  if (HAL_TIM_Base_Init(&htim6) != HAL_OK)
 8002764:	4620      	mov	r0, r4
  htim6.Init.Period = 4999;
 8002766:	60e3      	str	r3, [r4, #12]
  if (HAL_TIM_Base_Init(&htim6) != HAL_OK)
 8002768:	f7ff fc80 	bl	800206c <HAL_TIM_Base_Init>
 800276c:	b100      	cbz	r0, 8002770 <main+0xb8>
 800276e:	e7fe      	b.n	800276e <main+0xb6>
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8002770:	9006      	str	r0, [sp, #24]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8002772:	9008      	str	r0, [sp, #32]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim6, &sMasterConfig) != HAL_OK)
 8002774:	a906      	add	r1, sp, #24
 8002776:	4620      	mov	r0, r4
 8002778:	f7ff fc92 	bl	80020a0 <HAL_TIMEx_MasterConfigSynchronization>
 800277c:	b100      	cbz	r0, 8002780 <main+0xc8>
 800277e:	e7fe      	b.n	800277e <main+0xc6>
  while(HAL_TIM_Base_Start_IT(&htim6)!=HAL_OK);
 8002780:	4620      	mov	r0, r4
 8002782:	f7ff fb6d 	bl	8001e60 <HAL_TIM_Base_Start_IT>
 8002786:	2800      	cmp	r0, #0
 8002788:	d1fa      	bne.n	8002780 <main+0xc8>
	  d1 = arm_sin_f32(nCnt*3.141592/180);
 800278a:	f20f 09cc 	addw	r9, pc, #204	; 0xcc
 800278e:	e9d9 8900 	ldrd	r8, r9, [r9]
 8002792:	4f3d      	ldr	r7, [pc, #244]	; (8002888 <main+0x1d0>)
	  printf("%x : %x\r\n",USER_DATA1,*(__IO uint64_t *)USER_DATA1);
 8002794:	4d3d      	ldr	r5, [pc, #244]	; (800288c <main+0x1d4>)
  volatile int    er=0;
 8002796:	9000      	str	r0, [sp, #0]
	  d1 = arm_sin_f32(nCnt*3.141592/180);
 8002798:	2600      	movs	r6, #0
	  rnd = HAL_RNG_GetRandomNumber(&hrng);
 800279a:	4837      	ldr	r0, [pc, #220]	; (8002878 <main+0x1c0>)
	  d1 = arm_sin_f32(nCnt*3.141592/180);
 800279c:	4c3c      	ldr	r4, [pc, #240]	; (8002890 <main+0x1d8>)
	  rnd = HAL_RNG_GetRandomNumber(&hrng);
 800279e:	f7ff fb53 	bl	8001e48 <HAL_RNG_GetRandomNumber>
 80027a2:	4b3c      	ldr	r3, [pc, #240]	; (8002894 <main+0x1dc>)
 80027a4:	6018      	str	r0, [r3, #0]
	  d1 = arm_sin_f32(nCnt*3.141592/180);
 80027a6:	6820      	ldr	r0, [r4, #0]
 80027a8:	f7fd feac 	bl	8000504 <__aeabi_ui2d>
 80027ac:	4642      	mov	r2, r8
 80027ae:	464b      	mov	r3, r9
 80027b0:	f7fd ff1e 	bl	80005f0 <__aeabi_dmul>
 80027b4:	4632      	mov	r2, r6
 80027b6:	463b      	mov	r3, r7
 80027b8:	f7fe f844 	bl	8000844 <__aeabi_ddiv>
 80027bc:	f7fe f9f0 	bl	8000ba0 <__aeabi_d2f>
 80027c0:	ee00 0a10 	vmov	s0, r0
 80027c4:	f000 f97e 	bl	8002ac4 <arm_sin_f32>
 80027c8:	ee10 0a10 	vmov	r0, s0
 80027cc:	f7fd febc 	bl	8000548 <__aeabi_f2d>
 80027d0:	e9cd 0104 	strd	r0, r1, [sp, #16]
	  d2 = sin(nCnt*3.141592/180);
 80027d4:	6820      	ldr	r0, [r4, #0]
 80027d6:	f7fd fe95 	bl	8000504 <__aeabi_ui2d>
 80027da:	4642      	mov	r2, r8
 80027dc:	464b      	mov	r3, r9
 80027de:	f7fd ff07 	bl	80005f0 <__aeabi_dmul>
 80027e2:	4632      	mov	r2, r6
 80027e4:	463b      	mov	r3, r7
 80027e6:	f7fe f82d 	bl	8000844 <__aeabi_ddiv>
 80027ea:	ec41 0b10 	vmov	d0, r0, r1
 80027ee:	f003 ff1b 	bl	8006628 <sin>
 80027f2:	ed8d 0b06 	vstr	d0, [sp, #24]
	  er += (int)((d1-d2)*10000);
 80027f6:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 80027fa:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 80027fe:	f7fd fd43 	bl	8000288 <__aeabi_dsub>
 8002802:	a317      	add	r3, pc, #92	; (adr r3, 8002860 <main+0x1a8>)
 8002804:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002808:	f7fd fef2 	bl	80005f0 <__aeabi_dmul>
 800280c:	f7fe f9a0 	bl	8000b50 <__aeabi_d2iz>
 8002810:	f8dd a000 	ldr.w	sl, [sp]
	  printf("%x : %x\r\n",USER_DATA1,*(__IO uint64_t *)USER_DATA1);
 8002814:	4920      	ldr	r1, [pc, #128]	; (8002898 <main+0x1e0>)
	  er += (int)((d1-d2)*10000);
 8002816:	4450      	add	r0, sl
 8002818:	9000      	str	r0, [sp, #0]
	  printf("%x : %x\r\n",USER_DATA1,*(__IO uint64_t *)USER_DATA1);
 800281a:	e9d1 2300 	ldrd	r2, r3, [r1]
 800281e:	4628      	mov	r0, r5
 8002820:	f000 f9b8 	bl	8002b94 <printf>
	  printf("%x : %x\r\n",USER_DATA2,*(__IO uint64_t *)USER_DATA2);
 8002824:	491d      	ldr	r1, [pc, #116]	; (800289c <main+0x1e4>)
 8002826:	4628      	mov	r0, r5
 8002828:	e9d1 2300 	ldrd	r2, r3, [r1]
 800282c:	f000 f9b2 	bl	8002b94 <printf>
	  printf("%x : %x\r\n",USER_DATA3,*(__IO uint64_t *)USER_DATA3);
 8002830:	491b      	ldr	r1, [pc, #108]	; (80028a0 <main+0x1e8>)
 8002832:	4628      	mov	r0, r5
 8002834:	e9d1 2300 	ldrd	r2, r3, [r1]
 8002838:	f000 f9ac 	bl	8002b94 <printf>
	  printf("%x : %x\r\n",USER_DATA4,*(__IO uint64_t *)USER_DATA4);
 800283c:	4919      	ldr	r1, [pc, #100]	; (80028a4 <main+0x1ec>)
 800283e:	4628      	mov	r0, r5
 8002840:	e9d1 2300 	ldrd	r2, r3, [r1]
 8002844:	f000 f9a6 	bl	8002b94 <printf>
	  nCnt++;
 8002848:	6823      	ldr	r3, [r4, #0]
	  HAL_Delay(1000);
 800284a:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
	  nCnt++;
 800284e:	3301      	adds	r3, #1
 8002850:	6023      	str	r3, [r4, #0]
	  HAL_Delay(1000);
 8002852:	f7fe fbb3 	bl	8000fbc <HAL_Delay>
 8002856:	e7a0      	b.n	800279a <main+0xe2>
 8002858:	fc8b007a 	.word	0xfc8b007a
 800285c:	400921fa 	.word	0x400921fa
 8002860:	00000000 	.word	0x00000000
 8002864:	40c38800 	.word	0x40c38800
 8002868:	40021000 	.word	0x40021000
 800286c:	48000400 	.word	0x48000400
 8002870:	20000744 	.word	0x20000744
 8002874:	40004400 	.word	0x40004400
 8002878:	20000734 	.word	0x20000734
 800287c:	50060800 	.word	0x50060800
 8002880:	200006f4 	.word	0x200006f4
 8002884:	40001000 	.word	0x40001000
 8002888:	40668000 	.word	0x40668000
 800288c:	08007749 	.word	0x08007749
 8002890:	20000694 	.word	0x20000694
 8002894:	200007bc 	.word	0x200007bc
 8002898:	0803f800 	.word	0x0803f800
 800289c:	0803f808 	.word	0x0803f808
 80028a0:	0803f810 	.word	0x0803f810
 80028a4:	0803f818 	.word	0x0803f818

080028a8 <HAL_MspInit>:
{
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 80028a8:	4b25      	ldr	r3, [pc, #148]	; (8002940 <HAL_MspInit+0x98>)
{
 80028aa:	b507      	push	{r0, r1, r2, lr}
  __HAL_RCC_SYSCFG_CLK_ENABLE();
 80028ac:	6e1a      	ldr	r2, [r3, #96]	; 0x60
 80028ae:	f042 0201 	orr.w	r2, r2, #1
 80028b2:	661a      	str	r2, [r3, #96]	; 0x60
 80028b4:	6e1a      	ldr	r2, [r3, #96]	; 0x60
 80028b6:	f002 0201 	and.w	r2, r2, #1
 80028ba:	9200      	str	r2, [sp, #0]
 80028bc:	9a00      	ldr	r2, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 80028be:	6d9a      	ldr	r2, [r3, #88]	; 0x58
 80028c0:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 80028c4:	659a      	str	r2, [r3, #88]	; 0x58
 80028c6:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80028c8:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80028cc:	9301      	str	r3, [sp, #4]

  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 80028ce:	2003      	movs	r0, #3
  __HAL_RCC_PWR_CLK_ENABLE();
 80028d0:	9b01      	ldr	r3, [sp, #4]
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 80028d2:	f7fe fb81 	bl	8000fd8 <HAL_NVIC_SetPriorityGrouping>

  /* System interrupt init*/
  /* MemoryManagement_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(MemoryManagement_IRQn, 0, 0);
 80028d6:	2200      	movs	r2, #0
 80028d8:	4611      	mov	r1, r2
 80028da:	f06f 000b 	mvn.w	r0, #11
 80028de:	f7fe fb8d 	bl	8000ffc <HAL_NVIC_SetPriority>
  /* BusFault_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(BusFault_IRQn, 0, 0);
 80028e2:	2200      	movs	r2, #0
 80028e4:	4611      	mov	r1, r2
 80028e6:	f06f 000a 	mvn.w	r0, #10
 80028ea:	f7fe fb87 	bl	8000ffc <HAL_NVIC_SetPriority>
  /* UsageFault_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(UsageFault_IRQn, 0, 0);
 80028ee:	2200      	movs	r2, #0
 80028f0:	4611      	mov	r1, r2
 80028f2:	f06f 0009 	mvn.w	r0, #9
 80028f6:	f7fe fb81 	bl	8000ffc <HAL_NVIC_SetPriority>
  /* SVCall_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(SVCall_IRQn, 0, 0);
 80028fa:	2200      	movs	r2, #0
 80028fc:	4611      	mov	r1, r2
 80028fe:	f06f 0004 	mvn.w	r0, #4
 8002902:	f7fe fb7b 	bl	8000ffc <HAL_NVIC_SetPriority>
  /* DebugMonitor_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DebugMonitor_IRQn, 0, 0);
 8002906:	2200      	movs	r2, #0
 8002908:	4611      	mov	r1, r2
 800290a:	f06f 0003 	mvn.w	r0, #3
 800290e:	f7fe fb75 	bl	8000ffc <HAL_NVIC_SetPriority>
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 0, 0);
 8002912:	2200      	movs	r2, #0
 8002914:	4611      	mov	r1, r2
 8002916:	f06f 0001 	mvn.w	r0, #1
 800291a:	f7fe fb6f 	bl	8000ffc <HAL_NVIC_SetPriority>
  /* SysTick_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(SysTick_IRQn, 0, 0);
 800291e:	2200      	movs	r2, #0
 8002920:	4611      	mov	r1, r2
 8002922:	f04f 30ff 	mov.w	r0, #4294967295
 8002926:	f7fe fb69 	bl	8000ffc <HAL_NVIC_SetPriority>

  /* Peripheral interrupt init */
  /* RCC_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(RCC_IRQn, 0, 0);
 800292a:	2200      	movs	r2, #0
 800292c:	4611      	mov	r1, r2
 800292e:	2005      	movs	r0, #5
 8002930:	f7fe fb64 	bl	8000ffc <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(RCC_IRQn);
 8002934:	2005      	movs	r0, #5
 8002936:	f7fe fb95 	bl	8001064 <HAL_NVIC_EnableIRQ>

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 800293a:	b003      	add	sp, #12
 800293c:	f85d fb04 	ldr.w	pc, [sp], #4
 8002940:	40021000 	.word	0x40021000

08002944 <HAL_RNG_MspInit>:

void HAL_RNG_MspInit(RNG_HandleTypeDef* hrng)
{

  if(hrng->Instance==RNG)
 8002944:	6802      	ldr	r2, [r0, #0]
 8002946:	4b09      	ldr	r3, [pc, #36]	; (800296c <HAL_RNG_MspInit+0x28>)
 8002948:	429a      	cmp	r2, r3
{
 800294a:	b082      	sub	sp, #8
  if(hrng->Instance==RNG)
 800294c:	d10c      	bne.n	8002968 <HAL_RNG_MspInit+0x24>
  {
  /* USER CODE BEGIN RNG_MspInit 0 */

  /* USER CODE END RNG_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_RNG_CLK_ENABLE();
 800294e:	f103 4370 	add.w	r3, r3, #4026531840	; 0xf0000000
 8002952:	f5a3 337e 	sub.w	r3, r3, #260096	; 0x3f800
 8002956:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 8002958:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
 800295c:	64da      	str	r2, [r3, #76]	; 0x4c
 800295e:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8002960:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 8002964:	9301      	str	r3, [sp, #4]
 8002966:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN RNG_MspInit 1 */

  /* USER CODE END RNG_MspInit 1 */
  }

}
 8002968:	b002      	add	sp, #8
 800296a:	4770      	bx	lr
 800296c:	50060800 	.word	0x50060800

08002970 <HAL_TIM_Base_MspInit>:
  }

}

void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
 8002970:	b507      	push	{r0, r1, r2, lr}

  if(htim_base->Instance==TIM6)
 8002972:	4b0d      	ldr	r3, [pc, #52]	; (80029a8 <HAL_TIM_Base_MspInit+0x38>)
 8002974:	6802      	ldr	r2, [r0, #0]
 8002976:	429a      	cmp	r2, r3
 8002978:	d112      	bne.n	80029a0 <HAL_TIM_Base_MspInit+0x30>
  {
  /* USER CODE BEGIN TIM6_MspInit 0 */

  /* USER CODE END TIM6_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM6_CLK_ENABLE();
 800297a:	f503 3300 	add.w	r3, r3, #131072	; 0x20000
    /* TIM6 interrupt Init */
    HAL_NVIC_SetPriority(TIM6_DAC_IRQn, 0, 0);
 800297e:	2036      	movs	r0, #54	; 0x36
    __HAL_RCC_TIM6_CLK_ENABLE();
 8002980:	6d9a      	ldr	r2, [r3, #88]	; 0x58
 8002982:	f042 0210 	orr.w	r2, r2, #16
 8002986:	659a      	str	r2, [r3, #88]	; 0x58
 8002988:	6d9b      	ldr	r3, [r3, #88]	; 0x58
    HAL_NVIC_SetPriority(TIM6_DAC_IRQn, 0, 0);
 800298a:	2200      	movs	r2, #0
    __HAL_RCC_TIM6_CLK_ENABLE();
 800298c:	f003 0310 	and.w	r3, r3, #16
 8002990:	9301      	str	r3, [sp, #4]
    HAL_NVIC_SetPriority(TIM6_DAC_IRQn, 0, 0);
 8002992:	4611      	mov	r1, r2
    __HAL_RCC_TIM6_CLK_ENABLE();
 8002994:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(TIM6_DAC_IRQn, 0, 0);
 8002996:	f7fe fb31 	bl	8000ffc <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
 800299a:	2036      	movs	r0, #54	; 0x36
 800299c:	f7fe fb62 	bl	8001064 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN TIM6_MspInit 1 */

  /* USER CODE END TIM6_MspInit 1 */
  }

}
 80029a0:	b003      	add	sp, #12
 80029a2:	f85d fb04 	ldr.w	pc, [sp], #4
 80029a6:	bf00      	nop
 80029a8:	40001000 	.word	0x40001000

080029ac <HAL_UART_MspInit>:
  }

}

void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 80029ac:	b570      	push	{r4, r5, r6, lr}

  GPIO_InitTypeDef GPIO_InitStruct;
  if(huart->Instance==USART2)
 80029ae:	6802      	ldr	r2, [r0, #0]
 80029b0:	4b15      	ldr	r3, [pc, #84]	; (8002a08 <HAL_UART_MspInit+0x5c>)
 80029b2:	429a      	cmp	r2, r3
{
 80029b4:	b086      	sub	sp, #24
  if(huart->Instance==USART2)
 80029b6:	d125      	bne.n	8002a04 <HAL_UART_MspInit+0x58>
  {
  /* USER CODE BEGIN USART2_MspInit 0 */

  /* USER CODE END USART2_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_USART2_CLK_ENABLE();
 80029b8:	f503 33e6 	add.w	r3, r3, #117760	; 0x1cc00
    PA15 (JTDI)     ------> USART2_RX 
    */
    GPIO_InitStruct.Pin = VCP_TX_Pin;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80029bc:	2403      	movs	r4, #3
    __HAL_RCC_USART2_CLK_ENABLE();
 80029be:	6d9a      	ldr	r2, [r3, #88]	; 0x58
 80029c0:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 80029c4:	659a      	str	r2, [r3, #88]	; 0x58
 80029c6:	6d9b      	ldr	r3, [r3, #88]	; 0x58
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80029c8:	9404      	str	r4, [sp, #16]
    __HAL_RCC_USART2_CLK_ENABLE();
 80029ca:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80029ce:	9300      	str	r3, [sp, #0]
 80029d0:	9b00      	ldr	r3, [sp, #0]
    GPIO_InitStruct.Pin = VCP_TX_Pin;
 80029d2:	2304      	movs	r3, #4
 80029d4:	9301      	str	r3, [sp, #4]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80029d6:	2602      	movs	r6, #2
    GPIO_InitStruct.Alternate = GPIO_AF7_USART2;
 80029d8:	2307      	movs	r3, #7
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80029da:	2500      	movs	r5, #0
    HAL_GPIO_Init(VCP_TX_GPIO_Port, &GPIO_InitStruct);
 80029dc:	a901      	add	r1, sp, #4
 80029de:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
    GPIO_InitStruct.Alternate = GPIO_AF7_USART2;
 80029e2:	9305      	str	r3, [sp, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80029e4:	9602      	str	r6, [sp, #8]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80029e6:	9503      	str	r5, [sp, #12]
    HAL_GPIO_Init(VCP_TX_GPIO_Port, &GPIO_InitStruct);
 80029e8:	f7fe fb70 	bl	80010cc <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = VCP_RX_Pin;
 80029ec:	f44f 4300 	mov.w	r3, #32768	; 0x8000
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF3_USART2;
    HAL_GPIO_Init(VCP_RX_GPIO_Port, &GPIO_InitStruct);
 80029f0:	a901      	add	r1, sp, #4
 80029f2:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
    GPIO_InitStruct.Pin = VCP_RX_Pin;
 80029f6:	9301      	str	r3, [sp, #4]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80029f8:	9602      	str	r6, [sp, #8]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80029fa:	9503      	str	r5, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80029fc:	9404      	str	r4, [sp, #16]
    GPIO_InitStruct.Alternate = GPIO_AF3_USART2;
 80029fe:	9405      	str	r4, [sp, #20]
    HAL_GPIO_Init(VCP_RX_GPIO_Port, &GPIO_InitStruct);
 8002a00:	f7fe fb64 	bl	80010cc <HAL_GPIO_Init>
  /* USER CODE BEGIN USART2_MspInit 1 */

  /* USER CODE END USART2_MspInit 1 */
  }

}
 8002a04:	b006      	add	sp, #24
 8002a06:	bd70      	pop	{r4, r5, r6, pc}
 8002a08:	40004400 	.word	0x40004400

08002a0c <SysTick_Handler>:

/**
* @brief This function handles System tick timer.
*/
void SysTick_Handler(void)
{
 8002a0c:	b508      	push	{r3, lr}
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8002a0e:	f7fe fac7 	bl	8000fa0 <HAL_IncTick>
  HAL_SYSTICK_IRQHandler();
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8002a12:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_SYSTICK_IRQHandler();
 8002a16:	f7fe bb54 	b.w	80010c2 <HAL_SYSTICK_IRQHandler>

08002a1a <RCC_IRQHandler>:

/**
* @brief This function handles RCC global interrupt.
*/
void RCC_IRQHandler(void)
{
 8002a1a:	4770      	bx	lr

08002a1c <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 8002a1c:	4801      	ldr	r0, [pc, #4]	; (8002a24 <TIM6_DAC_IRQHandler+0x8>)
 8002a1e:	f7ff ba3b 	b.w	8001e98 <HAL_TIM_IRQHandler>
 8002a22:	bf00      	nop
 8002a24:	200006f4 	.word	0x200006f4

08002a28 <SystemInit>:

void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8002a28:	490f      	ldr	r1, [pc, #60]	; (8002a68 <SystemInit+0x40>)
 8002a2a:	f8d1 3088 	ldr.w	r3, [r1, #136]	; 0x88
 8002a2e:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8002a32:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
  #endif

  /* Reset the RCC clock configuration to the default reset state ------------*/
  /* Set MSION bit */
  RCC->CR |= RCC_CR_MSION;
 8002a36:	4b0d      	ldr	r3, [pc, #52]	; (8002a6c <SystemInit+0x44>)
 8002a38:	681a      	ldr	r2, [r3, #0]

  /* Reset CFGR register */
  RCC->CFGR = 0x00000000U;
 8002a3a:	2000      	movs	r0, #0
  RCC->CR |= RCC_CR_MSION;
 8002a3c:	f042 0201 	orr.w	r2, r2, #1
 8002a40:	601a      	str	r2, [r3, #0]
  RCC->CFGR = 0x00000000U;
 8002a42:	6098      	str	r0, [r3, #8]

  /* Reset HSEON, CSSON , HSION, and PLLON bits */
  RCC->CR &= 0xEAF6FFFFU;
 8002a44:	681a      	ldr	r2, [r3, #0]
 8002a46:	f022 52a8 	bic.w	r2, r2, #352321536	; 0x15000000
 8002a4a:	f422 2210 	bic.w	r2, r2, #589824	; 0x90000
 8002a4e:	601a      	str	r2, [r3, #0]

  /* Reset PLLCFGR register */
  RCC->PLLCFGR = 0x00001000U;
 8002a50:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 8002a54:	60da      	str	r2, [r3, #12]

  /* Reset HSEBYP bit */
  RCC->CR &= 0xFFFBFFFFU;
 8002a56:	681a      	ldr	r2, [r3, #0]
 8002a58:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 8002a5c:	601a      	str	r2, [r3, #0]

  /* Disable all interrupts */
  RCC->CIER = 0x00000000U;
 8002a5e:	6198      	str	r0, [r3, #24]

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 8002a60:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
 8002a64:	608b      	str	r3, [r1, #8]
 8002a66:	4770      	bx	lr
 8002a68:	e000ed00 	.word	0xe000ed00
 8002a6c:	40021000 	.word	0x40021000

08002a70 <Reset_Handler>:

    .section	.text.Reset_Handler
	.weak	Reset_Handler
	.type	Reset_Handler, %function
Reset_Handler:
  ldr   sp, =_estack    /* Atollic update: set stack pointer */
 8002a70:	f8df d034 	ldr.w	sp, [pc, #52]	; 8002aa8 <LoopForever+0x2>

/* Copy the data segment initializers from flash to SRAM */
  movs	r1, #0
 8002a74:	2100      	movs	r1, #0
  b	LoopCopyDataInit
 8002a76:	e003      	b.n	8002a80 <LoopCopyDataInit>

08002a78 <CopyDataInit>:

CopyDataInit:
	ldr	r3, =_sidata
 8002a78:	4b0c      	ldr	r3, [pc, #48]	; (8002aac <LoopForever+0x6>)
	ldr	r3, [r3, r1]
 8002a7a:	585b      	ldr	r3, [r3, r1]
	str	r3, [r0, r1]
 8002a7c:	5043      	str	r3, [r0, r1]
	adds	r1, r1, #4
 8002a7e:	3104      	adds	r1, #4

08002a80 <LoopCopyDataInit>:

LoopCopyDataInit:
	ldr	r0, =_sdata
 8002a80:	480b      	ldr	r0, [pc, #44]	; (8002ab0 <LoopForever+0xa>)
	ldr	r3, =_edata
 8002a82:	4b0c      	ldr	r3, [pc, #48]	; (8002ab4 <LoopForever+0xe>)
	adds	r2, r0, r1
 8002a84:	1842      	adds	r2, r0, r1
	cmp	r2, r3
 8002a86:	429a      	cmp	r2, r3
	bcc	CopyDataInit
 8002a88:	d3f6      	bcc.n	8002a78 <CopyDataInit>
	ldr	r2, =_sbss
 8002a8a:	4a0b      	ldr	r2, [pc, #44]	; (8002ab8 <LoopForever+0x12>)
	b	LoopFillZerobss
 8002a8c:	e002      	b.n	8002a94 <LoopFillZerobss>

08002a8e <FillZerobss>:
/* Zero fill the bss segment. */
FillZerobss:
	movs	r3, #0
 8002a8e:	2300      	movs	r3, #0
	str	r3, [r2], #4
 8002a90:	f842 3b04 	str.w	r3, [r2], #4

08002a94 <LoopFillZerobss>:

LoopFillZerobss:
	ldr	r3, = _ebss
 8002a94:	4b09      	ldr	r3, [pc, #36]	; (8002abc <LoopForever+0x16>)
	cmp	r2, r3
 8002a96:	429a      	cmp	r2, r3
	bcc	FillZerobss
 8002a98:	d3f9      	bcc.n	8002a8e <FillZerobss>

/* Call the clock system intitialization function.*/
    bl  SystemInit
 8002a9a:	f7ff ffc5 	bl	8002a28 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 8002a9e:	f000 f855 	bl	8002b4c <__libc_init_array>
/* Call the application's entry point.*/
	bl	main
 8002aa2:	f7ff fe09 	bl	80026b8 <main>

08002aa6 <LoopForever>:

LoopForever:
    b LoopForever
 8002aa6:	e7fe      	b.n	8002aa6 <LoopForever>
  ldr   sp, =_estack    /* Atollic update: set stack pointer */
 8002aa8:	20010000 	.word	0x20010000
	ldr	r3, =_sidata
 8002aac:	08008458 	.word	0x08008458
	ldr	r0, =_sdata
 8002ab0:	20000000 	.word	0x20000000
	ldr	r3, =_edata
 8002ab4:	20000674 	.word	0x20000674
	ldr	r2, =_sbss
 8002ab8:	20000674 	.word	0x20000674
	ldr	r3, = _ebss
 8002abc:	200007d0 	.word	0x200007d0

08002ac0 <ADC1_IRQHandler>:
 * @retval : None
*/
    .section	.text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
	b	Infinite_Loop
 8002ac0:	e7fe      	b.n	8002ac0 <ADC1_IRQHandler>
	...

08002ac4 <arm_sin_f32>:
 8002ac4:	ed9f 7a1e 	vldr	s14, [pc, #120]	; 8002b40 <arm_sin_f32+0x7c>
 8002ac8:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8002acc:	ee20 7a07 	vmul.f32	s14, s0, s14
 8002ad0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002ad4:	eefd 7ac7 	vcvt.s32.f32	s15, s14
 8002ad8:	d42c      	bmi.n	8002b34 <arm_sin_f32+0x70>
 8002ada:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8002ade:	eddf 6a19 	vldr	s13, [pc, #100]	; 8002b44 <arm_sin_f32+0x80>
 8002ae2:	4a19      	ldr	r2, [pc, #100]	; (8002b48 <arm_sin_f32+0x84>)
 8002ae4:	ee77 7a67 	vsub.f32	s15, s14, s15
 8002ae8:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 8002aec:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8002af0:	eef4 7ae6 	vcmpe.f32	s15, s13
 8002af4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002af8:	bfa8      	it	ge
 8002afa:	ee77 7ae6 	vsubge.f32	s15, s15, s13
 8002afe:	eebc 7ae7 	vcvt.u32.f32	s14, s15
 8002b02:	ee17 3a10 	vmov	r3, s14
 8002b06:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8002b0a:	ee07 3a10 	vmov	s14, r3
 8002b0e:	eeb8 7a47 	vcvt.f32.u32	s14, s14
 8002b12:	eb02 0183 	add.w	r1, r2, r3, lsl #2
 8002b16:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8002b1a:	edd1 6a01 	vldr	s13, [r1, #4]
 8002b1e:	ee30 7a67 	vsub.f32	s14, s0, s15
 8002b22:	ed91 0a00 	vldr	s0, [r1]
 8002b26:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8002b2a:	ee27 0a00 	vmul.f32	s0, s14, s0
 8002b2e:	ee30 0a27 	vadd.f32	s0, s0, s15
 8002b32:	4770      	bx	lr
 8002b34:	ee17 3a90 	vmov	r3, s15
 8002b38:	3b01      	subs	r3, #1
 8002b3a:	ee07 3a90 	vmov	s15, r3
 8002b3e:	e7cc      	b.n	8002ada <arm_sin_f32+0x16>
 8002b40:	3e22f983 	.word	0x3e22f983
 8002b44:	44000000 	.word	0x44000000
 8002b48:	0800779c 	.word	0x0800779c

08002b4c <__libc_init_array>:
 8002b4c:	b570      	push	{r4, r5, r6, lr}
 8002b4e:	4e0d      	ldr	r6, [pc, #52]	; (8002b84 <__libc_init_array+0x38>)
 8002b50:	4c0d      	ldr	r4, [pc, #52]	; (8002b88 <__libc_init_array+0x3c>)
 8002b52:	1ba4      	subs	r4, r4, r6
 8002b54:	10a4      	asrs	r4, r4, #2
 8002b56:	2500      	movs	r5, #0
 8002b58:	42a5      	cmp	r5, r4
 8002b5a:	d109      	bne.n	8002b70 <__libc_init_array+0x24>
 8002b5c:	4e0b      	ldr	r6, [pc, #44]	; (8002b8c <__libc_init_array+0x40>)
 8002b5e:	4c0c      	ldr	r4, [pc, #48]	; (8002b90 <__libc_init_array+0x44>)
 8002b60:	f004 fddc 	bl	800771c <_init>
 8002b64:	1ba4      	subs	r4, r4, r6
 8002b66:	10a4      	asrs	r4, r4, #2
 8002b68:	2500      	movs	r5, #0
 8002b6a:	42a5      	cmp	r5, r4
 8002b6c:	d105      	bne.n	8002b7a <__libc_init_array+0x2e>
 8002b6e:	bd70      	pop	{r4, r5, r6, pc}
 8002b70:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8002b74:	4798      	blx	r3
 8002b76:	3501      	adds	r5, #1
 8002b78:	e7ee      	b.n	8002b58 <__libc_init_array+0xc>
 8002b7a:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8002b7e:	4798      	blx	r3
 8002b80:	3501      	adds	r5, #1
 8002b82:	e7f2      	b.n	8002b6a <__libc_init_array+0x1e>
 8002b84:	08008450 	.word	0x08008450
 8002b88:	08008450 	.word	0x08008450
 8002b8c:	08008450 	.word	0x08008450
 8002b90:	08008454 	.word	0x08008454

08002b94 <printf>:
 8002b94:	b40f      	push	{r0, r1, r2, r3}
 8002b96:	4b0a      	ldr	r3, [pc, #40]	; (8002bc0 <printf+0x2c>)
 8002b98:	b513      	push	{r0, r1, r4, lr}
 8002b9a:	681c      	ldr	r4, [r3, #0]
 8002b9c:	b124      	cbz	r4, 8002ba8 <printf+0x14>
 8002b9e:	69a3      	ldr	r3, [r4, #24]
 8002ba0:	b913      	cbnz	r3, 8002ba8 <printf+0x14>
 8002ba2:	4620      	mov	r0, r4
 8002ba4:	f002 f87c 	bl	8004ca0 <__sinit>
 8002ba8:	ab05      	add	r3, sp, #20
 8002baa:	9a04      	ldr	r2, [sp, #16]
 8002bac:	68a1      	ldr	r1, [r4, #8]
 8002bae:	9301      	str	r3, [sp, #4]
 8002bb0:	4620      	mov	r0, r4
 8002bb2:	f000 f809 	bl	8002bc8 <_vfprintf_r>
 8002bb6:	b002      	add	sp, #8
 8002bb8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002bbc:	b004      	add	sp, #16
 8002bbe:	4770      	bx	lr
 8002bc0:	20000004 	.word	0x20000004
 8002bc4:	00000000 	.word	0x00000000

08002bc8 <_vfprintf_r>:
 8002bc8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002bcc:	b0bd      	sub	sp, #244	; 0xf4
 8002bce:	4688      	mov	r8, r1
 8002bd0:	4615      	mov	r5, r2
 8002bd2:	461c      	mov	r4, r3
 8002bd4:	461f      	mov	r7, r3
 8002bd6:	4683      	mov	fp, r0
 8002bd8:	f002 fb60 	bl	800529c <_localeconv_r>
 8002bdc:	6803      	ldr	r3, [r0, #0]
 8002bde:	930d      	str	r3, [sp, #52]	; 0x34
 8002be0:	4618      	mov	r0, r3
 8002be2:	f7fd faf5 	bl	80001d0 <strlen>
 8002be6:	9009      	str	r0, [sp, #36]	; 0x24
 8002be8:	f1bb 0f00 	cmp.w	fp, #0
 8002bec:	d005      	beq.n	8002bfa <_vfprintf_r+0x32>
 8002bee:	f8db 3018 	ldr.w	r3, [fp, #24]
 8002bf2:	b913      	cbnz	r3, 8002bfa <_vfprintf_r+0x32>
 8002bf4:	4658      	mov	r0, fp
 8002bf6:	f002 f853 	bl	8004ca0 <__sinit>
 8002bfa:	4b99      	ldr	r3, [pc, #612]	; (8002e60 <_vfprintf_r+0x298>)
 8002bfc:	4598      	cmp	r8, r3
 8002bfe:	d137      	bne.n	8002c70 <_vfprintf_r+0xa8>
 8002c00:	f8db 8004 	ldr.w	r8, [fp, #4]
 8002c04:	f8d8 3064 	ldr.w	r3, [r8, #100]	; 0x64
 8002c08:	07d8      	lsls	r0, r3, #31
 8002c0a:	d407      	bmi.n	8002c1c <_vfprintf_r+0x54>
 8002c0c:	f8b8 300c 	ldrh.w	r3, [r8, #12]
 8002c10:	0599      	lsls	r1, r3, #22
 8002c12:	d403      	bmi.n	8002c1c <_vfprintf_r+0x54>
 8002c14:	f8d8 0058 	ldr.w	r0, [r8, #88]	; 0x58
 8002c18:	f002 fb50 	bl	80052bc <__retarget_lock_acquire_recursive>
 8002c1c:	f9b8 300c 	ldrsh.w	r3, [r8, #12]
 8002c20:	049a      	lsls	r2, r3, #18
 8002c22:	d409      	bmi.n	8002c38 <_vfprintf_r+0x70>
 8002c24:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8002c28:	f8a8 300c 	strh.w	r3, [r8, #12]
 8002c2c:	f8d8 3064 	ldr.w	r3, [r8, #100]	; 0x64
 8002c30:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8002c34:	f8c8 3064 	str.w	r3, [r8, #100]	; 0x64
 8002c38:	f8b8 300c 	ldrh.w	r3, [r8, #12]
 8002c3c:	071e      	lsls	r6, r3, #28
 8002c3e:	d502      	bpl.n	8002c46 <_vfprintf_r+0x7e>
 8002c40:	f8d8 3010 	ldr.w	r3, [r8, #16]
 8002c44:	bb03      	cbnz	r3, 8002c88 <_vfprintf_r+0xc0>
 8002c46:	4641      	mov	r1, r8
 8002c48:	4658      	mov	r0, fp
 8002c4a:	f001 f839 	bl	8003cc0 <__swsetup_r>
 8002c4e:	b1d8      	cbz	r0, 8002c88 <_vfprintf_r+0xc0>
 8002c50:	f8d8 3064 	ldr.w	r3, [r8, #100]	; 0x64
 8002c54:	07dd      	lsls	r5, r3, #31
 8002c56:	d407      	bmi.n	8002c68 <_vfprintf_r+0xa0>
 8002c58:	f8b8 300c 	ldrh.w	r3, [r8, #12]
 8002c5c:	059c      	lsls	r4, r3, #22
 8002c5e:	d403      	bmi.n	8002c68 <_vfprintf_r+0xa0>
 8002c60:	f8d8 0058 	ldr.w	r0, [r8, #88]	; 0x58
 8002c64:	f002 fb2b 	bl	80052be <__retarget_lock_release_recursive>
 8002c68:	f04f 33ff 	mov.w	r3, #4294967295
 8002c6c:	930a      	str	r3, [sp, #40]	; 0x28
 8002c6e:	e026      	b.n	8002cbe <_vfprintf_r+0xf6>
 8002c70:	4b7c      	ldr	r3, [pc, #496]	; (8002e64 <_vfprintf_r+0x29c>)
 8002c72:	4598      	cmp	r8, r3
 8002c74:	d102      	bne.n	8002c7c <_vfprintf_r+0xb4>
 8002c76:	f8db 8008 	ldr.w	r8, [fp, #8]
 8002c7a:	e7c3      	b.n	8002c04 <_vfprintf_r+0x3c>
 8002c7c:	4b7a      	ldr	r3, [pc, #488]	; (8002e68 <_vfprintf_r+0x2a0>)
 8002c7e:	4598      	cmp	r8, r3
 8002c80:	bf08      	it	eq
 8002c82:	f8db 800c 	ldreq.w	r8, [fp, #12]
 8002c86:	e7bd      	b.n	8002c04 <_vfprintf_r+0x3c>
 8002c88:	f8b8 300c 	ldrh.w	r3, [r8, #12]
 8002c8c:	f003 021a 	and.w	r2, r3, #26
 8002c90:	2a0a      	cmp	r2, #10
 8002c92:	d118      	bne.n	8002cc6 <_vfprintf_r+0xfe>
 8002c94:	f9b8 200e 	ldrsh.w	r2, [r8, #14]
 8002c98:	2a00      	cmp	r2, #0
 8002c9a:	db14      	blt.n	8002cc6 <_vfprintf_r+0xfe>
 8002c9c:	f8d8 2064 	ldr.w	r2, [r8, #100]	; 0x64
 8002ca0:	07d0      	lsls	r0, r2, #31
 8002ca2:	d405      	bmi.n	8002cb0 <_vfprintf_r+0xe8>
 8002ca4:	0599      	lsls	r1, r3, #22
 8002ca6:	d403      	bmi.n	8002cb0 <_vfprintf_r+0xe8>
 8002ca8:	f8d8 0058 	ldr.w	r0, [r8, #88]	; 0x58
 8002cac:	f002 fb07 	bl	80052be <__retarget_lock_release_recursive>
 8002cb0:	4623      	mov	r3, r4
 8002cb2:	462a      	mov	r2, r5
 8002cb4:	4641      	mov	r1, r8
 8002cb6:	4658      	mov	r0, fp
 8002cb8:	f000 ffc2 	bl	8003c40 <__sbprintf>
 8002cbc:	900a      	str	r0, [sp, #40]	; 0x28
 8002cbe:	980a      	ldr	r0, [sp, #40]	; 0x28
 8002cc0:	b03d      	add	sp, #244	; 0xf4
 8002cc2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002cc6:	ed9f 7b64 	vldr	d7, [pc, #400]	; 8002e58 <_vfprintf_r+0x290>
 8002cca:	ed8d 7b06 	vstr	d7, [sp, #24]
 8002cce:	2300      	movs	r3, #0
 8002cd0:	ac2c      	add	r4, sp, #176	; 0xb0
 8002cd2:	941f      	str	r4, [sp, #124]	; 0x7c
 8002cd4:	9321      	str	r3, [sp, #132]	; 0x84
 8002cd6:	9320      	str	r3, [sp, #128]	; 0x80
 8002cd8:	9505      	str	r5, [sp, #20]
 8002cda:	9303      	str	r3, [sp, #12]
 8002cdc:	9311      	str	r3, [sp, #68]	; 0x44
 8002cde:	9310      	str	r3, [sp, #64]	; 0x40
 8002ce0:	930a      	str	r3, [sp, #40]	; 0x28
 8002ce2:	9d05      	ldr	r5, [sp, #20]
 8002ce4:	462b      	mov	r3, r5
 8002ce6:	f813 2b01 	ldrb.w	r2, [r3], #1
 8002cea:	b112      	cbz	r2, 8002cf2 <_vfprintf_r+0x12a>
 8002cec:	2a25      	cmp	r2, #37	; 0x25
 8002cee:	f040 8083 	bne.w	8002df8 <_vfprintf_r+0x230>
 8002cf2:	9b05      	ldr	r3, [sp, #20]
 8002cf4:	1aee      	subs	r6, r5, r3
 8002cf6:	d00d      	beq.n	8002d14 <_vfprintf_r+0x14c>
 8002cf8:	e884 0048 	stmia.w	r4, {r3, r6}
 8002cfc:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8002cfe:	4433      	add	r3, r6
 8002d00:	9321      	str	r3, [sp, #132]	; 0x84
 8002d02:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8002d04:	3301      	adds	r3, #1
 8002d06:	2b07      	cmp	r3, #7
 8002d08:	9320      	str	r3, [sp, #128]	; 0x80
 8002d0a:	dc77      	bgt.n	8002dfc <_vfprintf_r+0x234>
 8002d0c:	3408      	adds	r4, #8
 8002d0e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8002d10:	4433      	add	r3, r6
 8002d12:	930a      	str	r3, [sp, #40]	; 0x28
 8002d14:	782b      	ldrb	r3, [r5, #0]
 8002d16:	2b00      	cmp	r3, #0
 8002d18:	f000 8739 	beq.w	8003b8e <_vfprintf_r+0xfc6>
 8002d1c:	2300      	movs	r3, #0
 8002d1e:	1c69      	adds	r1, r5, #1
 8002d20:	f88d 305f 	strb.w	r3, [sp, #95]	; 0x5f
 8002d24:	461a      	mov	r2, r3
 8002d26:	f04f 3aff 	mov.w	sl, #4294967295
 8002d2a:	930b      	str	r3, [sp, #44]	; 0x2c
 8002d2c:	461d      	mov	r5, r3
 8002d2e:	200a      	movs	r0, #10
 8002d30:	1c4e      	adds	r6, r1, #1
 8002d32:	7809      	ldrb	r1, [r1, #0]
 8002d34:	9605      	str	r6, [sp, #20]
 8002d36:	9102      	str	r1, [sp, #8]
 8002d38:	9902      	ldr	r1, [sp, #8]
 8002d3a:	3920      	subs	r1, #32
 8002d3c:	2958      	cmp	r1, #88	; 0x58
 8002d3e:	f200 841d 	bhi.w	800357c <_vfprintf_r+0x9b4>
 8002d42:	e8df f011 	tbh	[pc, r1, lsl #1]
 8002d46:	00b3      	.short	0x00b3
 8002d48:	041b041b 	.word	0x041b041b
 8002d4c:	041b00b8 	.word	0x041b00b8
 8002d50:	041b041b 	.word	0x041b041b
 8002d54:	041b041b 	.word	0x041b041b
 8002d58:	00bb041b 	.word	0x00bb041b
 8002d5c:	041b0065 	.word	0x041b0065
 8002d60:	00c700c4 	.word	0x00c700c4
 8002d64:	00e4041b 	.word	0x00e4041b
 8002d68:	00e700e7 	.word	0x00e700e7
 8002d6c:	00e700e7 	.word	0x00e700e7
 8002d70:	00e700e7 	.word	0x00e700e7
 8002d74:	00e700e7 	.word	0x00e700e7
 8002d78:	041b00e7 	.word	0x041b00e7
 8002d7c:	041b041b 	.word	0x041b041b
 8002d80:	041b041b 	.word	0x041b041b
 8002d84:	041b041b 	.word	0x041b041b
 8002d88:	041b041b 	.word	0x041b041b
 8002d8c:	011b041b 	.word	0x011b041b
 8002d90:	041b0131 	.word	0x041b0131
 8002d94:	041b0131 	.word	0x041b0131
 8002d98:	041b041b 	.word	0x041b041b
 8002d9c:	00fa041b 	.word	0x00fa041b
 8002da0:	041b041b 	.word	0x041b041b
 8002da4:	041b0346 	.word	0x041b0346
 8002da8:	041b041b 	.word	0x041b041b
 8002dac:	041b041b 	.word	0x041b041b
 8002db0:	041b03ad 	.word	0x041b03ad
 8002db4:	0093041b 	.word	0x0093041b
 8002db8:	041b041b 	.word	0x041b041b
 8002dbc:	041b041b 	.word	0x041b041b
 8002dc0:	041b041b 	.word	0x041b041b
 8002dc4:	041b041b 	.word	0x041b041b
 8002dc8:	041b041b 	.word	0x041b041b
 8002dcc:	006b010d 	.word	0x006b010d
 8002dd0:	01310131 	.word	0x01310131
 8002dd4:	00fd0131 	.word	0x00fd0131
 8002dd8:	041b006b 	.word	0x041b006b
 8002ddc:	0100041b 	.word	0x0100041b
 8002de0:	0328041b 	.word	0x0328041b
 8002de4:	037c0348 	.word	0x037c0348
 8002de8:	041b0107 	.word	0x041b0107
 8002dec:	041b038d 	.word	0x041b038d
 8002df0:	041b03af 	.word	0x041b03af
 8002df4:	03c7041b 	.word	0x03c7041b
 8002df8:	461d      	mov	r5, r3
 8002dfa:	e773      	b.n	8002ce4 <_vfprintf_r+0x11c>
 8002dfc:	aa1f      	add	r2, sp, #124	; 0x7c
 8002dfe:	4641      	mov	r1, r8
 8002e00:	4658      	mov	r0, fp
 8002e02:	f003 f9bc 	bl	800617e <__sprint_r>
 8002e06:	2800      	cmp	r0, #0
 8002e08:	f040 8699 	bne.w	8003b3e <_vfprintf_r+0xf76>
 8002e0c:	ac2c      	add	r4, sp, #176	; 0xb0
 8002e0e:	e77e      	b.n	8002d0e <_vfprintf_r+0x146>
 8002e10:	2301      	movs	r3, #1
 8002e12:	222b      	movs	r2, #43	; 0x2b
 8002e14:	9905      	ldr	r1, [sp, #20]
 8002e16:	e78b      	b.n	8002d30 <_vfprintf_r+0x168>
 8002e18:	460f      	mov	r7, r1
 8002e1a:	e7fb      	b.n	8002e14 <_vfprintf_r+0x24c>
 8002e1c:	b10b      	cbz	r3, 8002e22 <_vfprintf_r+0x25a>
 8002e1e:	f88d 205f 	strb.w	r2, [sp, #95]	; 0x5f
 8002e22:	06aa      	lsls	r2, r5, #26
 8002e24:	f140 80b0 	bpl.w	8002f88 <_vfprintf_r+0x3c0>
 8002e28:	3707      	adds	r7, #7
 8002e2a:	f027 0707 	bic.w	r7, r7, #7
 8002e2e:	f107 0308 	add.w	r3, r7, #8
 8002e32:	e9d7 6700 	ldrd	r6, r7, [r7]
 8002e36:	9304      	str	r3, [sp, #16]
 8002e38:	2e00      	cmp	r6, #0
 8002e3a:	f177 0300 	sbcs.w	r3, r7, #0
 8002e3e:	da06      	bge.n	8002e4e <_vfprintf_r+0x286>
 8002e40:	4276      	negs	r6, r6
 8002e42:	f04f 032d 	mov.w	r3, #45	; 0x2d
 8002e46:	eb67 0747 	sbc.w	r7, r7, r7, lsl #1
 8002e4a:	f88d 305f 	strb.w	r3, [sp, #95]	; 0x5f
 8002e4e:	2301      	movs	r3, #1
 8002e50:	e2d0      	b.n	80033f4 <_vfprintf_r+0x82c>
 8002e52:	bf00      	nop
 8002e54:	f3af 8000 	nop.w
	...
 8002e60:	08008024 	.word	0x08008024
 8002e64:	08008044 	.word	0x08008044
 8002e68:	08008004 	.word	0x08008004
 8002e6c:	b10b      	cbz	r3, 8002e72 <_vfprintf_r+0x2aa>
 8002e6e:	f88d 205f 	strb.w	r2, [sp, #95]	; 0x5f
 8002e72:	4ba2      	ldr	r3, [pc, #648]	; (80030fc <_vfprintf_r+0x534>)
 8002e74:	9311      	str	r3, [sp, #68]	; 0x44
 8002e76:	06a9      	lsls	r1, r5, #26
 8002e78:	f140 8331 	bpl.w	80034de <_vfprintf_r+0x916>
 8002e7c:	3707      	adds	r7, #7
 8002e7e:	f027 0707 	bic.w	r7, r7, #7
 8002e82:	f107 0308 	add.w	r3, r7, #8
 8002e86:	e9d7 6700 	ldrd	r6, r7, [r7]
 8002e8a:	9304      	str	r3, [sp, #16]
 8002e8c:	07eb      	lsls	r3, r5, #31
 8002e8e:	d50b      	bpl.n	8002ea8 <_vfprintf_r+0x2e0>
 8002e90:	ea56 0307 	orrs.w	r3, r6, r7
 8002e94:	d008      	beq.n	8002ea8 <_vfprintf_r+0x2e0>
 8002e96:	2330      	movs	r3, #48	; 0x30
 8002e98:	f88d 3060 	strb.w	r3, [sp, #96]	; 0x60
 8002e9c:	f89d 3008 	ldrb.w	r3, [sp, #8]
 8002ea0:	f88d 3061 	strb.w	r3, [sp, #97]	; 0x61
 8002ea4:	f045 0502 	orr.w	r5, r5, #2
 8002ea8:	2302      	movs	r3, #2
 8002eaa:	e2a0      	b.n	80033ee <_vfprintf_r+0x826>
 8002eac:	2a00      	cmp	r2, #0
 8002eae:	d1b1      	bne.n	8002e14 <_vfprintf_r+0x24c>
 8002eb0:	2301      	movs	r3, #1
 8002eb2:	2220      	movs	r2, #32
 8002eb4:	e7ae      	b.n	8002e14 <_vfprintf_r+0x24c>
 8002eb6:	f045 0501 	orr.w	r5, r5, #1
 8002eba:	e7ab      	b.n	8002e14 <_vfprintf_r+0x24c>
 8002ebc:	683e      	ldr	r6, [r7, #0]
 8002ebe:	960b      	str	r6, [sp, #44]	; 0x2c
 8002ec0:	2e00      	cmp	r6, #0
 8002ec2:	f107 0104 	add.w	r1, r7, #4
 8002ec6:	daa7      	bge.n	8002e18 <_vfprintf_r+0x250>
 8002ec8:	4276      	negs	r6, r6
 8002eca:	960b      	str	r6, [sp, #44]	; 0x2c
 8002ecc:	460f      	mov	r7, r1
 8002ece:	f045 0504 	orr.w	r5, r5, #4
 8002ed2:	e79f      	b.n	8002e14 <_vfprintf_r+0x24c>
 8002ed4:	9905      	ldr	r1, [sp, #20]
 8002ed6:	1c4e      	adds	r6, r1, #1
 8002ed8:	7809      	ldrb	r1, [r1, #0]
 8002eda:	9102      	str	r1, [sp, #8]
 8002edc:	292a      	cmp	r1, #42	; 0x2a
 8002ede:	d010      	beq.n	8002f02 <_vfprintf_r+0x33a>
 8002ee0:	f04f 0a00 	mov.w	sl, #0
 8002ee4:	9605      	str	r6, [sp, #20]
 8002ee6:	9902      	ldr	r1, [sp, #8]
 8002ee8:	3930      	subs	r1, #48	; 0x30
 8002eea:	2909      	cmp	r1, #9
 8002eec:	f63f af24 	bhi.w	8002d38 <_vfprintf_r+0x170>
 8002ef0:	fb00 1a0a 	mla	sl, r0, sl, r1
 8002ef4:	9905      	ldr	r1, [sp, #20]
 8002ef6:	460e      	mov	r6, r1
 8002ef8:	f816 1b01 	ldrb.w	r1, [r6], #1
 8002efc:	9102      	str	r1, [sp, #8]
 8002efe:	9605      	str	r6, [sp, #20]
 8002f00:	e7f1      	b.n	8002ee6 <_vfprintf_r+0x31e>
 8002f02:	6839      	ldr	r1, [r7, #0]
 8002f04:	9605      	str	r6, [sp, #20]
 8002f06:	ea41 7ae1 	orr.w	sl, r1, r1, asr #31
 8002f0a:	3704      	adds	r7, #4
 8002f0c:	e782      	b.n	8002e14 <_vfprintf_r+0x24c>
 8002f0e:	f045 0580 	orr.w	r5, r5, #128	; 0x80
 8002f12:	e77f      	b.n	8002e14 <_vfprintf_r+0x24c>
 8002f14:	2100      	movs	r1, #0
 8002f16:	910b      	str	r1, [sp, #44]	; 0x2c
 8002f18:	9902      	ldr	r1, [sp, #8]
 8002f1a:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 8002f1c:	3930      	subs	r1, #48	; 0x30
 8002f1e:	fb00 1106 	mla	r1, r0, r6, r1
 8002f22:	910b      	str	r1, [sp, #44]	; 0x2c
 8002f24:	9905      	ldr	r1, [sp, #20]
 8002f26:	460e      	mov	r6, r1
 8002f28:	f816 1b01 	ldrb.w	r1, [r6], #1
 8002f2c:	9102      	str	r1, [sp, #8]
 8002f2e:	9902      	ldr	r1, [sp, #8]
 8002f30:	9605      	str	r6, [sp, #20]
 8002f32:	3930      	subs	r1, #48	; 0x30
 8002f34:	2909      	cmp	r1, #9
 8002f36:	d9ef      	bls.n	8002f18 <_vfprintf_r+0x350>
 8002f38:	e6fe      	b.n	8002d38 <_vfprintf_r+0x170>
 8002f3a:	f045 0508 	orr.w	r5, r5, #8
 8002f3e:	e769      	b.n	8002e14 <_vfprintf_r+0x24c>
 8002f40:	f045 0540 	orr.w	r5, r5, #64	; 0x40
 8002f44:	e766      	b.n	8002e14 <_vfprintf_r+0x24c>
 8002f46:	9905      	ldr	r1, [sp, #20]
 8002f48:	7809      	ldrb	r1, [r1, #0]
 8002f4a:	296c      	cmp	r1, #108	; 0x6c
 8002f4c:	d105      	bne.n	8002f5a <_vfprintf_r+0x392>
 8002f4e:	9905      	ldr	r1, [sp, #20]
 8002f50:	3101      	adds	r1, #1
 8002f52:	9105      	str	r1, [sp, #20]
 8002f54:	f045 0520 	orr.w	r5, r5, #32
 8002f58:	e75c      	b.n	8002e14 <_vfprintf_r+0x24c>
 8002f5a:	f045 0510 	orr.w	r5, r5, #16
 8002f5e:	e759      	b.n	8002e14 <_vfprintf_r+0x24c>
 8002f60:	1d3b      	adds	r3, r7, #4
 8002f62:	9304      	str	r3, [sp, #16]
 8002f64:	2600      	movs	r6, #0
 8002f66:	683b      	ldr	r3, [r7, #0]
 8002f68:	f88d 3088 	strb.w	r3, [sp, #136]	; 0x88
 8002f6c:	f88d 605f 	strb.w	r6, [sp, #95]	; 0x5f
 8002f70:	f04f 0a01 	mov.w	sl, #1
 8002f74:	9608      	str	r6, [sp, #32]
 8002f76:	f10d 0988 	add.w	r9, sp, #136	; 0x88
 8002f7a:	e11e      	b.n	80031ba <_vfprintf_r+0x5f2>
 8002f7c:	b10b      	cbz	r3, 8002f82 <_vfprintf_r+0x3ba>
 8002f7e:	f88d 205f 	strb.w	r2, [sp, #95]	; 0x5f
 8002f82:	f045 0510 	orr.w	r5, r5, #16
 8002f86:	e74c      	b.n	8002e22 <_vfprintf_r+0x25a>
 8002f88:	f015 0f10 	tst.w	r5, #16
 8002f8c:	f107 0304 	add.w	r3, r7, #4
 8002f90:	d003      	beq.n	8002f9a <_vfprintf_r+0x3d2>
 8002f92:	683e      	ldr	r6, [r7, #0]
 8002f94:	9304      	str	r3, [sp, #16]
 8002f96:	17f7      	asrs	r7, r6, #31
 8002f98:	e74e      	b.n	8002e38 <_vfprintf_r+0x270>
 8002f9a:	683e      	ldr	r6, [r7, #0]
 8002f9c:	9304      	str	r3, [sp, #16]
 8002f9e:	f015 0f40 	tst.w	r5, #64	; 0x40
 8002fa2:	bf18      	it	ne
 8002fa4:	b236      	sxthne	r6, r6
 8002fa6:	e7f6      	b.n	8002f96 <_vfprintf_r+0x3ce>
 8002fa8:	b10b      	cbz	r3, 8002fae <_vfprintf_r+0x3e6>
 8002faa:	f88d 205f 	strb.w	r2, [sp, #95]	; 0x5f
 8002fae:	3707      	adds	r7, #7
 8002fb0:	f027 0707 	bic.w	r7, r7, #7
 8002fb4:	f107 0308 	add.w	r3, r7, #8
 8002fb8:	9304      	str	r3, [sp, #16]
 8002fba:	ed97 7b00 	vldr	d7, [r7]
 8002fbe:	ed8d 7b06 	vstr	d7, [sp, #24]
 8002fc2:	9b06      	ldr	r3, [sp, #24]
 8002fc4:	9312      	str	r3, [sp, #72]	; 0x48
 8002fc6:	9b07      	ldr	r3, [sp, #28]
 8002fc8:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8002fcc:	9313      	str	r3, [sp, #76]	; 0x4c
 8002fce:	f04f 32ff 	mov.w	r2, #4294967295
 8002fd2:	4b4b      	ldr	r3, [pc, #300]	; (8003100 <_vfprintf_r+0x538>)
 8002fd4:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	; 0x48
 8002fd8:	f7fd fda4 	bl	8000b24 <__aeabi_dcmpun>
 8002fdc:	2800      	cmp	r0, #0
 8002fde:	f040 85e3 	bne.w	8003ba8 <_vfprintf_r+0xfe0>
 8002fe2:	f04f 32ff 	mov.w	r2, #4294967295
 8002fe6:	4b46      	ldr	r3, [pc, #280]	; (8003100 <_vfprintf_r+0x538>)
 8002fe8:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	; 0x48
 8002fec:	f7fd fd7c 	bl	8000ae8 <__aeabi_dcmple>
 8002ff0:	2800      	cmp	r0, #0
 8002ff2:	f040 85d9 	bne.w	8003ba8 <_vfprintf_r+0xfe0>
 8002ff6:	2200      	movs	r2, #0
 8002ff8:	2300      	movs	r3, #0
 8002ffa:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8002ffe:	f7fd fd69 	bl	8000ad4 <__aeabi_dcmplt>
 8003002:	b110      	cbz	r0, 800300a <_vfprintf_r+0x442>
 8003004:	232d      	movs	r3, #45	; 0x2d
 8003006:	f88d 305f 	strb.w	r3, [sp, #95]	; 0x5f
 800300a:	4b3e      	ldr	r3, [pc, #248]	; (8003104 <_vfprintf_r+0x53c>)
 800300c:	4a3e      	ldr	r2, [pc, #248]	; (8003108 <_vfprintf_r+0x540>)
 800300e:	9902      	ldr	r1, [sp, #8]
 8003010:	f025 0580 	bic.w	r5, r5, #128	; 0x80
 8003014:	2947      	cmp	r1, #71	; 0x47
 8003016:	bfcc      	ite	gt
 8003018:	4691      	movgt	r9, r2
 800301a:	4699      	movle	r9, r3
 800301c:	f04f 0a03 	mov.w	sl, #3
 8003020:	2600      	movs	r6, #0
 8003022:	9608      	str	r6, [sp, #32]
 8003024:	e0c9      	b.n	80031ba <_vfprintf_r+0x5f2>
 8003026:	f1ba 3fff 	cmp.w	sl, #4294967295
 800302a:	d022      	beq.n	8003072 <_vfprintf_r+0x4aa>
 800302c:	9b02      	ldr	r3, [sp, #8]
 800302e:	f023 0320 	bic.w	r3, r3, #32
 8003032:	2b47      	cmp	r3, #71	; 0x47
 8003034:	d104      	bne.n	8003040 <_vfprintf_r+0x478>
 8003036:	f1ba 0f00 	cmp.w	sl, #0
 800303a:	bf08      	it	eq
 800303c:	f04f 0a01 	moveq.w	sl, #1
 8003040:	f445 7380 	orr.w	r3, r5, #256	; 0x100
 8003044:	9314      	str	r3, [sp, #80]	; 0x50
 8003046:	9b07      	ldr	r3, [sp, #28]
 8003048:	2b00      	cmp	r3, #0
 800304a:	da15      	bge.n	8003078 <_vfprintf_r+0x4b0>
 800304c:	9b06      	ldr	r3, [sp, #24]
 800304e:	930e      	str	r3, [sp, #56]	; 0x38
 8003050:	9b07      	ldr	r3, [sp, #28]
 8003052:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 8003056:	930f      	str	r3, [sp, #60]	; 0x3c
 8003058:	232d      	movs	r3, #45	; 0x2d
 800305a:	930c      	str	r3, [sp, #48]	; 0x30
 800305c:	9b02      	ldr	r3, [sp, #8]
 800305e:	f023 0720 	bic.w	r7, r3, #32
 8003062:	2f46      	cmp	r7, #70	; 0x46
 8003064:	d00e      	beq.n	8003084 <_vfprintf_r+0x4bc>
 8003066:	2f45      	cmp	r7, #69	; 0x45
 8003068:	d146      	bne.n	80030f8 <_vfprintf_r+0x530>
 800306a:	f10a 0601 	add.w	r6, sl, #1
 800306e:	2102      	movs	r1, #2
 8003070:	e00a      	b.n	8003088 <_vfprintf_r+0x4c0>
 8003072:	f04f 0a06 	mov.w	sl, #6
 8003076:	e7e3      	b.n	8003040 <_vfprintf_r+0x478>
 8003078:	ed9d 7b06 	vldr	d7, [sp, #24]
 800307c:	2300      	movs	r3, #0
 800307e:	ed8d 7b0e 	vstr	d7, [sp, #56]	; 0x38
 8003082:	e7ea      	b.n	800305a <_vfprintf_r+0x492>
 8003084:	4656      	mov	r6, sl
 8003086:	2103      	movs	r1, #3
 8003088:	ab1d      	add	r3, sp, #116	; 0x74
 800308a:	9301      	str	r3, [sp, #4]
 800308c:	ab1a      	add	r3, sp, #104	; 0x68
 800308e:	9300      	str	r3, [sp, #0]
 8003090:	4632      	mov	r2, r6
 8003092:	ab19      	add	r3, sp, #100	; 0x64
 8003094:	ed9d 0b0e 	vldr	d0, [sp, #56]	; 0x38
 8003098:	4658      	mov	r0, fp
 800309a:	f000 ff0d 	bl	8003eb8 <_dtoa_r>
 800309e:	2f47      	cmp	r7, #71	; 0x47
 80030a0:	4681      	mov	r9, r0
 80030a2:	d102      	bne.n	80030aa <_vfprintf_r+0x4e2>
 80030a4:	07eb      	lsls	r3, r5, #31
 80030a6:	f140 858c 	bpl.w	8003bc2 <_vfprintf_r+0xffa>
 80030aa:	eb09 0306 	add.w	r3, r9, r6
 80030ae:	2f46      	cmp	r7, #70	; 0x46
 80030b0:	9303      	str	r3, [sp, #12]
 80030b2:	d111      	bne.n	80030d8 <_vfprintf_r+0x510>
 80030b4:	f899 3000 	ldrb.w	r3, [r9]
 80030b8:	2b30      	cmp	r3, #48	; 0x30
 80030ba:	d109      	bne.n	80030d0 <_vfprintf_r+0x508>
 80030bc:	2200      	movs	r2, #0
 80030be:	2300      	movs	r3, #0
 80030c0:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
 80030c4:	f7fd fcfc 	bl	8000ac0 <__aeabi_dcmpeq>
 80030c8:	b910      	cbnz	r0, 80030d0 <_vfprintf_r+0x508>
 80030ca:	f1c6 0601 	rsb	r6, r6, #1
 80030ce:	9619      	str	r6, [sp, #100]	; 0x64
 80030d0:	9a03      	ldr	r2, [sp, #12]
 80030d2:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80030d4:	441a      	add	r2, r3
 80030d6:	9203      	str	r2, [sp, #12]
 80030d8:	2200      	movs	r2, #0
 80030da:	2300      	movs	r3, #0
 80030dc:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
 80030e0:	f7fd fcee 	bl	8000ac0 <__aeabi_dcmpeq>
 80030e4:	b990      	cbnz	r0, 800310c <_vfprintf_r+0x544>
 80030e6:	2230      	movs	r2, #48	; 0x30
 80030e8:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80030ea:	9903      	ldr	r1, [sp, #12]
 80030ec:	4299      	cmp	r1, r3
 80030ee:	d90f      	bls.n	8003110 <_vfprintf_r+0x548>
 80030f0:	1c59      	adds	r1, r3, #1
 80030f2:	911d      	str	r1, [sp, #116]	; 0x74
 80030f4:	701a      	strb	r2, [r3, #0]
 80030f6:	e7f7      	b.n	80030e8 <_vfprintf_r+0x520>
 80030f8:	4656      	mov	r6, sl
 80030fa:	e7b8      	b.n	800306e <_vfprintf_r+0x4a6>
 80030fc:	08007fb0 	.word	0x08007fb0
 8003100:	7fefffff 	.word	0x7fefffff
 8003104:	08007fa0 	.word	0x08007fa0
 8003108:	08007fa4 	.word	0x08007fa4
 800310c:	9b03      	ldr	r3, [sp, #12]
 800310e:	931d      	str	r3, [sp, #116]	; 0x74
 8003110:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8003112:	2f47      	cmp	r7, #71	; 0x47
 8003114:	eba3 0309 	sub.w	r3, r3, r9
 8003118:	9303      	str	r3, [sp, #12]
 800311a:	f040 80f8 	bne.w	800330e <_vfprintf_r+0x746>
 800311e:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8003120:	1cdf      	adds	r7, r3, #3
 8003122:	db02      	blt.n	800312a <_vfprintf_r+0x562>
 8003124:	459a      	cmp	sl, r3
 8003126:	f280 811f 	bge.w	8003368 <_vfprintf_r+0x7a0>
 800312a:	9b02      	ldr	r3, [sp, #8]
 800312c:	3b02      	subs	r3, #2
 800312e:	9302      	str	r3, [sp, #8]
 8003130:	9a19      	ldr	r2, [sp, #100]	; 0x64
 8003132:	f89d 1008 	ldrb.w	r1, [sp, #8]
 8003136:	f88d 106c 	strb.w	r1, [sp, #108]	; 0x6c
 800313a:	1e53      	subs	r3, r2, #1
 800313c:	2b00      	cmp	r3, #0
 800313e:	9319      	str	r3, [sp, #100]	; 0x64
 8003140:	bfb6      	itet	lt
 8003142:	f1c2 0301 	rsblt	r3, r2, #1
 8003146:	222b      	movge	r2, #43	; 0x2b
 8003148:	222d      	movlt	r2, #45	; 0x2d
 800314a:	2b09      	cmp	r3, #9
 800314c:	f88d 206d 	strb.w	r2, [sp, #109]	; 0x6d
 8003150:	f340 80fa 	ble.w	8003348 <_vfprintf_r+0x780>
 8003154:	f10d 027b 	add.w	r2, sp, #123	; 0x7b
 8003158:	260a      	movs	r6, #10
 800315a:	fb93 f0f6 	sdiv	r0, r3, r6
 800315e:	fb06 3310 	mls	r3, r6, r0, r3
 8003162:	3330      	adds	r3, #48	; 0x30
 8003164:	2809      	cmp	r0, #9
 8003166:	f802 3c01 	strb.w	r3, [r2, #-1]
 800316a:	f102 31ff 	add.w	r1, r2, #4294967295
 800316e:	4603      	mov	r3, r0
 8003170:	f300 80e3 	bgt.w	800333a <_vfprintf_r+0x772>
 8003174:	3330      	adds	r3, #48	; 0x30
 8003176:	f801 3c01 	strb.w	r3, [r1, #-1]
 800317a:	3a02      	subs	r2, #2
 800317c:	f10d 036e 	add.w	r3, sp, #110	; 0x6e
 8003180:	f10d 007b 	add.w	r0, sp, #123	; 0x7b
 8003184:	4282      	cmp	r2, r0
 8003186:	4619      	mov	r1, r3
 8003188:	f0c0 80d9 	bcc.w	800333e <_vfprintf_r+0x776>
 800318c:	9a03      	ldr	r2, [sp, #12]
 800318e:	ab1b      	add	r3, sp, #108	; 0x6c
 8003190:	1acb      	subs	r3, r1, r3
 8003192:	2a01      	cmp	r2, #1
 8003194:	9310      	str	r3, [sp, #64]	; 0x40
 8003196:	eb03 0a02 	add.w	sl, r3, r2
 800319a:	dc03      	bgt.n	80031a4 <_vfprintf_r+0x5dc>
 800319c:	f015 0301 	ands.w	r3, r5, #1
 80031a0:	9308      	str	r3, [sp, #32]
 80031a2:	d003      	beq.n	80031ac <_vfprintf_r+0x5e4>
 80031a4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80031a6:	449a      	add	sl, r3
 80031a8:	2300      	movs	r3, #0
 80031aa:	9308      	str	r3, [sp, #32]
 80031ac:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80031ae:	b113      	cbz	r3, 80031b6 <_vfprintf_r+0x5ee>
 80031b0:	232d      	movs	r3, #45	; 0x2d
 80031b2:	f88d 305f 	strb.w	r3, [sp, #95]	; 0x5f
 80031b6:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80031b8:	2600      	movs	r6, #0
 80031ba:	4556      	cmp	r6, sl
 80031bc:	4633      	mov	r3, r6
 80031be:	bfb8      	it	lt
 80031c0:	4653      	movlt	r3, sl
 80031c2:	930c      	str	r3, [sp, #48]	; 0x30
 80031c4:	f89d 305f 	ldrb.w	r3, [sp, #95]	; 0x5f
 80031c8:	b113      	cbz	r3, 80031d0 <_vfprintf_r+0x608>
 80031ca:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80031cc:	3301      	adds	r3, #1
 80031ce:	930c      	str	r3, [sp, #48]	; 0x30
 80031d0:	f015 0302 	ands.w	r3, r5, #2
 80031d4:	9314      	str	r3, [sp, #80]	; 0x50
 80031d6:	bf1e      	ittt	ne
 80031d8:	9b0c      	ldrne	r3, [sp, #48]	; 0x30
 80031da:	3302      	addne	r3, #2
 80031dc:	930c      	strne	r3, [sp, #48]	; 0x30
 80031de:	f015 0384 	ands.w	r3, r5, #132	; 0x84
 80031e2:	9315      	str	r3, [sp, #84]	; 0x54
 80031e4:	d114      	bne.n	8003210 <_vfprintf_r+0x648>
 80031e6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80031e8:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80031ea:	1a9f      	subs	r7, r3, r2
 80031ec:	2f00      	cmp	r7, #0
 80031ee:	dd0f      	ble.n	8003210 <_vfprintf_r+0x648>
 80031f0:	4ba8      	ldr	r3, [pc, #672]	; (8003494 <_vfprintf_r+0x8cc>)
 80031f2:	6023      	str	r3, [r4, #0]
 80031f4:	2f10      	cmp	r7, #16
 80031f6:	f300 81d3 	bgt.w	80035a0 <_vfprintf_r+0x9d8>
 80031fa:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80031fc:	6067      	str	r7, [r4, #4]
 80031fe:	441f      	add	r7, r3
 8003200:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8003202:	9721      	str	r7, [sp, #132]	; 0x84
 8003204:	3301      	adds	r3, #1
 8003206:	2b07      	cmp	r3, #7
 8003208:	9320      	str	r3, [sp, #128]	; 0x80
 800320a:	f300 81e0 	bgt.w	80035ce <_vfprintf_r+0xa06>
 800320e:	3408      	adds	r4, #8
 8003210:	f89d 305f 	ldrb.w	r3, [sp, #95]	; 0x5f
 8003214:	b173      	cbz	r3, 8003234 <_vfprintf_r+0x66c>
 8003216:	f10d 035f 	add.w	r3, sp, #95	; 0x5f
 800321a:	6023      	str	r3, [r4, #0]
 800321c:	2301      	movs	r3, #1
 800321e:	6063      	str	r3, [r4, #4]
 8003220:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8003222:	3301      	adds	r3, #1
 8003224:	9321      	str	r3, [sp, #132]	; 0x84
 8003226:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8003228:	3301      	adds	r3, #1
 800322a:	2b07      	cmp	r3, #7
 800322c:	9320      	str	r3, [sp, #128]	; 0x80
 800322e:	f300 81d8 	bgt.w	80035e2 <_vfprintf_r+0xa1a>
 8003232:	3408      	adds	r4, #8
 8003234:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8003236:	b16b      	cbz	r3, 8003254 <_vfprintf_r+0x68c>
 8003238:	ab18      	add	r3, sp, #96	; 0x60
 800323a:	6023      	str	r3, [r4, #0]
 800323c:	2302      	movs	r3, #2
 800323e:	6063      	str	r3, [r4, #4]
 8003240:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8003242:	3302      	adds	r3, #2
 8003244:	9321      	str	r3, [sp, #132]	; 0x84
 8003246:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8003248:	3301      	adds	r3, #1
 800324a:	2b07      	cmp	r3, #7
 800324c:	9320      	str	r3, [sp, #128]	; 0x80
 800324e:	f300 81d2 	bgt.w	80035f6 <_vfprintf_r+0xa2e>
 8003252:	3408      	adds	r4, #8
 8003254:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8003256:	2b80      	cmp	r3, #128	; 0x80
 8003258:	d114      	bne.n	8003284 <_vfprintf_r+0x6bc>
 800325a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800325c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800325e:	1a9f      	subs	r7, r3, r2
 8003260:	2f00      	cmp	r7, #0
 8003262:	dd0f      	ble.n	8003284 <_vfprintf_r+0x6bc>
 8003264:	4b8c      	ldr	r3, [pc, #560]	; (8003498 <_vfprintf_r+0x8d0>)
 8003266:	6023      	str	r3, [r4, #0]
 8003268:	2f10      	cmp	r7, #16
 800326a:	f300 81ce 	bgt.w	800360a <_vfprintf_r+0xa42>
 800326e:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8003270:	6067      	str	r7, [r4, #4]
 8003272:	441f      	add	r7, r3
 8003274:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8003276:	9721      	str	r7, [sp, #132]	; 0x84
 8003278:	3301      	adds	r3, #1
 800327a:	2b07      	cmp	r3, #7
 800327c:	9320      	str	r3, [sp, #128]	; 0x80
 800327e:	f300 81dd 	bgt.w	800363c <_vfprintf_r+0xa74>
 8003282:	3408      	adds	r4, #8
 8003284:	eba6 060a 	sub.w	r6, r6, sl
 8003288:	2e00      	cmp	r6, #0
 800328a:	dd0f      	ble.n	80032ac <_vfprintf_r+0x6e4>
 800328c:	4f82      	ldr	r7, [pc, #520]	; (8003498 <_vfprintf_r+0x8d0>)
 800328e:	6027      	str	r7, [r4, #0]
 8003290:	2e10      	cmp	r6, #16
 8003292:	f300 81dd 	bgt.w	8003650 <_vfprintf_r+0xa88>
 8003296:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8003298:	9821      	ldr	r0, [sp, #132]	; 0x84
 800329a:	6066      	str	r6, [r4, #4]
 800329c:	3301      	adds	r3, #1
 800329e:	4406      	add	r6, r0
 80032a0:	2b07      	cmp	r3, #7
 80032a2:	9621      	str	r6, [sp, #132]	; 0x84
 80032a4:	9320      	str	r3, [sp, #128]	; 0x80
 80032a6:	f300 81ea 	bgt.w	800367e <_vfprintf_r+0xab6>
 80032aa:	3408      	adds	r4, #8
 80032ac:	05e9      	lsls	r1, r5, #23
 80032ae:	f100 81f0 	bmi.w	8003692 <_vfprintf_r+0xaca>
 80032b2:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80032b4:	e884 0600 	stmia.w	r4, {r9, sl}
 80032b8:	4453      	add	r3, sl
 80032ba:	9321      	str	r3, [sp, #132]	; 0x84
 80032bc:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80032be:	3301      	adds	r3, #1
 80032c0:	2b07      	cmp	r3, #7
 80032c2:	9320      	str	r3, [sp, #128]	; 0x80
 80032c4:	f340 841b 	ble.w	8003afe <_vfprintf_r+0xf36>
 80032c8:	aa1f      	add	r2, sp, #124	; 0x7c
 80032ca:	4641      	mov	r1, r8
 80032cc:	4658      	mov	r0, fp
 80032ce:	f002 ff56 	bl	800617e <__sprint_r>
 80032d2:	2800      	cmp	r0, #0
 80032d4:	f040 8433 	bne.w	8003b3e <_vfprintf_r+0xf76>
 80032d8:	ac2c      	add	r4, sp, #176	; 0xb0
 80032da:	0768      	lsls	r0, r5, #29
 80032dc:	f100 8412 	bmi.w	8003b04 <_vfprintf_r+0xf3c>
 80032e0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80032e2:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80032e4:	990c      	ldr	r1, [sp, #48]	; 0x30
 80032e6:	428a      	cmp	r2, r1
 80032e8:	bfac      	ite	ge
 80032ea:	189b      	addge	r3, r3, r2
 80032ec:	185b      	addlt	r3, r3, r1
 80032ee:	930a      	str	r3, [sp, #40]	; 0x28
 80032f0:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80032f2:	b13b      	cbz	r3, 8003304 <_vfprintf_r+0x73c>
 80032f4:	aa1f      	add	r2, sp, #124	; 0x7c
 80032f6:	4641      	mov	r1, r8
 80032f8:	4658      	mov	r0, fp
 80032fa:	f002 ff40 	bl	800617e <__sprint_r>
 80032fe:	2800      	cmp	r0, #0
 8003300:	f040 841d 	bne.w	8003b3e <_vfprintf_r+0xf76>
 8003304:	2300      	movs	r3, #0
 8003306:	9320      	str	r3, [sp, #128]	; 0x80
 8003308:	9f04      	ldr	r7, [sp, #16]
 800330a:	ac2c      	add	r4, sp, #176	; 0xb0
 800330c:	e4e9      	b.n	8002ce2 <_vfprintf_r+0x11a>
 800330e:	9b02      	ldr	r3, [sp, #8]
 8003310:	2b65      	cmp	r3, #101	; 0x65
 8003312:	f77f af0d 	ble.w	8003130 <_vfprintf_r+0x568>
 8003316:	9b02      	ldr	r3, [sp, #8]
 8003318:	2b66      	cmp	r3, #102	; 0x66
 800331a:	d125      	bne.n	8003368 <_vfprintf_r+0x7a0>
 800331c:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800331e:	2b00      	cmp	r3, #0
 8003320:	dd1a      	ble.n	8003358 <_vfprintf_r+0x790>
 8003322:	f1ba 0f00 	cmp.w	sl, #0
 8003326:	d101      	bne.n	800332c <_vfprintf_r+0x764>
 8003328:	07ee      	lsls	r6, r5, #31
 800332a:	d502      	bpl.n	8003332 <_vfprintf_r+0x76a>
 800332c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800332e:	4413      	add	r3, r2
 8003330:	4453      	add	r3, sl
 8003332:	9a19      	ldr	r2, [sp, #100]	; 0x64
 8003334:	9208      	str	r2, [sp, #32]
 8003336:	469a      	mov	sl, r3
 8003338:	e738      	b.n	80031ac <_vfprintf_r+0x5e4>
 800333a:	460a      	mov	r2, r1
 800333c:	e70d      	b.n	800315a <_vfprintf_r+0x592>
 800333e:	f812 1b01 	ldrb.w	r1, [r2], #1
 8003342:	f803 1b01 	strb.w	r1, [r3], #1
 8003346:	e71d      	b.n	8003184 <_vfprintf_r+0x5bc>
 8003348:	2230      	movs	r2, #48	; 0x30
 800334a:	4413      	add	r3, r2
 800334c:	f88d 206e 	strb.w	r2, [sp, #110]	; 0x6e
 8003350:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
 8003354:	a91c      	add	r1, sp, #112	; 0x70
 8003356:	e719      	b.n	800318c <_vfprintf_r+0x5c4>
 8003358:	f1ba 0f00 	cmp.w	sl, #0
 800335c:	d101      	bne.n	8003362 <_vfprintf_r+0x79a>
 800335e:	07ed      	lsls	r5, r5, #31
 8003360:	d515      	bpl.n	800338e <_vfprintf_r+0x7c6>
 8003362:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003364:	3301      	adds	r3, #1
 8003366:	e7e3      	b.n	8003330 <_vfprintf_r+0x768>
 8003368:	9a19      	ldr	r2, [sp, #100]	; 0x64
 800336a:	9b03      	ldr	r3, [sp, #12]
 800336c:	429a      	cmp	r2, r3
 800336e:	db06      	blt.n	800337e <_vfprintf_r+0x7b6>
 8003370:	07e8      	lsls	r0, r5, #31
 8003372:	d50e      	bpl.n	8003392 <_vfprintf_r+0x7ca>
 8003374:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003376:	4413      	add	r3, r2
 8003378:	2267      	movs	r2, #103	; 0x67
 800337a:	9202      	str	r2, [sp, #8]
 800337c:	e7d9      	b.n	8003332 <_vfprintf_r+0x76a>
 800337e:	9b03      	ldr	r3, [sp, #12]
 8003380:	9909      	ldr	r1, [sp, #36]	; 0x24
 8003382:	2a00      	cmp	r2, #0
 8003384:	440b      	add	r3, r1
 8003386:	dcf7      	bgt.n	8003378 <_vfprintf_r+0x7b0>
 8003388:	f1c2 0201 	rsb	r2, r2, #1
 800338c:	e7f3      	b.n	8003376 <_vfprintf_r+0x7ae>
 800338e:	2301      	movs	r3, #1
 8003390:	e7cf      	b.n	8003332 <_vfprintf_r+0x76a>
 8003392:	4613      	mov	r3, r2
 8003394:	e7f0      	b.n	8003378 <_vfprintf_r+0x7b0>
 8003396:	b10b      	cbz	r3, 800339c <_vfprintf_r+0x7d4>
 8003398:	f88d 205f 	strb.w	r2, [sp, #95]	; 0x5f
 800339c:	f015 0f20 	tst.w	r5, #32
 80033a0:	f107 0304 	add.w	r3, r7, #4
 80033a4:	d008      	beq.n	80033b8 <_vfprintf_r+0x7f0>
 80033a6:	990a      	ldr	r1, [sp, #40]	; 0x28
 80033a8:	683a      	ldr	r2, [r7, #0]
 80033aa:	17ce      	asrs	r6, r1, #31
 80033ac:	4608      	mov	r0, r1
 80033ae:	4631      	mov	r1, r6
 80033b0:	e9c2 0100 	strd	r0, r1, [r2]
 80033b4:	461f      	mov	r7, r3
 80033b6:	e494      	b.n	8002ce2 <_vfprintf_r+0x11a>
 80033b8:	06e9      	lsls	r1, r5, #27
 80033ba:	d503      	bpl.n	80033c4 <_vfprintf_r+0x7fc>
 80033bc:	683a      	ldr	r2, [r7, #0]
 80033be:	990a      	ldr	r1, [sp, #40]	; 0x28
 80033c0:	6011      	str	r1, [r2, #0]
 80033c2:	e7f7      	b.n	80033b4 <_vfprintf_r+0x7ec>
 80033c4:	066a      	lsls	r2, r5, #25
 80033c6:	d5f9      	bpl.n	80033bc <_vfprintf_r+0x7f4>
 80033c8:	683a      	ldr	r2, [r7, #0]
 80033ca:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 80033ce:	8011      	strh	r1, [r2, #0]
 80033d0:	e7f0      	b.n	80033b4 <_vfprintf_r+0x7ec>
 80033d2:	f045 0510 	orr.w	r5, r5, #16
 80033d6:	f015 0320 	ands.w	r3, r5, #32
 80033da:	d022      	beq.n	8003422 <_vfprintf_r+0x85a>
 80033dc:	3707      	adds	r7, #7
 80033de:	f027 0707 	bic.w	r7, r7, #7
 80033e2:	f107 0308 	add.w	r3, r7, #8
 80033e6:	e9d7 6700 	ldrd	r6, r7, [r7]
 80033ea:	9304      	str	r3, [sp, #16]
 80033ec:	2300      	movs	r3, #0
 80033ee:	2200      	movs	r2, #0
 80033f0:	f88d 205f 	strb.w	r2, [sp, #95]	; 0x5f
 80033f4:	f1ba 3fff 	cmp.w	sl, #4294967295
 80033f8:	f000 83e8 	beq.w	8003bcc <_vfprintf_r+0x1004>
 80033fc:	f025 0280 	bic.w	r2, r5, #128	; 0x80
 8003400:	9208      	str	r2, [sp, #32]
 8003402:	ea56 0207 	orrs.w	r2, r6, r7
 8003406:	f040 83e6 	bne.w	8003bd6 <_vfprintf_r+0x100e>
 800340a:	f1ba 0f00 	cmp.w	sl, #0
 800340e:	f000 80a9 	beq.w	8003564 <_vfprintf_r+0x99c>
 8003412:	2b01      	cmp	r3, #1
 8003414:	d075      	beq.n	8003502 <_vfprintf_r+0x93a>
 8003416:	2b02      	cmp	r3, #2
 8003418:	f000 8090 	beq.w	800353c <_vfprintf_r+0x974>
 800341c:	2600      	movs	r6, #0
 800341e:	2700      	movs	r7, #0
 8003420:	e3df      	b.n	8003be2 <_vfprintf_r+0x101a>
 8003422:	1d3a      	adds	r2, r7, #4
 8003424:	f015 0110 	ands.w	r1, r5, #16
 8003428:	9204      	str	r2, [sp, #16]
 800342a:	d002      	beq.n	8003432 <_vfprintf_r+0x86a>
 800342c:	683e      	ldr	r6, [r7, #0]
 800342e:	2700      	movs	r7, #0
 8003430:	e7dd      	b.n	80033ee <_vfprintf_r+0x826>
 8003432:	f015 0340 	ands.w	r3, r5, #64	; 0x40
 8003436:	d0f9      	beq.n	800342c <_vfprintf_r+0x864>
 8003438:	883e      	ldrh	r6, [r7, #0]
 800343a:	2700      	movs	r7, #0
 800343c:	e7d6      	b.n	80033ec <_vfprintf_r+0x824>
 800343e:	1d3b      	adds	r3, r7, #4
 8003440:	9304      	str	r3, [sp, #16]
 8003442:	2330      	movs	r3, #48	; 0x30
 8003444:	2278      	movs	r2, #120	; 0x78
 8003446:	f88d 3060 	strb.w	r3, [sp, #96]	; 0x60
 800344a:	4b14      	ldr	r3, [pc, #80]	; (800349c <_vfprintf_r+0x8d4>)
 800344c:	683e      	ldr	r6, [r7, #0]
 800344e:	9311      	str	r3, [sp, #68]	; 0x44
 8003450:	2700      	movs	r7, #0
 8003452:	f045 0502 	orr.w	r5, r5, #2
 8003456:	f88d 2061 	strb.w	r2, [sp, #97]	; 0x61
 800345a:	2302      	movs	r3, #2
 800345c:	9202      	str	r2, [sp, #8]
 800345e:	e7c6      	b.n	80033ee <_vfprintf_r+0x826>
 8003460:	1d3b      	adds	r3, r7, #4
 8003462:	2600      	movs	r6, #0
 8003464:	f1ba 3fff 	cmp.w	sl, #4294967295
 8003468:	9304      	str	r3, [sp, #16]
 800346a:	f8d7 9000 	ldr.w	r9, [r7]
 800346e:	f88d 605f 	strb.w	r6, [sp, #95]	; 0x5f
 8003472:	d00a      	beq.n	800348a <_vfprintf_r+0x8c2>
 8003474:	4652      	mov	r2, sl
 8003476:	4631      	mov	r1, r6
 8003478:	4648      	mov	r0, r9
 800347a:	f7fc feb1 	bl	80001e0 <memchr>
 800347e:	2800      	cmp	r0, #0
 8003480:	f000 808c 	beq.w	800359c <_vfprintf_r+0x9d4>
 8003484:	eba0 0a09 	sub.w	sl, r0, r9
 8003488:	e5cb      	b.n	8003022 <_vfprintf_r+0x45a>
 800348a:	4648      	mov	r0, r9
 800348c:	f7fc fea0 	bl	80001d0 <strlen>
 8003490:	4682      	mov	sl, r0
 8003492:	e5c6      	b.n	8003022 <_vfprintf_r+0x45a>
 8003494:	08007fd4 	.word	0x08007fd4
 8003498:	08007fe4 	.word	0x08007fe4
 800349c:	08007fc1 	.word	0x08007fc1
 80034a0:	f045 0510 	orr.w	r5, r5, #16
 80034a4:	06ae      	lsls	r6, r5, #26
 80034a6:	d509      	bpl.n	80034bc <_vfprintf_r+0x8f4>
 80034a8:	3707      	adds	r7, #7
 80034aa:	f027 0707 	bic.w	r7, r7, #7
 80034ae:	f107 0308 	add.w	r3, r7, #8
 80034b2:	e9d7 6700 	ldrd	r6, r7, [r7]
 80034b6:	9304      	str	r3, [sp, #16]
 80034b8:	2301      	movs	r3, #1
 80034ba:	e798      	b.n	80033ee <_vfprintf_r+0x826>
 80034bc:	1d3b      	adds	r3, r7, #4
 80034be:	f015 0f10 	tst.w	r5, #16
 80034c2:	9304      	str	r3, [sp, #16]
 80034c4:	d001      	beq.n	80034ca <_vfprintf_r+0x902>
 80034c6:	683e      	ldr	r6, [r7, #0]
 80034c8:	e002      	b.n	80034d0 <_vfprintf_r+0x908>
 80034ca:	0668      	lsls	r0, r5, #25
 80034cc:	d5fb      	bpl.n	80034c6 <_vfprintf_r+0x8fe>
 80034ce:	883e      	ldrh	r6, [r7, #0]
 80034d0:	2700      	movs	r7, #0
 80034d2:	e7f1      	b.n	80034b8 <_vfprintf_r+0x8f0>
 80034d4:	b10b      	cbz	r3, 80034da <_vfprintf_r+0x912>
 80034d6:	f88d 205f 	strb.w	r2, [sp, #95]	; 0x5f
 80034da:	4ba2      	ldr	r3, [pc, #648]	; (8003764 <_vfprintf_r+0xb9c>)
 80034dc:	e4ca      	b.n	8002e74 <_vfprintf_r+0x2ac>
 80034de:	1d3b      	adds	r3, r7, #4
 80034e0:	f015 0f10 	tst.w	r5, #16
 80034e4:	9304      	str	r3, [sp, #16]
 80034e6:	d001      	beq.n	80034ec <_vfprintf_r+0x924>
 80034e8:	683e      	ldr	r6, [r7, #0]
 80034ea:	e002      	b.n	80034f2 <_vfprintf_r+0x92a>
 80034ec:	066a      	lsls	r2, r5, #25
 80034ee:	d5fb      	bpl.n	80034e8 <_vfprintf_r+0x920>
 80034f0:	883e      	ldrh	r6, [r7, #0]
 80034f2:	2700      	movs	r7, #0
 80034f4:	e4ca      	b.n	8002e8c <_vfprintf_r+0x2c4>
 80034f6:	464b      	mov	r3, r9
 80034f8:	e374      	b.n	8003be4 <_vfprintf_r+0x101c>
 80034fa:	2f00      	cmp	r7, #0
 80034fc:	bf08      	it	eq
 80034fe:	2e0a      	cmpeq	r6, #10
 8003500:	d205      	bcs.n	800350e <_vfprintf_r+0x946>
 8003502:	f10d 09f0 	add.w	r9, sp, #240	; 0xf0
 8003506:	3630      	adds	r6, #48	; 0x30
 8003508:	f809 6d41 	strb.w	r6, [r9, #-65]!
 800350c:	e385      	b.n	8003c1a <_vfprintf_r+0x1052>
 800350e:	f10d 09b0 	add.w	r9, sp, #176	; 0xb0
 8003512:	4630      	mov	r0, r6
 8003514:	4639      	mov	r1, r7
 8003516:	220a      	movs	r2, #10
 8003518:	2300      	movs	r3, #0
 800351a:	f7fd fb91 	bl	8000c40 <__aeabi_uldivmod>
 800351e:	3230      	adds	r2, #48	; 0x30
 8003520:	f809 2d01 	strb.w	r2, [r9, #-1]!
 8003524:	2300      	movs	r3, #0
 8003526:	4630      	mov	r0, r6
 8003528:	4639      	mov	r1, r7
 800352a:	220a      	movs	r2, #10
 800352c:	f7fd fb88 	bl	8000c40 <__aeabi_uldivmod>
 8003530:	4606      	mov	r6, r0
 8003532:	460f      	mov	r7, r1
 8003534:	ea56 0307 	orrs.w	r3, r6, r7
 8003538:	d1eb      	bne.n	8003512 <_vfprintf_r+0x94a>
 800353a:	e36e      	b.n	8003c1a <_vfprintf_r+0x1052>
 800353c:	2600      	movs	r6, #0
 800353e:	2700      	movs	r7, #0
 8003540:	f10d 09b0 	add.w	r9, sp, #176	; 0xb0
 8003544:	f006 030f 	and.w	r3, r6, #15
 8003548:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800354a:	5cd3      	ldrb	r3, [r2, r3]
 800354c:	f809 3d01 	strb.w	r3, [r9, #-1]!
 8003550:	0933      	lsrs	r3, r6, #4
 8003552:	ea43 7307 	orr.w	r3, r3, r7, lsl #28
 8003556:	093a      	lsrs	r2, r7, #4
 8003558:	461e      	mov	r6, r3
 800355a:	4617      	mov	r7, r2
 800355c:	ea56 0307 	orrs.w	r3, r6, r7
 8003560:	d1f0      	bne.n	8003544 <_vfprintf_r+0x97c>
 8003562:	e35a      	b.n	8003c1a <_vfprintf_r+0x1052>
 8003564:	b93b      	cbnz	r3, 8003576 <_vfprintf_r+0x9ae>
 8003566:	07e8      	lsls	r0, r5, #31
 8003568:	d505      	bpl.n	8003576 <_vfprintf_r+0x9ae>
 800356a:	f10d 09f0 	add.w	r9, sp, #240	; 0xf0
 800356e:	2330      	movs	r3, #48	; 0x30
 8003570:	f809 3d41 	strb.w	r3, [r9, #-65]!
 8003574:	e351      	b.n	8003c1a <_vfprintf_r+0x1052>
 8003576:	f10d 09b0 	add.w	r9, sp, #176	; 0xb0
 800357a:	e34e      	b.n	8003c1a <_vfprintf_r+0x1052>
 800357c:	b10b      	cbz	r3, 8003582 <_vfprintf_r+0x9ba>
 800357e:	f88d 205f 	strb.w	r2, [sp, #95]	; 0x5f
 8003582:	9b02      	ldr	r3, [sp, #8]
 8003584:	2b00      	cmp	r3, #0
 8003586:	f000 8302 	beq.w	8003b8e <_vfprintf_r+0xfc6>
 800358a:	f89d 3008 	ldrb.w	r3, [sp, #8]
 800358e:	f88d 3088 	strb.w	r3, [sp, #136]	; 0x88
 8003592:	2600      	movs	r6, #0
 8003594:	f88d 605f 	strb.w	r6, [sp, #95]	; 0x5f
 8003598:	9704      	str	r7, [sp, #16]
 800359a:	e4e9      	b.n	8002f70 <_vfprintf_r+0x3a8>
 800359c:	4606      	mov	r6, r0
 800359e:	e540      	b.n	8003022 <_vfprintf_r+0x45a>
 80035a0:	2310      	movs	r3, #16
 80035a2:	6063      	str	r3, [r4, #4]
 80035a4:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80035a6:	3310      	adds	r3, #16
 80035a8:	9321      	str	r3, [sp, #132]	; 0x84
 80035aa:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80035ac:	3301      	adds	r3, #1
 80035ae:	2b07      	cmp	r3, #7
 80035b0:	9320      	str	r3, [sp, #128]	; 0x80
 80035b2:	dc02      	bgt.n	80035ba <_vfprintf_r+0x9f2>
 80035b4:	3408      	adds	r4, #8
 80035b6:	3f10      	subs	r7, #16
 80035b8:	e61a      	b.n	80031f0 <_vfprintf_r+0x628>
 80035ba:	aa1f      	add	r2, sp, #124	; 0x7c
 80035bc:	4641      	mov	r1, r8
 80035be:	4658      	mov	r0, fp
 80035c0:	f002 fddd 	bl	800617e <__sprint_r>
 80035c4:	2800      	cmp	r0, #0
 80035c6:	f040 82ba 	bne.w	8003b3e <_vfprintf_r+0xf76>
 80035ca:	ac2c      	add	r4, sp, #176	; 0xb0
 80035cc:	e7f3      	b.n	80035b6 <_vfprintf_r+0x9ee>
 80035ce:	aa1f      	add	r2, sp, #124	; 0x7c
 80035d0:	4641      	mov	r1, r8
 80035d2:	4658      	mov	r0, fp
 80035d4:	f002 fdd3 	bl	800617e <__sprint_r>
 80035d8:	2800      	cmp	r0, #0
 80035da:	f040 82b0 	bne.w	8003b3e <_vfprintf_r+0xf76>
 80035de:	ac2c      	add	r4, sp, #176	; 0xb0
 80035e0:	e616      	b.n	8003210 <_vfprintf_r+0x648>
 80035e2:	aa1f      	add	r2, sp, #124	; 0x7c
 80035e4:	4641      	mov	r1, r8
 80035e6:	4658      	mov	r0, fp
 80035e8:	f002 fdc9 	bl	800617e <__sprint_r>
 80035ec:	2800      	cmp	r0, #0
 80035ee:	f040 82a6 	bne.w	8003b3e <_vfprintf_r+0xf76>
 80035f2:	ac2c      	add	r4, sp, #176	; 0xb0
 80035f4:	e61e      	b.n	8003234 <_vfprintf_r+0x66c>
 80035f6:	aa1f      	add	r2, sp, #124	; 0x7c
 80035f8:	4641      	mov	r1, r8
 80035fa:	4658      	mov	r0, fp
 80035fc:	f002 fdbf 	bl	800617e <__sprint_r>
 8003600:	2800      	cmp	r0, #0
 8003602:	f040 829c 	bne.w	8003b3e <_vfprintf_r+0xf76>
 8003606:	ac2c      	add	r4, sp, #176	; 0xb0
 8003608:	e624      	b.n	8003254 <_vfprintf_r+0x68c>
 800360a:	2210      	movs	r2, #16
 800360c:	6062      	str	r2, [r4, #4]
 800360e:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8003610:	3210      	adds	r2, #16
 8003612:	9221      	str	r2, [sp, #132]	; 0x84
 8003614:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8003616:	3201      	adds	r2, #1
 8003618:	2a07      	cmp	r2, #7
 800361a:	9220      	str	r2, [sp, #128]	; 0x80
 800361c:	dc02      	bgt.n	8003624 <_vfprintf_r+0xa5c>
 800361e:	3408      	adds	r4, #8
 8003620:	3f10      	subs	r7, #16
 8003622:	e620      	b.n	8003266 <_vfprintf_r+0x69e>
 8003624:	aa1f      	add	r2, sp, #124	; 0x7c
 8003626:	4641      	mov	r1, r8
 8003628:	4658      	mov	r0, fp
 800362a:	9314      	str	r3, [sp, #80]	; 0x50
 800362c:	f002 fda7 	bl	800617e <__sprint_r>
 8003630:	2800      	cmp	r0, #0
 8003632:	f040 8284 	bne.w	8003b3e <_vfprintf_r+0xf76>
 8003636:	ac2c      	add	r4, sp, #176	; 0xb0
 8003638:	9b14      	ldr	r3, [sp, #80]	; 0x50
 800363a:	e7f1      	b.n	8003620 <_vfprintf_r+0xa58>
 800363c:	aa1f      	add	r2, sp, #124	; 0x7c
 800363e:	4641      	mov	r1, r8
 8003640:	4658      	mov	r0, fp
 8003642:	f002 fd9c 	bl	800617e <__sprint_r>
 8003646:	2800      	cmp	r0, #0
 8003648:	f040 8279 	bne.w	8003b3e <_vfprintf_r+0xf76>
 800364c:	ac2c      	add	r4, sp, #176	; 0xb0
 800364e:	e619      	b.n	8003284 <_vfprintf_r+0x6bc>
 8003650:	2310      	movs	r3, #16
 8003652:	6063      	str	r3, [r4, #4]
 8003654:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8003656:	3310      	adds	r3, #16
 8003658:	9321      	str	r3, [sp, #132]	; 0x84
 800365a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 800365c:	3301      	adds	r3, #1
 800365e:	2b07      	cmp	r3, #7
 8003660:	9320      	str	r3, [sp, #128]	; 0x80
 8003662:	dc02      	bgt.n	800366a <_vfprintf_r+0xaa2>
 8003664:	3408      	adds	r4, #8
 8003666:	3e10      	subs	r6, #16
 8003668:	e611      	b.n	800328e <_vfprintf_r+0x6c6>
 800366a:	aa1f      	add	r2, sp, #124	; 0x7c
 800366c:	4641      	mov	r1, r8
 800366e:	4658      	mov	r0, fp
 8003670:	f002 fd85 	bl	800617e <__sprint_r>
 8003674:	2800      	cmp	r0, #0
 8003676:	f040 8262 	bne.w	8003b3e <_vfprintf_r+0xf76>
 800367a:	ac2c      	add	r4, sp, #176	; 0xb0
 800367c:	e7f3      	b.n	8003666 <_vfprintf_r+0xa9e>
 800367e:	aa1f      	add	r2, sp, #124	; 0x7c
 8003680:	4641      	mov	r1, r8
 8003682:	4658      	mov	r0, fp
 8003684:	f002 fd7b 	bl	800617e <__sprint_r>
 8003688:	2800      	cmp	r0, #0
 800368a:	f040 8258 	bne.w	8003b3e <_vfprintf_r+0xf76>
 800368e:	ac2c      	add	r4, sp, #176	; 0xb0
 8003690:	e60c      	b.n	80032ac <_vfprintf_r+0x6e4>
 8003692:	9b02      	ldr	r3, [sp, #8]
 8003694:	2b65      	cmp	r3, #101	; 0x65
 8003696:	f340 81ad 	ble.w	80039f4 <_vfprintf_r+0xe2c>
 800369a:	2200      	movs	r2, #0
 800369c:	2300      	movs	r3, #0
 800369e:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 80036a2:	f7fd fa0d 	bl	8000ac0 <__aeabi_dcmpeq>
 80036a6:	2800      	cmp	r0, #0
 80036a8:	d062      	beq.n	8003770 <_vfprintf_r+0xba8>
 80036aa:	4b2f      	ldr	r3, [pc, #188]	; (8003768 <_vfprintf_r+0xba0>)
 80036ac:	6023      	str	r3, [r4, #0]
 80036ae:	2301      	movs	r3, #1
 80036b0:	6063      	str	r3, [r4, #4]
 80036b2:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80036b4:	3301      	adds	r3, #1
 80036b6:	9321      	str	r3, [sp, #132]	; 0x84
 80036b8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80036ba:	3301      	adds	r3, #1
 80036bc:	2b07      	cmp	r3, #7
 80036be:	9320      	str	r3, [sp, #128]	; 0x80
 80036c0:	dc25      	bgt.n	800370e <_vfprintf_r+0xb46>
 80036c2:	3408      	adds	r4, #8
 80036c4:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80036c6:	9a03      	ldr	r2, [sp, #12]
 80036c8:	4293      	cmp	r3, r2
 80036ca:	db02      	blt.n	80036d2 <_vfprintf_r+0xb0a>
 80036cc:	07ea      	lsls	r2, r5, #31
 80036ce:	f57f ae04 	bpl.w	80032da <_vfprintf_r+0x712>
 80036d2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80036d4:	6023      	str	r3, [r4, #0]
 80036d6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80036d8:	6063      	str	r3, [r4, #4]
 80036da:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80036dc:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80036de:	4413      	add	r3, r2
 80036e0:	9321      	str	r3, [sp, #132]	; 0x84
 80036e2:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80036e4:	3301      	adds	r3, #1
 80036e6:	2b07      	cmp	r3, #7
 80036e8:	9320      	str	r3, [sp, #128]	; 0x80
 80036ea:	dc1a      	bgt.n	8003722 <_vfprintf_r+0xb5a>
 80036ec:	3408      	adds	r4, #8
 80036ee:	9b03      	ldr	r3, [sp, #12]
 80036f0:	1e5e      	subs	r6, r3, #1
 80036f2:	2e00      	cmp	r6, #0
 80036f4:	f77f adf1 	ble.w	80032da <_vfprintf_r+0x712>
 80036f8:	4f1c      	ldr	r7, [pc, #112]	; (800376c <_vfprintf_r+0xba4>)
 80036fa:	f04f 0910 	mov.w	r9, #16
 80036fe:	2e10      	cmp	r6, #16
 8003700:	6027      	str	r7, [r4, #0]
 8003702:	dc18      	bgt.n	8003736 <_vfprintf_r+0xb6e>
 8003704:	6066      	str	r6, [r4, #4]
 8003706:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8003708:	441e      	add	r6, r3
 800370a:	9621      	str	r6, [sp, #132]	; 0x84
 800370c:	e5d6      	b.n	80032bc <_vfprintf_r+0x6f4>
 800370e:	aa1f      	add	r2, sp, #124	; 0x7c
 8003710:	4641      	mov	r1, r8
 8003712:	4658      	mov	r0, fp
 8003714:	f002 fd33 	bl	800617e <__sprint_r>
 8003718:	2800      	cmp	r0, #0
 800371a:	f040 8210 	bne.w	8003b3e <_vfprintf_r+0xf76>
 800371e:	ac2c      	add	r4, sp, #176	; 0xb0
 8003720:	e7d0      	b.n	80036c4 <_vfprintf_r+0xafc>
 8003722:	aa1f      	add	r2, sp, #124	; 0x7c
 8003724:	4641      	mov	r1, r8
 8003726:	4658      	mov	r0, fp
 8003728:	f002 fd29 	bl	800617e <__sprint_r>
 800372c:	2800      	cmp	r0, #0
 800372e:	f040 8206 	bne.w	8003b3e <_vfprintf_r+0xf76>
 8003732:	ac2c      	add	r4, sp, #176	; 0xb0
 8003734:	e7db      	b.n	80036ee <_vfprintf_r+0xb26>
 8003736:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8003738:	f8c4 9004 	str.w	r9, [r4, #4]
 800373c:	3310      	adds	r3, #16
 800373e:	9321      	str	r3, [sp, #132]	; 0x84
 8003740:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8003742:	3301      	adds	r3, #1
 8003744:	2b07      	cmp	r3, #7
 8003746:	9320      	str	r3, [sp, #128]	; 0x80
 8003748:	dc02      	bgt.n	8003750 <_vfprintf_r+0xb88>
 800374a:	3408      	adds	r4, #8
 800374c:	3e10      	subs	r6, #16
 800374e:	e7d6      	b.n	80036fe <_vfprintf_r+0xb36>
 8003750:	aa1f      	add	r2, sp, #124	; 0x7c
 8003752:	4641      	mov	r1, r8
 8003754:	4658      	mov	r0, fp
 8003756:	f002 fd12 	bl	800617e <__sprint_r>
 800375a:	2800      	cmp	r0, #0
 800375c:	f040 81ef 	bne.w	8003b3e <_vfprintf_r+0xf76>
 8003760:	ac2c      	add	r4, sp, #176	; 0xb0
 8003762:	e7f3      	b.n	800374c <_vfprintf_r+0xb84>
 8003764:	08007fc1 	.word	0x08007fc1
 8003768:	08007fd2 	.word	0x08007fd2
 800376c:	08007fe4 	.word	0x08007fe4
 8003770:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8003772:	2b00      	cmp	r3, #0
 8003774:	dc7a      	bgt.n	800386c <_vfprintf_r+0xca4>
 8003776:	4b9d      	ldr	r3, [pc, #628]	; (80039ec <_vfprintf_r+0xe24>)
 8003778:	6023      	str	r3, [r4, #0]
 800377a:	2301      	movs	r3, #1
 800377c:	6063      	str	r3, [r4, #4]
 800377e:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8003780:	3301      	adds	r3, #1
 8003782:	9321      	str	r3, [sp, #132]	; 0x84
 8003784:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8003786:	3301      	adds	r3, #1
 8003788:	2b07      	cmp	r3, #7
 800378a:	9320      	str	r3, [sp, #128]	; 0x80
 800378c:	dc44      	bgt.n	8003818 <_vfprintf_r+0xc50>
 800378e:	3408      	adds	r4, #8
 8003790:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8003792:	b923      	cbnz	r3, 800379e <_vfprintf_r+0xbd6>
 8003794:	9b03      	ldr	r3, [sp, #12]
 8003796:	b913      	cbnz	r3, 800379e <_vfprintf_r+0xbd6>
 8003798:	07eb      	lsls	r3, r5, #31
 800379a:	f57f ad9e 	bpl.w	80032da <_vfprintf_r+0x712>
 800379e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80037a0:	6023      	str	r3, [r4, #0]
 80037a2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80037a4:	6063      	str	r3, [r4, #4]
 80037a6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80037a8:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80037aa:	4413      	add	r3, r2
 80037ac:	9321      	str	r3, [sp, #132]	; 0x84
 80037ae:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80037b0:	3301      	adds	r3, #1
 80037b2:	2b07      	cmp	r3, #7
 80037b4:	9320      	str	r3, [sp, #128]	; 0x80
 80037b6:	dc39      	bgt.n	800382c <_vfprintf_r+0xc64>
 80037b8:	f104 0308 	add.w	r3, r4, #8
 80037bc:	9e19      	ldr	r6, [sp, #100]	; 0x64
 80037be:	2e00      	cmp	r6, #0
 80037c0:	da19      	bge.n	80037f6 <_vfprintf_r+0xc2e>
 80037c2:	4f8b      	ldr	r7, [pc, #556]	; (80039f0 <_vfprintf_r+0xe28>)
 80037c4:	4276      	negs	r6, r6
 80037c6:	2410      	movs	r4, #16
 80037c8:	2e10      	cmp	r6, #16
 80037ca:	601f      	str	r7, [r3, #0]
 80037cc:	dc38      	bgt.n	8003840 <_vfprintf_r+0xc78>
 80037ce:	9a21      	ldr	r2, [sp, #132]	; 0x84
 80037d0:	605e      	str	r6, [r3, #4]
 80037d2:	4416      	add	r6, r2
 80037d4:	9a20      	ldr	r2, [sp, #128]	; 0x80
 80037d6:	9621      	str	r6, [sp, #132]	; 0x84
 80037d8:	3201      	adds	r2, #1
 80037da:	2a07      	cmp	r2, #7
 80037dc:	f103 0308 	add.w	r3, r3, #8
 80037e0:	9220      	str	r2, [sp, #128]	; 0x80
 80037e2:	dd08      	ble.n	80037f6 <_vfprintf_r+0xc2e>
 80037e4:	aa1f      	add	r2, sp, #124	; 0x7c
 80037e6:	4641      	mov	r1, r8
 80037e8:	4658      	mov	r0, fp
 80037ea:	f002 fcc8 	bl	800617e <__sprint_r>
 80037ee:	2800      	cmp	r0, #0
 80037f0:	f040 81a5 	bne.w	8003b3e <_vfprintf_r+0xf76>
 80037f4:	ab2c      	add	r3, sp, #176	; 0xb0
 80037f6:	9a03      	ldr	r2, [sp, #12]
 80037f8:	605a      	str	r2, [r3, #4]
 80037fa:	9903      	ldr	r1, [sp, #12]
 80037fc:	9a21      	ldr	r2, [sp, #132]	; 0x84
 80037fe:	f8c3 9000 	str.w	r9, [r3]
 8003802:	440a      	add	r2, r1
 8003804:	9221      	str	r2, [sp, #132]	; 0x84
 8003806:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8003808:	3201      	adds	r2, #1
 800380a:	2a07      	cmp	r2, #7
 800380c:	9220      	str	r2, [sp, #128]	; 0x80
 800380e:	f73f ad5b 	bgt.w	80032c8 <_vfprintf_r+0x700>
 8003812:	f103 0408 	add.w	r4, r3, #8
 8003816:	e560      	b.n	80032da <_vfprintf_r+0x712>
 8003818:	aa1f      	add	r2, sp, #124	; 0x7c
 800381a:	4641      	mov	r1, r8
 800381c:	4658      	mov	r0, fp
 800381e:	f002 fcae 	bl	800617e <__sprint_r>
 8003822:	2800      	cmp	r0, #0
 8003824:	f040 818b 	bne.w	8003b3e <_vfprintf_r+0xf76>
 8003828:	ac2c      	add	r4, sp, #176	; 0xb0
 800382a:	e7b1      	b.n	8003790 <_vfprintf_r+0xbc8>
 800382c:	aa1f      	add	r2, sp, #124	; 0x7c
 800382e:	4641      	mov	r1, r8
 8003830:	4658      	mov	r0, fp
 8003832:	f002 fca4 	bl	800617e <__sprint_r>
 8003836:	2800      	cmp	r0, #0
 8003838:	f040 8181 	bne.w	8003b3e <_vfprintf_r+0xf76>
 800383c:	ab2c      	add	r3, sp, #176	; 0xb0
 800383e:	e7bd      	b.n	80037bc <_vfprintf_r+0xbf4>
 8003840:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8003842:	605c      	str	r4, [r3, #4]
 8003844:	3210      	adds	r2, #16
 8003846:	9221      	str	r2, [sp, #132]	; 0x84
 8003848:	9a20      	ldr	r2, [sp, #128]	; 0x80
 800384a:	3201      	adds	r2, #1
 800384c:	2a07      	cmp	r2, #7
 800384e:	9220      	str	r2, [sp, #128]	; 0x80
 8003850:	dc02      	bgt.n	8003858 <_vfprintf_r+0xc90>
 8003852:	3308      	adds	r3, #8
 8003854:	3e10      	subs	r6, #16
 8003856:	e7b7      	b.n	80037c8 <_vfprintf_r+0xc00>
 8003858:	aa1f      	add	r2, sp, #124	; 0x7c
 800385a:	4641      	mov	r1, r8
 800385c:	4658      	mov	r0, fp
 800385e:	f002 fc8e 	bl	800617e <__sprint_r>
 8003862:	2800      	cmp	r0, #0
 8003864:	f040 816b 	bne.w	8003b3e <_vfprintf_r+0xf76>
 8003868:	ab2c      	add	r3, sp, #176	; 0xb0
 800386a:	e7f3      	b.n	8003854 <_vfprintf_r+0xc8c>
 800386c:	9b08      	ldr	r3, [sp, #32]
 800386e:	9a03      	ldr	r2, [sp, #12]
 8003870:	4293      	cmp	r3, r2
 8003872:	bfa8      	it	ge
 8003874:	4613      	movge	r3, r2
 8003876:	2b00      	cmp	r3, #0
 8003878:	461e      	mov	r6, r3
 800387a:	dd0b      	ble.n	8003894 <_vfprintf_r+0xccc>
 800387c:	6063      	str	r3, [r4, #4]
 800387e:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8003880:	f8c4 9000 	str.w	r9, [r4]
 8003884:	4433      	add	r3, r6
 8003886:	9321      	str	r3, [sp, #132]	; 0x84
 8003888:	9b20      	ldr	r3, [sp, #128]	; 0x80
 800388a:	3301      	adds	r3, #1
 800388c:	2b07      	cmp	r3, #7
 800388e:	9320      	str	r3, [sp, #128]	; 0x80
 8003890:	dc62      	bgt.n	8003958 <_vfprintf_r+0xd90>
 8003892:	3408      	adds	r4, #8
 8003894:	9b08      	ldr	r3, [sp, #32]
 8003896:	2e00      	cmp	r6, #0
 8003898:	bfa8      	it	ge
 800389a:	1b9b      	subge	r3, r3, r6
 800389c:	2b00      	cmp	r3, #0
 800389e:	461e      	mov	r6, r3
 80038a0:	dd0f      	ble.n	80038c2 <_vfprintf_r+0xcfa>
 80038a2:	4f53      	ldr	r7, [pc, #332]	; (80039f0 <_vfprintf_r+0xe28>)
 80038a4:	f04f 0a10 	mov.w	sl, #16
 80038a8:	2e10      	cmp	r6, #16
 80038aa:	6027      	str	r7, [r4, #0]
 80038ac:	dc5e      	bgt.n	800396c <_vfprintf_r+0xda4>
 80038ae:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80038b0:	6066      	str	r6, [r4, #4]
 80038b2:	441e      	add	r6, r3
 80038b4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80038b6:	9621      	str	r6, [sp, #132]	; 0x84
 80038b8:	3301      	adds	r3, #1
 80038ba:	2b07      	cmp	r3, #7
 80038bc:	9320      	str	r3, [sp, #128]	; 0x80
 80038be:	dc6c      	bgt.n	800399a <_vfprintf_r+0xdd2>
 80038c0:	3408      	adds	r4, #8
 80038c2:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80038c4:	9a03      	ldr	r2, [sp, #12]
 80038c6:	4293      	cmp	r3, r2
 80038c8:	db01      	blt.n	80038ce <_vfprintf_r+0xd06>
 80038ca:	07ef      	lsls	r7, r5, #31
 80038cc:	d50d      	bpl.n	80038ea <_vfprintf_r+0xd22>
 80038ce:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80038d0:	6023      	str	r3, [r4, #0]
 80038d2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80038d4:	6063      	str	r3, [r4, #4]
 80038d6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80038d8:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80038da:	4413      	add	r3, r2
 80038dc:	9321      	str	r3, [sp, #132]	; 0x84
 80038de:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80038e0:	3301      	adds	r3, #1
 80038e2:	2b07      	cmp	r3, #7
 80038e4:	9320      	str	r3, [sp, #128]	; 0x80
 80038e6:	dc62      	bgt.n	80039ae <_vfprintf_r+0xde6>
 80038e8:	3408      	adds	r4, #8
 80038ea:	9b03      	ldr	r3, [sp, #12]
 80038ec:	9a08      	ldr	r2, [sp, #32]
 80038ee:	1a9e      	subs	r6, r3, r2
 80038f0:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80038f2:	9a03      	ldr	r2, [sp, #12]
 80038f4:	1ad3      	subs	r3, r2, r3
 80038f6:	429e      	cmp	r6, r3
 80038f8:	bfa8      	it	ge
 80038fa:	461e      	movge	r6, r3
 80038fc:	2e00      	cmp	r6, #0
 80038fe:	dd0c      	ble.n	800391a <_vfprintf_r+0xd52>
 8003900:	9b08      	ldr	r3, [sp, #32]
 8003902:	444b      	add	r3, r9
 8003904:	e884 0048 	stmia.w	r4, {r3, r6}
 8003908:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800390a:	4433      	add	r3, r6
 800390c:	9321      	str	r3, [sp, #132]	; 0x84
 800390e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8003910:	3301      	adds	r3, #1
 8003912:	2b07      	cmp	r3, #7
 8003914:	9320      	str	r3, [sp, #128]	; 0x80
 8003916:	dc54      	bgt.n	80039c2 <_vfprintf_r+0xdfa>
 8003918:	3408      	adds	r4, #8
 800391a:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800391c:	9a03      	ldr	r2, [sp, #12]
 800391e:	2e00      	cmp	r6, #0
 8003920:	eba2 0303 	sub.w	r3, r2, r3
 8003924:	bfac      	ite	ge
 8003926:	1b9e      	subge	r6, r3, r6
 8003928:	461e      	movlt	r6, r3
 800392a:	2e00      	cmp	r6, #0
 800392c:	f77f acd5 	ble.w	80032da <_vfprintf_r+0x712>
 8003930:	4f2f      	ldr	r7, [pc, #188]	; (80039f0 <_vfprintf_r+0xe28>)
 8003932:	f04f 0910 	mov.w	r9, #16
 8003936:	2e10      	cmp	r6, #16
 8003938:	6027      	str	r7, [r4, #0]
 800393a:	f77f aee3 	ble.w	8003704 <_vfprintf_r+0xb3c>
 800393e:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8003940:	f8c4 9004 	str.w	r9, [r4, #4]
 8003944:	3310      	adds	r3, #16
 8003946:	9321      	str	r3, [sp, #132]	; 0x84
 8003948:	9b20      	ldr	r3, [sp, #128]	; 0x80
 800394a:	3301      	adds	r3, #1
 800394c:	2b07      	cmp	r3, #7
 800394e:	9320      	str	r3, [sp, #128]	; 0x80
 8003950:	dc41      	bgt.n	80039d6 <_vfprintf_r+0xe0e>
 8003952:	3408      	adds	r4, #8
 8003954:	3e10      	subs	r6, #16
 8003956:	e7ee      	b.n	8003936 <_vfprintf_r+0xd6e>
 8003958:	aa1f      	add	r2, sp, #124	; 0x7c
 800395a:	4641      	mov	r1, r8
 800395c:	4658      	mov	r0, fp
 800395e:	f002 fc0e 	bl	800617e <__sprint_r>
 8003962:	2800      	cmp	r0, #0
 8003964:	f040 80eb 	bne.w	8003b3e <_vfprintf_r+0xf76>
 8003968:	ac2c      	add	r4, sp, #176	; 0xb0
 800396a:	e793      	b.n	8003894 <_vfprintf_r+0xccc>
 800396c:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800396e:	f8c4 a004 	str.w	sl, [r4, #4]
 8003972:	3310      	adds	r3, #16
 8003974:	9321      	str	r3, [sp, #132]	; 0x84
 8003976:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8003978:	3301      	adds	r3, #1
 800397a:	2b07      	cmp	r3, #7
 800397c:	9320      	str	r3, [sp, #128]	; 0x80
 800397e:	dc02      	bgt.n	8003986 <_vfprintf_r+0xdbe>
 8003980:	3408      	adds	r4, #8
 8003982:	3e10      	subs	r6, #16
 8003984:	e790      	b.n	80038a8 <_vfprintf_r+0xce0>
 8003986:	aa1f      	add	r2, sp, #124	; 0x7c
 8003988:	4641      	mov	r1, r8
 800398a:	4658      	mov	r0, fp
 800398c:	f002 fbf7 	bl	800617e <__sprint_r>
 8003990:	2800      	cmp	r0, #0
 8003992:	f040 80d4 	bne.w	8003b3e <_vfprintf_r+0xf76>
 8003996:	ac2c      	add	r4, sp, #176	; 0xb0
 8003998:	e7f3      	b.n	8003982 <_vfprintf_r+0xdba>
 800399a:	aa1f      	add	r2, sp, #124	; 0x7c
 800399c:	4641      	mov	r1, r8
 800399e:	4658      	mov	r0, fp
 80039a0:	f002 fbed 	bl	800617e <__sprint_r>
 80039a4:	2800      	cmp	r0, #0
 80039a6:	f040 80ca 	bne.w	8003b3e <_vfprintf_r+0xf76>
 80039aa:	ac2c      	add	r4, sp, #176	; 0xb0
 80039ac:	e789      	b.n	80038c2 <_vfprintf_r+0xcfa>
 80039ae:	aa1f      	add	r2, sp, #124	; 0x7c
 80039b0:	4641      	mov	r1, r8
 80039b2:	4658      	mov	r0, fp
 80039b4:	f002 fbe3 	bl	800617e <__sprint_r>
 80039b8:	2800      	cmp	r0, #0
 80039ba:	f040 80c0 	bne.w	8003b3e <_vfprintf_r+0xf76>
 80039be:	ac2c      	add	r4, sp, #176	; 0xb0
 80039c0:	e793      	b.n	80038ea <_vfprintf_r+0xd22>
 80039c2:	aa1f      	add	r2, sp, #124	; 0x7c
 80039c4:	4641      	mov	r1, r8
 80039c6:	4658      	mov	r0, fp
 80039c8:	f002 fbd9 	bl	800617e <__sprint_r>
 80039cc:	2800      	cmp	r0, #0
 80039ce:	f040 80b6 	bne.w	8003b3e <_vfprintf_r+0xf76>
 80039d2:	ac2c      	add	r4, sp, #176	; 0xb0
 80039d4:	e7a1      	b.n	800391a <_vfprintf_r+0xd52>
 80039d6:	aa1f      	add	r2, sp, #124	; 0x7c
 80039d8:	4641      	mov	r1, r8
 80039da:	4658      	mov	r0, fp
 80039dc:	f002 fbcf 	bl	800617e <__sprint_r>
 80039e0:	2800      	cmp	r0, #0
 80039e2:	f040 80ac 	bne.w	8003b3e <_vfprintf_r+0xf76>
 80039e6:	ac2c      	add	r4, sp, #176	; 0xb0
 80039e8:	e7b4      	b.n	8003954 <_vfprintf_r+0xd8c>
 80039ea:	bf00      	nop
 80039ec:	08007fd2 	.word	0x08007fd2
 80039f0:	08007fe4 	.word	0x08007fe4
 80039f4:	9b03      	ldr	r3, [sp, #12]
 80039f6:	2b01      	cmp	r3, #1
 80039f8:	dc01      	bgt.n	80039fe <_vfprintf_r+0xe36>
 80039fa:	07ee      	lsls	r6, r5, #31
 80039fc:	d576      	bpl.n	8003aec <_vfprintf_r+0xf24>
 80039fe:	2301      	movs	r3, #1
 8003a00:	6063      	str	r3, [r4, #4]
 8003a02:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8003a04:	f8c4 9000 	str.w	r9, [r4]
 8003a08:	3301      	adds	r3, #1
 8003a0a:	9321      	str	r3, [sp, #132]	; 0x84
 8003a0c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8003a0e:	3301      	adds	r3, #1
 8003a10:	2b07      	cmp	r3, #7
 8003a12:	9320      	str	r3, [sp, #128]	; 0x80
 8003a14:	dc36      	bgt.n	8003a84 <_vfprintf_r+0xebc>
 8003a16:	3408      	adds	r4, #8
 8003a18:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8003a1a:	6023      	str	r3, [r4, #0]
 8003a1c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003a1e:	6063      	str	r3, [r4, #4]
 8003a20:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8003a22:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8003a24:	4413      	add	r3, r2
 8003a26:	9321      	str	r3, [sp, #132]	; 0x84
 8003a28:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8003a2a:	3301      	adds	r3, #1
 8003a2c:	2b07      	cmp	r3, #7
 8003a2e:	9320      	str	r3, [sp, #128]	; 0x80
 8003a30:	dc31      	bgt.n	8003a96 <_vfprintf_r+0xece>
 8003a32:	3408      	adds	r4, #8
 8003a34:	2300      	movs	r3, #0
 8003a36:	2200      	movs	r2, #0
 8003a38:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8003a3c:	f7fd f840 	bl	8000ac0 <__aeabi_dcmpeq>
 8003a40:	9b03      	ldr	r3, [sp, #12]
 8003a42:	1e5e      	subs	r6, r3, #1
 8003a44:	2800      	cmp	r0, #0
 8003a46:	d12f      	bne.n	8003aa8 <_vfprintf_r+0xee0>
 8003a48:	f109 0301 	add.w	r3, r9, #1
 8003a4c:	e884 0048 	stmia.w	r4, {r3, r6}
 8003a50:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8003a52:	9a03      	ldr	r2, [sp, #12]
 8003a54:	3b01      	subs	r3, #1
 8003a56:	4413      	add	r3, r2
 8003a58:	9321      	str	r3, [sp, #132]	; 0x84
 8003a5a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8003a5c:	3301      	adds	r3, #1
 8003a5e:	2b07      	cmp	r3, #7
 8003a60:	9320      	str	r3, [sp, #128]	; 0x80
 8003a62:	dd4a      	ble.n	8003afa <_vfprintf_r+0xf32>
 8003a64:	aa1f      	add	r2, sp, #124	; 0x7c
 8003a66:	4641      	mov	r1, r8
 8003a68:	4658      	mov	r0, fp
 8003a6a:	f002 fb88 	bl	800617e <__sprint_r>
 8003a6e:	2800      	cmp	r0, #0
 8003a70:	d165      	bne.n	8003b3e <_vfprintf_r+0xf76>
 8003a72:	ac2c      	add	r4, sp, #176	; 0xb0
 8003a74:	ab1b      	add	r3, sp, #108	; 0x6c
 8003a76:	6023      	str	r3, [r4, #0]
 8003a78:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8003a7a:	6063      	str	r3, [r4, #4]
 8003a7c:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8003a7e:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8003a80:	4413      	add	r3, r2
 8003a82:	e41a      	b.n	80032ba <_vfprintf_r+0x6f2>
 8003a84:	aa1f      	add	r2, sp, #124	; 0x7c
 8003a86:	4641      	mov	r1, r8
 8003a88:	4658      	mov	r0, fp
 8003a8a:	f002 fb78 	bl	800617e <__sprint_r>
 8003a8e:	2800      	cmp	r0, #0
 8003a90:	d155      	bne.n	8003b3e <_vfprintf_r+0xf76>
 8003a92:	ac2c      	add	r4, sp, #176	; 0xb0
 8003a94:	e7c0      	b.n	8003a18 <_vfprintf_r+0xe50>
 8003a96:	aa1f      	add	r2, sp, #124	; 0x7c
 8003a98:	4641      	mov	r1, r8
 8003a9a:	4658      	mov	r0, fp
 8003a9c:	f002 fb6f 	bl	800617e <__sprint_r>
 8003aa0:	2800      	cmp	r0, #0
 8003aa2:	d14c      	bne.n	8003b3e <_vfprintf_r+0xf76>
 8003aa4:	ac2c      	add	r4, sp, #176	; 0xb0
 8003aa6:	e7c5      	b.n	8003a34 <_vfprintf_r+0xe6c>
 8003aa8:	2e00      	cmp	r6, #0
 8003aaa:	dde3      	ble.n	8003a74 <_vfprintf_r+0xeac>
 8003aac:	4f60      	ldr	r7, [pc, #384]	; (8003c30 <_vfprintf_r+0x1068>)
 8003aae:	f04f 0910 	mov.w	r9, #16
 8003ab2:	2e10      	cmp	r6, #16
 8003ab4:	6027      	str	r7, [r4, #0]
 8003ab6:	dc04      	bgt.n	8003ac2 <_vfprintf_r+0xefa>
 8003ab8:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8003aba:	6066      	str	r6, [r4, #4]
 8003abc:	441e      	add	r6, r3
 8003abe:	9621      	str	r6, [sp, #132]	; 0x84
 8003ac0:	e7cb      	b.n	8003a5a <_vfprintf_r+0xe92>
 8003ac2:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8003ac4:	f8c4 9004 	str.w	r9, [r4, #4]
 8003ac8:	3310      	adds	r3, #16
 8003aca:	9321      	str	r3, [sp, #132]	; 0x84
 8003acc:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8003ace:	3301      	adds	r3, #1
 8003ad0:	2b07      	cmp	r3, #7
 8003ad2:	9320      	str	r3, [sp, #128]	; 0x80
 8003ad4:	dc02      	bgt.n	8003adc <_vfprintf_r+0xf14>
 8003ad6:	3408      	adds	r4, #8
 8003ad8:	3e10      	subs	r6, #16
 8003ada:	e7ea      	b.n	8003ab2 <_vfprintf_r+0xeea>
 8003adc:	aa1f      	add	r2, sp, #124	; 0x7c
 8003ade:	4641      	mov	r1, r8
 8003ae0:	4658      	mov	r0, fp
 8003ae2:	f002 fb4c 	bl	800617e <__sprint_r>
 8003ae6:	bb50      	cbnz	r0, 8003b3e <_vfprintf_r+0xf76>
 8003ae8:	ac2c      	add	r4, sp, #176	; 0xb0
 8003aea:	e7f5      	b.n	8003ad8 <_vfprintf_r+0xf10>
 8003aec:	2301      	movs	r3, #1
 8003aee:	6063      	str	r3, [r4, #4]
 8003af0:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8003af2:	f8c4 9000 	str.w	r9, [r4]
 8003af6:	3301      	adds	r3, #1
 8003af8:	e7ae      	b.n	8003a58 <_vfprintf_r+0xe90>
 8003afa:	3408      	adds	r4, #8
 8003afc:	e7ba      	b.n	8003a74 <_vfprintf_r+0xeac>
 8003afe:	3408      	adds	r4, #8
 8003b00:	f7ff bbeb 	b.w	80032da <_vfprintf_r+0x712>
 8003b04:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8003b06:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8003b08:	1a9d      	subs	r5, r3, r2
 8003b0a:	2d00      	cmp	r5, #0
 8003b0c:	f77f abe8 	ble.w	80032e0 <_vfprintf_r+0x718>
 8003b10:	2610      	movs	r6, #16
 8003b12:	4b48      	ldr	r3, [pc, #288]	; (8003c34 <_vfprintf_r+0x106c>)
 8003b14:	6023      	str	r3, [r4, #0]
 8003b16:	2d10      	cmp	r5, #16
 8003b18:	dc24      	bgt.n	8003b64 <_vfprintf_r+0xf9c>
 8003b1a:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8003b1c:	6065      	str	r5, [r4, #4]
 8003b1e:	441d      	add	r5, r3
 8003b20:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8003b22:	9521      	str	r5, [sp, #132]	; 0x84
 8003b24:	3301      	adds	r3, #1
 8003b26:	2b07      	cmp	r3, #7
 8003b28:	9320      	str	r3, [sp, #128]	; 0x80
 8003b2a:	f77f abd9 	ble.w	80032e0 <_vfprintf_r+0x718>
 8003b2e:	aa1f      	add	r2, sp, #124	; 0x7c
 8003b30:	4641      	mov	r1, r8
 8003b32:	4658      	mov	r0, fp
 8003b34:	f002 fb23 	bl	800617e <__sprint_r>
 8003b38:	2800      	cmp	r0, #0
 8003b3a:	f43f abd1 	beq.w	80032e0 <_vfprintf_r+0x718>
 8003b3e:	f8d8 3064 	ldr.w	r3, [r8, #100]	; 0x64
 8003b42:	07d9      	lsls	r1, r3, #31
 8003b44:	d407      	bmi.n	8003b56 <_vfprintf_r+0xf8e>
 8003b46:	f8b8 300c 	ldrh.w	r3, [r8, #12]
 8003b4a:	059a      	lsls	r2, r3, #22
 8003b4c:	d403      	bmi.n	8003b56 <_vfprintf_r+0xf8e>
 8003b4e:	f8d8 0058 	ldr.w	r0, [r8, #88]	; 0x58
 8003b52:	f001 fbb4 	bl	80052be <__retarget_lock_release_recursive>
 8003b56:	f8b8 300c 	ldrh.w	r3, [r8, #12]
 8003b5a:	065b      	lsls	r3, r3, #25
 8003b5c:	f57f a8af 	bpl.w	8002cbe <_vfprintf_r+0xf6>
 8003b60:	f7ff b882 	b.w	8002c68 <_vfprintf_r+0xa0>
 8003b64:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8003b66:	6066      	str	r6, [r4, #4]
 8003b68:	3310      	adds	r3, #16
 8003b6a:	9321      	str	r3, [sp, #132]	; 0x84
 8003b6c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8003b6e:	3301      	adds	r3, #1
 8003b70:	2b07      	cmp	r3, #7
 8003b72:	9320      	str	r3, [sp, #128]	; 0x80
 8003b74:	dc02      	bgt.n	8003b7c <_vfprintf_r+0xfb4>
 8003b76:	3408      	adds	r4, #8
 8003b78:	3d10      	subs	r5, #16
 8003b7a:	e7ca      	b.n	8003b12 <_vfprintf_r+0xf4a>
 8003b7c:	aa1f      	add	r2, sp, #124	; 0x7c
 8003b7e:	4641      	mov	r1, r8
 8003b80:	4658      	mov	r0, fp
 8003b82:	f002 fafc 	bl	800617e <__sprint_r>
 8003b86:	2800      	cmp	r0, #0
 8003b88:	d1d9      	bne.n	8003b3e <_vfprintf_r+0xf76>
 8003b8a:	ac2c      	add	r4, sp, #176	; 0xb0
 8003b8c:	e7f4      	b.n	8003b78 <_vfprintf_r+0xfb0>
 8003b8e:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8003b90:	b913      	cbnz	r3, 8003b98 <_vfprintf_r+0xfd0>
 8003b92:	2300      	movs	r3, #0
 8003b94:	9320      	str	r3, [sp, #128]	; 0x80
 8003b96:	e7d2      	b.n	8003b3e <_vfprintf_r+0xf76>
 8003b98:	aa1f      	add	r2, sp, #124	; 0x7c
 8003b9a:	4641      	mov	r1, r8
 8003b9c:	4658      	mov	r0, fp
 8003b9e:	f002 faee 	bl	800617e <__sprint_r>
 8003ba2:	2800      	cmp	r0, #0
 8003ba4:	d0f5      	beq.n	8003b92 <_vfprintf_r+0xfca>
 8003ba6:	e7ca      	b.n	8003b3e <_vfprintf_r+0xf76>
 8003ba8:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8003bac:	4610      	mov	r0, r2
 8003bae:	4619      	mov	r1, r3
 8003bb0:	f7fc ffb8 	bl	8000b24 <__aeabi_dcmpun>
 8003bb4:	2800      	cmp	r0, #0
 8003bb6:	f43f aa36 	beq.w	8003026 <_vfprintf_r+0x45e>
 8003bba:	4b1f      	ldr	r3, [pc, #124]	; (8003c38 <_vfprintf_r+0x1070>)
 8003bbc:	4a1f      	ldr	r2, [pc, #124]	; (8003c3c <_vfprintf_r+0x1074>)
 8003bbe:	f7ff ba26 	b.w	800300e <_vfprintf_r+0x446>
 8003bc2:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8003bc4:	1a1b      	subs	r3, r3, r0
 8003bc6:	9303      	str	r3, [sp, #12]
 8003bc8:	f7ff baa9 	b.w	800311e <_vfprintf_r+0x556>
 8003bcc:	ea56 0207 	orrs.w	r2, r6, r7
 8003bd0:	9508      	str	r5, [sp, #32]
 8003bd2:	f43f ac1e 	beq.w	8003412 <_vfprintf_r+0x84a>
 8003bd6:	2b01      	cmp	r3, #1
 8003bd8:	f43f ac8f 	beq.w	80034fa <_vfprintf_r+0x932>
 8003bdc:	2b02      	cmp	r3, #2
 8003bde:	f43f acaf 	beq.w	8003540 <_vfprintf_r+0x978>
 8003be2:	ab2c      	add	r3, sp, #176	; 0xb0
 8003be4:	08f1      	lsrs	r1, r6, #3
 8003be6:	ea41 7147 	orr.w	r1, r1, r7, lsl #29
 8003bea:	08f8      	lsrs	r0, r7, #3
 8003bec:	f006 0207 	and.w	r2, r6, #7
 8003bf0:	4607      	mov	r7, r0
 8003bf2:	460e      	mov	r6, r1
 8003bf4:	3230      	adds	r2, #48	; 0x30
 8003bf6:	ea56 0107 	orrs.w	r1, r6, r7
 8003bfa:	f103 39ff 	add.w	r9, r3, #4294967295
 8003bfe:	f803 2c01 	strb.w	r2, [r3, #-1]
 8003c02:	f47f ac78 	bne.w	80034f6 <_vfprintf_r+0x92e>
 8003c06:	9908      	ldr	r1, [sp, #32]
 8003c08:	07cd      	lsls	r5, r1, #31
 8003c0a:	d506      	bpl.n	8003c1a <_vfprintf_r+0x1052>
 8003c0c:	2a30      	cmp	r2, #48	; 0x30
 8003c0e:	d004      	beq.n	8003c1a <_vfprintf_r+0x1052>
 8003c10:	2230      	movs	r2, #48	; 0x30
 8003c12:	f809 2c01 	strb.w	r2, [r9, #-1]
 8003c16:	f1a3 0902 	sub.w	r9, r3, #2
 8003c1a:	4656      	mov	r6, sl
 8003c1c:	2300      	movs	r3, #0
 8003c1e:	f10d 0ab0 	add.w	sl, sp, #176	; 0xb0
 8003c22:	9d08      	ldr	r5, [sp, #32]
 8003c24:	9308      	str	r3, [sp, #32]
 8003c26:	ebaa 0a09 	sub.w	sl, sl, r9
 8003c2a:	f7ff bac6 	b.w	80031ba <_vfprintf_r+0x5f2>
 8003c2e:	bf00      	nop
 8003c30:	08007fe4 	.word	0x08007fe4
 8003c34:	08007fd4 	.word	0x08007fd4
 8003c38:	08007fa8 	.word	0x08007fa8
 8003c3c:	08007fac 	.word	0x08007fac

08003c40 <__sbprintf>:
 8003c40:	b5f0      	push	{r4, r5, r6, r7, lr}
 8003c42:	460c      	mov	r4, r1
 8003c44:	f2ad 4d6c 	subw	sp, sp, #1132	; 0x46c
 8003c48:	461f      	mov	r7, r3
 8003c4a:	8989      	ldrh	r1, [r1, #12]
 8003c4c:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8003c4e:	9319      	str	r3, [sp, #100]	; 0x64
 8003c50:	89e3      	ldrh	r3, [r4, #14]
 8003c52:	f8ad 300e 	strh.w	r3, [sp, #14]
 8003c56:	f021 0102 	bic.w	r1, r1, #2
 8003c5a:	6a23      	ldr	r3, [r4, #32]
 8003c5c:	f8ad 100c 	strh.w	r1, [sp, #12]
 8003c60:	9308      	str	r3, [sp, #32]
 8003c62:	a91a      	add	r1, sp, #104	; 0x68
 8003c64:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8003c66:	930a      	str	r3, [sp, #40]	; 0x28
 8003c68:	4615      	mov	r5, r2
 8003c6a:	2300      	movs	r3, #0
 8003c6c:	4606      	mov	r6, r0
 8003c6e:	9100      	str	r1, [sp, #0]
 8003c70:	9104      	str	r1, [sp, #16]
 8003c72:	a816      	add	r0, sp, #88	; 0x58
 8003c74:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8003c78:	9102      	str	r1, [sp, #8]
 8003c7a:	9105      	str	r1, [sp, #20]
 8003c7c:	9306      	str	r3, [sp, #24]
 8003c7e:	f001 fb1b 	bl	80052b8 <__retarget_lock_init_recursive>
 8003c82:	462a      	mov	r2, r5
 8003c84:	463b      	mov	r3, r7
 8003c86:	4669      	mov	r1, sp
 8003c88:	4630      	mov	r0, r6
 8003c8a:	f7fe ff9d 	bl	8002bc8 <_vfprintf_r>
 8003c8e:	1e05      	subs	r5, r0, #0
 8003c90:	db07      	blt.n	8003ca2 <__sbprintf+0x62>
 8003c92:	4669      	mov	r1, sp
 8003c94:	4630      	mov	r0, r6
 8003c96:	f000 ff6f 	bl	8004b78 <_fflush_r>
 8003c9a:	2800      	cmp	r0, #0
 8003c9c:	bf18      	it	ne
 8003c9e:	f04f 35ff 	movne.w	r5, #4294967295
 8003ca2:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 8003ca6:	9816      	ldr	r0, [sp, #88]	; 0x58
 8003ca8:	065b      	lsls	r3, r3, #25
 8003caa:	bf42      	ittt	mi
 8003cac:	89a3      	ldrhmi	r3, [r4, #12]
 8003cae:	f043 0340 	orrmi.w	r3, r3, #64	; 0x40
 8003cb2:	81a3      	strhmi	r3, [r4, #12]
 8003cb4:	f001 fb01 	bl	80052ba <__retarget_lock_close_recursive>
 8003cb8:	4628      	mov	r0, r5
 8003cba:	f20d 4d6c 	addw	sp, sp, #1132	; 0x46c
 8003cbe:	bdf0      	pop	{r4, r5, r6, r7, pc}

08003cc0 <__swsetup_r>:
 8003cc0:	4b32      	ldr	r3, [pc, #200]	; (8003d8c <__swsetup_r+0xcc>)
 8003cc2:	b570      	push	{r4, r5, r6, lr}
 8003cc4:	681d      	ldr	r5, [r3, #0]
 8003cc6:	4606      	mov	r6, r0
 8003cc8:	460c      	mov	r4, r1
 8003cca:	b125      	cbz	r5, 8003cd6 <__swsetup_r+0x16>
 8003ccc:	69ab      	ldr	r3, [r5, #24]
 8003cce:	b913      	cbnz	r3, 8003cd6 <__swsetup_r+0x16>
 8003cd0:	4628      	mov	r0, r5
 8003cd2:	f000 ffe5 	bl	8004ca0 <__sinit>
 8003cd6:	4b2e      	ldr	r3, [pc, #184]	; (8003d90 <__swsetup_r+0xd0>)
 8003cd8:	429c      	cmp	r4, r3
 8003cda:	d10f      	bne.n	8003cfc <__swsetup_r+0x3c>
 8003cdc:	686c      	ldr	r4, [r5, #4]
 8003cde:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8003ce2:	b29a      	uxth	r2, r3
 8003ce4:	0715      	lsls	r5, r2, #28
 8003ce6:	d42c      	bmi.n	8003d42 <__swsetup_r+0x82>
 8003ce8:	06d0      	lsls	r0, r2, #27
 8003cea:	d411      	bmi.n	8003d10 <__swsetup_r+0x50>
 8003cec:	2209      	movs	r2, #9
 8003cee:	6032      	str	r2, [r6, #0]
 8003cf0:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8003cf4:	81a3      	strh	r3, [r4, #12]
 8003cf6:	f04f 30ff 	mov.w	r0, #4294967295
 8003cfa:	bd70      	pop	{r4, r5, r6, pc}
 8003cfc:	4b25      	ldr	r3, [pc, #148]	; (8003d94 <__swsetup_r+0xd4>)
 8003cfe:	429c      	cmp	r4, r3
 8003d00:	d101      	bne.n	8003d06 <__swsetup_r+0x46>
 8003d02:	68ac      	ldr	r4, [r5, #8]
 8003d04:	e7eb      	b.n	8003cde <__swsetup_r+0x1e>
 8003d06:	4b24      	ldr	r3, [pc, #144]	; (8003d98 <__swsetup_r+0xd8>)
 8003d08:	429c      	cmp	r4, r3
 8003d0a:	bf08      	it	eq
 8003d0c:	68ec      	ldreq	r4, [r5, #12]
 8003d0e:	e7e6      	b.n	8003cde <__swsetup_r+0x1e>
 8003d10:	0751      	lsls	r1, r2, #29
 8003d12:	d512      	bpl.n	8003d3a <__swsetup_r+0x7a>
 8003d14:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8003d16:	b141      	cbz	r1, 8003d2a <__swsetup_r+0x6a>
 8003d18:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8003d1c:	4299      	cmp	r1, r3
 8003d1e:	d002      	beq.n	8003d26 <__swsetup_r+0x66>
 8003d20:	4630      	mov	r0, r6
 8003d22:	f001 f893 	bl	8004e4c <_free_r>
 8003d26:	2300      	movs	r3, #0
 8003d28:	6363      	str	r3, [r4, #52]	; 0x34
 8003d2a:	89a3      	ldrh	r3, [r4, #12]
 8003d2c:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8003d30:	81a3      	strh	r3, [r4, #12]
 8003d32:	2300      	movs	r3, #0
 8003d34:	6063      	str	r3, [r4, #4]
 8003d36:	6923      	ldr	r3, [r4, #16]
 8003d38:	6023      	str	r3, [r4, #0]
 8003d3a:	89a3      	ldrh	r3, [r4, #12]
 8003d3c:	f043 0308 	orr.w	r3, r3, #8
 8003d40:	81a3      	strh	r3, [r4, #12]
 8003d42:	6923      	ldr	r3, [r4, #16]
 8003d44:	b94b      	cbnz	r3, 8003d5a <__swsetup_r+0x9a>
 8003d46:	89a3      	ldrh	r3, [r4, #12]
 8003d48:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8003d4c:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8003d50:	d003      	beq.n	8003d5a <__swsetup_r+0x9a>
 8003d52:	4621      	mov	r1, r4
 8003d54:	4630      	mov	r0, r6
 8003d56:	f001 fadf 	bl	8005318 <__smakebuf_r>
 8003d5a:	89a2      	ldrh	r2, [r4, #12]
 8003d5c:	f012 0301 	ands.w	r3, r2, #1
 8003d60:	d00c      	beq.n	8003d7c <__swsetup_r+0xbc>
 8003d62:	2300      	movs	r3, #0
 8003d64:	60a3      	str	r3, [r4, #8]
 8003d66:	6963      	ldr	r3, [r4, #20]
 8003d68:	425b      	negs	r3, r3
 8003d6a:	61a3      	str	r3, [r4, #24]
 8003d6c:	6923      	ldr	r3, [r4, #16]
 8003d6e:	b953      	cbnz	r3, 8003d86 <__swsetup_r+0xc6>
 8003d70:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8003d74:	f013 0080 	ands.w	r0, r3, #128	; 0x80
 8003d78:	d1ba      	bne.n	8003cf0 <__swsetup_r+0x30>
 8003d7a:	bd70      	pop	{r4, r5, r6, pc}
 8003d7c:	0792      	lsls	r2, r2, #30
 8003d7e:	bf58      	it	pl
 8003d80:	6963      	ldrpl	r3, [r4, #20]
 8003d82:	60a3      	str	r3, [r4, #8]
 8003d84:	e7f2      	b.n	8003d6c <__swsetup_r+0xac>
 8003d86:	2000      	movs	r0, #0
 8003d88:	e7f7      	b.n	8003d7a <__swsetup_r+0xba>
 8003d8a:	bf00      	nop
 8003d8c:	20000004 	.word	0x20000004
 8003d90:	08008024 	.word	0x08008024
 8003d94:	08008044 	.word	0x08008044
 8003d98:	08008004 	.word	0x08008004

08003d9c <quorem>:
 8003d9c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003da0:	6903      	ldr	r3, [r0, #16]
 8003da2:	690c      	ldr	r4, [r1, #16]
 8003da4:	429c      	cmp	r4, r3
 8003da6:	4680      	mov	r8, r0
 8003da8:	f300 8082 	bgt.w	8003eb0 <quorem+0x114>
 8003dac:	3c01      	subs	r4, #1
 8003dae:	f101 0714 	add.w	r7, r1, #20
 8003db2:	ea4f 0e84 	mov.w	lr, r4, lsl #2
 8003db6:	f100 0614 	add.w	r6, r0, #20
 8003dba:	f857 5024 	ldr.w	r5, [r7, r4, lsl #2]
 8003dbe:	f856 0024 	ldr.w	r0, [r6, r4, lsl #2]
 8003dc2:	eb06 030e 	add.w	r3, r6, lr
 8003dc6:	3501      	adds	r5, #1
 8003dc8:	eb07 090e 	add.w	r9, r7, lr
 8003dcc:	9301      	str	r3, [sp, #4]
 8003dce:	fbb0 f5f5 	udiv	r5, r0, r5
 8003dd2:	b395      	cbz	r5, 8003e3a <quorem+0x9e>
 8003dd4:	f04f 0a00 	mov.w	sl, #0
 8003dd8:	4638      	mov	r0, r7
 8003dda:	46b4      	mov	ip, r6
 8003ddc:	46d3      	mov	fp, sl
 8003dde:	f850 2b04 	ldr.w	r2, [r0], #4
 8003de2:	b293      	uxth	r3, r2
 8003de4:	fb05 a303 	mla	r3, r5, r3, sl
 8003de8:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 8003dec:	b29b      	uxth	r3, r3
 8003dee:	ebab 0303 	sub.w	r3, fp, r3
 8003df2:	0c12      	lsrs	r2, r2, #16
 8003df4:	f8bc b000 	ldrh.w	fp, [ip]
 8003df8:	fb05 a202 	mla	r2, r5, r2, sl
 8003dfc:	fa13 f38b 	uxtah	r3, r3, fp
 8003e00:	ea4f 4a12 	mov.w	sl, r2, lsr #16
 8003e04:	fa1f fb82 	uxth.w	fp, r2
 8003e08:	f8dc 2000 	ldr.w	r2, [ip]
 8003e0c:	ebcb 4212 	rsb	r2, fp, r2, lsr #16
 8003e10:	eb02 4223 	add.w	r2, r2, r3, asr #16
 8003e14:	b29b      	uxth	r3, r3
 8003e16:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8003e1a:	4581      	cmp	r9, r0
 8003e1c:	ea4f 4b22 	mov.w	fp, r2, asr #16
 8003e20:	f84c 3b04 	str.w	r3, [ip], #4
 8003e24:	d2db      	bcs.n	8003dde <quorem+0x42>
 8003e26:	f856 300e 	ldr.w	r3, [r6, lr]
 8003e2a:	b933      	cbnz	r3, 8003e3a <quorem+0x9e>
 8003e2c:	9b01      	ldr	r3, [sp, #4]
 8003e2e:	3b04      	subs	r3, #4
 8003e30:	429e      	cmp	r6, r3
 8003e32:	461a      	mov	r2, r3
 8003e34:	d330      	bcc.n	8003e98 <quorem+0xfc>
 8003e36:	f8c8 4010 	str.w	r4, [r8, #16]
 8003e3a:	4640      	mov	r0, r8
 8003e3c:	f001 ff05 	bl	8005c4a <__mcmp>
 8003e40:	2800      	cmp	r0, #0
 8003e42:	db25      	blt.n	8003e90 <quorem+0xf4>
 8003e44:	3501      	adds	r5, #1
 8003e46:	4630      	mov	r0, r6
 8003e48:	f04f 0e00 	mov.w	lr, #0
 8003e4c:	f857 2b04 	ldr.w	r2, [r7], #4
 8003e50:	f8d0 c000 	ldr.w	ip, [r0]
 8003e54:	b293      	uxth	r3, r2
 8003e56:	ebae 0303 	sub.w	r3, lr, r3
 8003e5a:	0c12      	lsrs	r2, r2, #16
 8003e5c:	fa13 f38c 	uxtah	r3, r3, ip
 8003e60:	ebc2 421c 	rsb	r2, r2, ip, lsr #16
 8003e64:	eb02 4223 	add.w	r2, r2, r3, asr #16
 8003e68:	b29b      	uxth	r3, r3
 8003e6a:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8003e6e:	45b9      	cmp	r9, r7
 8003e70:	ea4f 4e22 	mov.w	lr, r2, asr #16
 8003e74:	f840 3b04 	str.w	r3, [r0], #4
 8003e78:	d2e8      	bcs.n	8003e4c <quorem+0xb0>
 8003e7a:	f856 2024 	ldr.w	r2, [r6, r4, lsl #2]
 8003e7e:	eb06 0384 	add.w	r3, r6, r4, lsl #2
 8003e82:	b92a      	cbnz	r2, 8003e90 <quorem+0xf4>
 8003e84:	3b04      	subs	r3, #4
 8003e86:	429e      	cmp	r6, r3
 8003e88:	461a      	mov	r2, r3
 8003e8a:	d30b      	bcc.n	8003ea4 <quorem+0x108>
 8003e8c:	f8c8 4010 	str.w	r4, [r8, #16]
 8003e90:	4628      	mov	r0, r5
 8003e92:	b003      	add	sp, #12
 8003e94:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003e98:	6812      	ldr	r2, [r2, #0]
 8003e9a:	3b04      	subs	r3, #4
 8003e9c:	2a00      	cmp	r2, #0
 8003e9e:	d1ca      	bne.n	8003e36 <quorem+0x9a>
 8003ea0:	3c01      	subs	r4, #1
 8003ea2:	e7c5      	b.n	8003e30 <quorem+0x94>
 8003ea4:	6812      	ldr	r2, [r2, #0]
 8003ea6:	3b04      	subs	r3, #4
 8003ea8:	2a00      	cmp	r2, #0
 8003eaa:	d1ef      	bne.n	8003e8c <quorem+0xf0>
 8003eac:	3c01      	subs	r4, #1
 8003eae:	e7ea      	b.n	8003e86 <quorem+0xea>
 8003eb0:	2000      	movs	r0, #0
 8003eb2:	e7ee      	b.n	8003e92 <quorem+0xf6>
 8003eb4:	0000      	movs	r0, r0
	...

08003eb8 <_dtoa_r>:
 8003eb8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003ebc:	ec57 6b10 	vmov	r6, r7, d0
 8003ec0:	b097      	sub	sp, #92	; 0x5c
 8003ec2:	e9cd 6700 	strd	r6, r7, [sp]
 8003ec6:	6a46      	ldr	r6, [r0, #36]	; 0x24
 8003ec8:	9107      	str	r1, [sp, #28]
 8003eca:	4604      	mov	r4, r0
 8003ecc:	920a      	str	r2, [sp, #40]	; 0x28
 8003ece:	930f      	str	r3, [sp, #60]	; 0x3c
 8003ed0:	9d20      	ldr	r5, [sp, #128]	; 0x80
 8003ed2:	b93e      	cbnz	r6, 8003ee4 <_dtoa_r+0x2c>
 8003ed4:	2010      	movs	r0, #16
 8003ed6:	f001 fa5f 	bl	8005398 <malloc>
 8003eda:	6260      	str	r0, [r4, #36]	; 0x24
 8003edc:	6046      	str	r6, [r0, #4]
 8003ede:	6086      	str	r6, [r0, #8]
 8003ee0:	6006      	str	r6, [r0, #0]
 8003ee2:	60c6      	str	r6, [r0, #12]
 8003ee4:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8003ee6:	6819      	ldr	r1, [r3, #0]
 8003ee8:	b151      	cbz	r1, 8003f00 <_dtoa_r+0x48>
 8003eea:	685a      	ldr	r2, [r3, #4]
 8003eec:	604a      	str	r2, [r1, #4]
 8003eee:	2301      	movs	r3, #1
 8003ef0:	4093      	lsls	r3, r2
 8003ef2:	608b      	str	r3, [r1, #8]
 8003ef4:	4620      	mov	r0, r4
 8003ef6:	f001 fcd3 	bl	80058a0 <_Bfree>
 8003efa:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8003efc:	2200      	movs	r2, #0
 8003efe:	601a      	str	r2, [r3, #0]
 8003f00:	9b01      	ldr	r3, [sp, #4]
 8003f02:	2b00      	cmp	r3, #0
 8003f04:	bfbf      	itttt	lt
 8003f06:	2301      	movlt	r3, #1
 8003f08:	602b      	strlt	r3, [r5, #0]
 8003f0a:	9b01      	ldrlt	r3, [sp, #4]
 8003f0c:	f023 4300 	biclt.w	r3, r3, #2147483648	; 0x80000000
 8003f10:	bfb2      	itee	lt
 8003f12:	9301      	strlt	r3, [sp, #4]
 8003f14:	2300      	movge	r3, #0
 8003f16:	602b      	strge	r3, [r5, #0]
 8003f18:	f8dd 8004 	ldr.w	r8, [sp, #4]
 8003f1c:	4ba8      	ldr	r3, [pc, #672]	; (80041c0 <_dtoa_r+0x308>)
 8003f1e:	ea33 0308 	bics.w	r3, r3, r8
 8003f22:	d11b      	bne.n	8003f5c <_dtoa_r+0xa4>
 8003f24:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8003f26:	f242 730f 	movw	r3, #9999	; 0x270f
 8003f2a:	6013      	str	r3, [r2, #0]
 8003f2c:	9b00      	ldr	r3, [sp, #0]
 8003f2e:	b923      	cbnz	r3, 8003f3a <_dtoa_r+0x82>
 8003f30:	f3c8 0013 	ubfx	r0, r8, #0, #20
 8003f34:	2800      	cmp	r0, #0
 8003f36:	f000 8578 	beq.w	8004a2a <_dtoa_r+0xb72>
 8003f3a:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8003f3c:	b953      	cbnz	r3, 8003f54 <_dtoa_r+0x9c>
 8003f3e:	4ba1      	ldr	r3, [pc, #644]	; (80041c4 <_dtoa_r+0x30c>)
 8003f40:	e021      	b.n	8003f86 <_dtoa_r+0xce>
 8003f42:	4ba1      	ldr	r3, [pc, #644]	; (80041c8 <_dtoa_r+0x310>)
 8003f44:	9302      	str	r3, [sp, #8]
 8003f46:	3308      	adds	r3, #8
 8003f48:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8003f4a:	6013      	str	r3, [r2, #0]
 8003f4c:	9802      	ldr	r0, [sp, #8]
 8003f4e:	b017      	add	sp, #92	; 0x5c
 8003f50:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003f54:	4b9b      	ldr	r3, [pc, #620]	; (80041c4 <_dtoa_r+0x30c>)
 8003f56:	9302      	str	r3, [sp, #8]
 8003f58:	3303      	adds	r3, #3
 8003f5a:	e7f5      	b.n	8003f48 <_dtoa_r+0x90>
 8003f5c:	e9dd 6700 	ldrd	r6, r7, [sp]
 8003f60:	2200      	movs	r2, #0
 8003f62:	2300      	movs	r3, #0
 8003f64:	4630      	mov	r0, r6
 8003f66:	4639      	mov	r1, r7
 8003f68:	f7fc fdaa 	bl	8000ac0 <__aeabi_dcmpeq>
 8003f6c:	4681      	mov	r9, r0
 8003f6e:	b160      	cbz	r0, 8003f8a <_dtoa_r+0xd2>
 8003f70:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8003f72:	2301      	movs	r3, #1
 8003f74:	6013      	str	r3, [r2, #0]
 8003f76:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8003f78:	2b00      	cmp	r3, #0
 8003f7a:	f000 8553 	beq.w	8004a24 <_dtoa_r+0xb6c>
 8003f7e:	4b93      	ldr	r3, [pc, #588]	; (80041cc <_dtoa_r+0x314>)
 8003f80:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8003f82:	6013      	str	r3, [r2, #0]
 8003f84:	3b01      	subs	r3, #1
 8003f86:	9302      	str	r3, [sp, #8]
 8003f88:	e7e0      	b.n	8003f4c <_dtoa_r+0x94>
 8003f8a:	aa14      	add	r2, sp, #80	; 0x50
 8003f8c:	a915      	add	r1, sp, #84	; 0x54
 8003f8e:	ec47 6b10 	vmov	d0, r6, r7
 8003f92:	4620      	mov	r0, r4
 8003f94:	f001 fed1 	bl	8005d3a <__d2b>
 8003f98:	f3c8 550a 	ubfx	r5, r8, #20, #11
 8003f9c:	4682      	mov	sl, r0
 8003f9e:	2d00      	cmp	r5, #0
 8003fa0:	d07e      	beq.n	80040a0 <_dtoa_r+0x1e8>
 8003fa2:	f3c7 0313 	ubfx	r3, r7, #0, #20
 8003fa6:	f043 517f 	orr.w	r1, r3, #1069547520	; 0x3fc00000
 8003faa:	4630      	mov	r0, r6
 8003fac:	f441 1140 	orr.w	r1, r1, #3145728	; 0x300000
 8003fb0:	f2a5 35ff 	subw	r5, r5, #1023	; 0x3ff
 8003fb4:	f8cd 9048 	str.w	r9, [sp, #72]	; 0x48
 8003fb8:	2200      	movs	r2, #0
 8003fba:	4b85      	ldr	r3, [pc, #532]	; (80041d0 <_dtoa_r+0x318>)
 8003fbc:	f7fc f964 	bl	8000288 <__aeabi_dsub>
 8003fc0:	a379      	add	r3, pc, #484	; (adr r3, 80041a8 <_dtoa_r+0x2f0>)
 8003fc2:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003fc6:	f7fc fb13 	bl	80005f0 <__aeabi_dmul>
 8003fca:	a379      	add	r3, pc, #484	; (adr r3, 80041b0 <_dtoa_r+0x2f8>)
 8003fcc:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003fd0:	f7fc f95c 	bl	800028c <__adddf3>
 8003fd4:	4606      	mov	r6, r0
 8003fd6:	4628      	mov	r0, r5
 8003fd8:	460f      	mov	r7, r1
 8003fda:	f7fc faa3 	bl	8000524 <__aeabi_i2d>
 8003fde:	a376      	add	r3, pc, #472	; (adr r3, 80041b8 <_dtoa_r+0x300>)
 8003fe0:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003fe4:	f7fc fb04 	bl	80005f0 <__aeabi_dmul>
 8003fe8:	4602      	mov	r2, r0
 8003fea:	460b      	mov	r3, r1
 8003fec:	4630      	mov	r0, r6
 8003fee:	4639      	mov	r1, r7
 8003ff0:	f7fc f94c 	bl	800028c <__adddf3>
 8003ff4:	4606      	mov	r6, r0
 8003ff6:	460f      	mov	r7, r1
 8003ff8:	f7fc fdaa 	bl	8000b50 <__aeabi_d2iz>
 8003ffc:	2200      	movs	r2, #0
 8003ffe:	4683      	mov	fp, r0
 8004000:	2300      	movs	r3, #0
 8004002:	4630      	mov	r0, r6
 8004004:	4639      	mov	r1, r7
 8004006:	f7fc fd65 	bl	8000ad4 <__aeabi_dcmplt>
 800400a:	b158      	cbz	r0, 8004024 <_dtoa_r+0x16c>
 800400c:	4658      	mov	r0, fp
 800400e:	f7fc fa89 	bl	8000524 <__aeabi_i2d>
 8004012:	4602      	mov	r2, r0
 8004014:	460b      	mov	r3, r1
 8004016:	4630      	mov	r0, r6
 8004018:	4639      	mov	r1, r7
 800401a:	f7fc fd51 	bl	8000ac0 <__aeabi_dcmpeq>
 800401e:	b908      	cbnz	r0, 8004024 <_dtoa_r+0x16c>
 8004020:	f10b 3bff 	add.w	fp, fp, #4294967295
 8004024:	f1bb 0f16 	cmp.w	fp, #22
 8004028:	d859      	bhi.n	80040de <_dtoa_r+0x226>
 800402a:	496a      	ldr	r1, [pc, #424]	; (80041d4 <_dtoa_r+0x31c>)
 800402c:	eb01 01cb 	add.w	r1, r1, fp, lsl #3
 8004030:	e9dd 2300 	ldrd	r2, r3, [sp]
 8004034:	e9d1 0100 	ldrd	r0, r1, [r1]
 8004038:	f7fc fd6a 	bl	8000b10 <__aeabi_dcmpgt>
 800403c:	2800      	cmp	r0, #0
 800403e:	d050      	beq.n	80040e2 <_dtoa_r+0x22a>
 8004040:	f10b 3bff 	add.w	fp, fp, #4294967295
 8004044:	2300      	movs	r3, #0
 8004046:	930e      	str	r3, [sp, #56]	; 0x38
 8004048:	9b14      	ldr	r3, [sp, #80]	; 0x50
 800404a:	1b5d      	subs	r5, r3, r5
 800404c:	1e6b      	subs	r3, r5, #1
 800404e:	9306      	str	r3, [sp, #24]
 8004050:	bf45      	ittet	mi
 8004052:	f1c5 0301 	rsbmi	r3, r5, #1
 8004056:	9305      	strmi	r3, [sp, #20]
 8004058:	2300      	movpl	r3, #0
 800405a:	2300      	movmi	r3, #0
 800405c:	bf4c      	ite	mi
 800405e:	9306      	strmi	r3, [sp, #24]
 8004060:	9305      	strpl	r3, [sp, #20]
 8004062:	f1bb 0f00 	cmp.w	fp, #0
 8004066:	db3e      	blt.n	80040e6 <_dtoa_r+0x22e>
 8004068:	9b06      	ldr	r3, [sp, #24]
 800406a:	f8cd b02c 	str.w	fp, [sp, #44]	; 0x2c
 800406e:	445b      	add	r3, fp
 8004070:	9306      	str	r3, [sp, #24]
 8004072:	2300      	movs	r3, #0
 8004074:	9308      	str	r3, [sp, #32]
 8004076:	9b07      	ldr	r3, [sp, #28]
 8004078:	2b09      	cmp	r3, #9
 800407a:	f200 80af 	bhi.w	80041dc <_dtoa_r+0x324>
 800407e:	2b05      	cmp	r3, #5
 8004080:	bfc4      	itt	gt
 8004082:	3b04      	subgt	r3, #4
 8004084:	9307      	strgt	r3, [sp, #28]
 8004086:	9b07      	ldr	r3, [sp, #28]
 8004088:	f1a3 0302 	sub.w	r3, r3, #2
 800408c:	bfcc      	ite	gt
 800408e:	2600      	movgt	r6, #0
 8004090:	2601      	movle	r6, #1
 8004092:	2b03      	cmp	r3, #3
 8004094:	f200 80ae 	bhi.w	80041f4 <_dtoa_r+0x33c>
 8004098:	e8df f003 	tbb	[pc, r3]
 800409c:	772f8482 	.word	0x772f8482
 80040a0:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80040a2:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80040a4:	441d      	add	r5, r3
 80040a6:	f205 4332 	addw	r3, r5, #1074	; 0x432
 80040aa:	2b20      	cmp	r3, #32
 80040ac:	dd11      	ble.n	80040d2 <_dtoa_r+0x21a>
 80040ae:	9a00      	ldr	r2, [sp, #0]
 80040b0:	f205 4012 	addw	r0, r5, #1042	; 0x412
 80040b4:	f1c3 0340 	rsb	r3, r3, #64	; 0x40
 80040b8:	fa22 f000 	lsr.w	r0, r2, r0
 80040bc:	fa08 f303 	lsl.w	r3, r8, r3
 80040c0:	4318      	orrs	r0, r3
 80040c2:	f7fc fa1f 	bl	8000504 <__aeabi_ui2d>
 80040c6:	2301      	movs	r3, #1
 80040c8:	f1a1 71f8 	sub.w	r1, r1, #32505856	; 0x1f00000
 80040cc:	3d01      	subs	r5, #1
 80040ce:	9312      	str	r3, [sp, #72]	; 0x48
 80040d0:	e772      	b.n	8003fb8 <_dtoa_r+0x100>
 80040d2:	f1c3 0020 	rsb	r0, r3, #32
 80040d6:	9b00      	ldr	r3, [sp, #0]
 80040d8:	fa03 f000 	lsl.w	r0, r3, r0
 80040dc:	e7f1      	b.n	80040c2 <_dtoa_r+0x20a>
 80040de:	2301      	movs	r3, #1
 80040e0:	e7b1      	b.n	8004046 <_dtoa_r+0x18e>
 80040e2:	900e      	str	r0, [sp, #56]	; 0x38
 80040e4:	e7b0      	b.n	8004048 <_dtoa_r+0x190>
 80040e6:	9b05      	ldr	r3, [sp, #20]
 80040e8:	eba3 030b 	sub.w	r3, r3, fp
 80040ec:	9305      	str	r3, [sp, #20]
 80040ee:	f1cb 0300 	rsb	r3, fp, #0
 80040f2:	9308      	str	r3, [sp, #32]
 80040f4:	2300      	movs	r3, #0
 80040f6:	930b      	str	r3, [sp, #44]	; 0x2c
 80040f8:	e7bd      	b.n	8004076 <_dtoa_r+0x1be>
 80040fa:	2301      	movs	r3, #1
 80040fc:	9309      	str	r3, [sp, #36]	; 0x24
 80040fe:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8004100:	2b00      	cmp	r3, #0
 8004102:	dd7a      	ble.n	80041fa <_dtoa_r+0x342>
 8004104:	9304      	str	r3, [sp, #16]
 8004106:	9303      	str	r3, [sp, #12]
 8004108:	6a65      	ldr	r5, [r4, #36]	; 0x24
 800410a:	2200      	movs	r2, #0
 800410c:	606a      	str	r2, [r5, #4]
 800410e:	2104      	movs	r1, #4
 8004110:	f101 0214 	add.w	r2, r1, #20
 8004114:	429a      	cmp	r2, r3
 8004116:	d975      	bls.n	8004204 <_dtoa_r+0x34c>
 8004118:	6869      	ldr	r1, [r5, #4]
 800411a:	4620      	mov	r0, r4
 800411c:	f001 fb8c 	bl	8005838 <_Balloc>
 8004120:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8004122:	6028      	str	r0, [r5, #0]
 8004124:	681b      	ldr	r3, [r3, #0]
 8004126:	9302      	str	r3, [sp, #8]
 8004128:	9b03      	ldr	r3, [sp, #12]
 800412a:	2b0e      	cmp	r3, #14
 800412c:	f200 80e5 	bhi.w	80042fa <_dtoa_r+0x442>
 8004130:	2e00      	cmp	r6, #0
 8004132:	f000 80e2 	beq.w	80042fa <_dtoa_r+0x442>
 8004136:	ed9d 7b00 	vldr	d7, [sp]
 800413a:	f1bb 0f00 	cmp.w	fp, #0
 800413e:	ed8d 7b0c 	vstr	d7, [sp, #48]	; 0x30
 8004142:	dd74      	ble.n	800422e <_dtoa_r+0x376>
 8004144:	4a23      	ldr	r2, [pc, #140]	; (80041d4 <_dtoa_r+0x31c>)
 8004146:	f00b 030f 	and.w	r3, fp, #15
 800414a:	ea4f 162b 	mov.w	r6, fp, asr #4
 800414e:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 8004152:	06f0      	lsls	r0, r6, #27
 8004154:	e9d3 8900 	ldrd	r8, r9, [r3]
 8004158:	d559      	bpl.n	800420e <_dtoa_r+0x356>
 800415a:	4b1f      	ldr	r3, [pc, #124]	; (80041d8 <_dtoa_r+0x320>)
 800415c:	ec51 0b17 	vmov	r0, r1, d7
 8004160:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 8004164:	f7fc fb6e 	bl	8000844 <__aeabi_ddiv>
 8004168:	e9cd 0100 	strd	r0, r1, [sp]
 800416c:	f006 060f 	and.w	r6, r6, #15
 8004170:	2503      	movs	r5, #3
 8004172:	4f19      	ldr	r7, [pc, #100]	; (80041d8 <_dtoa_r+0x320>)
 8004174:	2e00      	cmp	r6, #0
 8004176:	d14c      	bne.n	8004212 <_dtoa_r+0x35a>
 8004178:	4642      	mov	r2, r8
 800417a:	464b      	mov	r3, r9
 800417c:	e9dd 0100 	ldrd	r0, r1, [sp]
 8004180:	f7fc fb60 	bl	8000844 <__aeabi_ddiv>
 8004184:	e9cd 0100 	strd	r0, r1, [sp]
 8004188:	e06a      	b.n	8004260 <_dtoa_r+0x3a8>
 800418a:	2301      	movs	r3, #1
 800418c:	9309      	str	r3, [sp, #36]	; 0x24
 800418e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8004190:	445b      	add	r3, fp
 8004192:	9304      	str	r3, [sp, #16]
 8004194:	3301      	adds	r3, #1
 8004196:	2b01      	cmp	r3, #1
 8004198:	9303      	str	r3, [sp, #12]
 800419a:	bfb8      	it	lt
 800419c:	2301      	movlt	r3, #1
 800419e:	e7b3      	b.n	8004108 <_dtoa_r+0x250>
 80041a0:	2300      	movs	r3, #0
 80041a2:	e7ab      	b.n	80040fc <_dtoa_r+0x244>
 80041a4:	2300      	movs	r3, #0
 80041a6:	e7f1      	b.n	800418c <_dtoa_r+0x2d4>
 80041a8:	636f4361 	.word	0x636f4361
 80041ac:	3fd287a7 	.word	0x3fd287a7
 80041b0:	8b60c8b3 	.word	0x8b60c8b3
 80041b4:	3fc68a28 	.word	0x3fc68a28
 80041b8:	509f79fb 	.word	0x509f79fb
 80041bc:	3fd34413 	.word	0x3fd34413
 80041c0:	7ff00000 	.word	0x7ff00000
 80041c4:	08007ffd 	.word	0x08007ffd
 80041c8:	08007ff4 	.word	0x08007ff4
 80041cc:	08007fd3 	.word	0x08007fd3
 80041d0:	3ff80000 	.word	0x3ff80000
 80041d4:	08008090 	.word	0x08008090
 80041d8:	08008068 	.word	0x08008068
 80041dc:	2601      	movs	r6, #1
 80041de:	2300      	movs	r3, #0
 80041e0:	9307      	str	r3, [sp, #28]
 80041e2:	9609      	str	r6, [sp, #36]	; 0x24
 80041e4:	f04f 33ff 	mov.w	r3, #4294967295
 80041e8:	9304      	str	r3, [sp, #16]
 80041ea:	9303      	str	r3, [sp, #12]
 80041ec:	2200      	movs	r2, #0
 80041ee:	2312      	movs	r3, #18
 80041f0:	920a      	str	r2, [sp, #40]	; 0x28
 80041f2:	e789      	b.n	8004108 <_dtoa_r+0x250>
 80041f4:	2301      	movs	r3, #1
 80041f6:	9309      	str	r3, [sp, #36]	; 0x24
 80041f8:	e7f4      	b.n	80041e4 <_dtoa_r+0x32c>
 80041fa:	2301      	movs	r3, #1
 80041fc:	9304      	str	r3, [sp, #16]
 80041fe:	9303      	str	r3, [sp, #12]
 8004200:	461a      	mov	r2, r3
 8004202:	e7f5      	b.n	80041f0 <_dtoa_r+0x338>
 8004204:	686a      	ldr	r2, [r5, #4]
 8004206:	3201      	adds	r2, #1
 8004208:	606a      	str	r2, [r5, #4]
 800420a:	0049      	lsls	r1, r1, #1
 800420c:	e780      	b.n	8004110 <_dtoa_r+0x258>
 800420e:	2502      	movs	r5, #2
 8004210:	e7af      	b.n	8004172 <_dtoa_r+0x2ba>
 8004212:	07f1      	lsls	r1, r6, #31
 8004214:	d508      	bpl.n	8004228 <_dtoa_r+0x370>
 8004216:	4640      	mov	r0, r8
 8004218:	4649      	mov	r1, r9
 800421a:	e9d7 2300 	ldrd	r2, r3, [r7]
 800421e:	f7fc f9e7 	bl	80005f0 <__aeabi_dmul>
 8004222:	3501      	adds	r5, #1
 8004224:	4680      	mov	r8, r0
 8004226:	4689      	mov	r9, r1
 8004228:	1076      	asrs	r6, r6, #1
 800422a:	3708      	adds	r7, #8
 800422c:	e7a2      	b.n	8004174 <_dtoa_r+0x2bc>
 800422e:	f000 809d 	beq.w	800436c <_dtoa_r+0x4b4>
 8004232:	f1cb 0600 	rsb	r6, fp, #0
 8004236:	4b9f      	ldr	r3, [pc, #636]	; (80044b4 <_dtoa_r+0x5fc>)
 8004238:	4f9f      	ldr	r7, [pc, #636]	; (80044b8 <_dtoa_r+0x600>)
 800423a:	f006 020f 	and.w	r2, r6, #15
 800423e:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8004242:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004246:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 800424a:	f7fc f9d1 	bl	80005f0 <__aeabi_dmul>
 800424e:	e9cd 0100 	strd	r0, r1, [sp]
 8004252:	1136      	asrs	r6, r6, #4
 8004254:	2300      	movs	r3, #0
 8004256:	2502      	movs	r5, #2
 8004258:	2e00      	cmp	r6, #0
 800425a:	d17c      	bne.n	8004356 <_dtoa_r+0x49e>
 800425c:	2b00      	cmp	r3, #0
 800425e:	d191      	bne.n	8004184 <_dtoa_r+0x2cc>
 8004260:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8004262:	2b00      	cmp	r3, #0
 8004264:	f000 8084 	beq.w	8004370 <_dtoa_r+0x4b8>
 8004268:	e9dd 8900 	ldrd	r8, r9, [sp]
 800426c:	2200      	movs	r2, #0
 800426e:	4b93      	ldr	r3, [pc, #588]	; (80044bc <_dtoa_r+0x604>)
 8004270:	4640      	mov	r0, r8
 8004272:	4649      	mov	r1, r9
 8004274:	f7fc fc2e 	bl	8000ad4 <__aeabi_dcmplt>
 8004278:	2800      	cmp	r0, #0
 800427a:	d079      	beq.n	8004370 <_dtoa_r+0x4b8>
 800427c:	9b03      	ldr	r3, [sp, #12]
 800427e:	2b00      	cmp	r3, #0
 8004280:	d076      	beq.n	8004370 <_dtoa_r+0x4b8>
 8004282:	9b04      	ldr	r3, [sp, #16]
 8004284:	2b00      	cmp	r3, #0
 8004286:	dd34      	ble.n	80042f2 <_dtoa_r+0x43a>
 8004288:	2200      	movs	r2, #0
 800428a:	4b8d      	ldr	r3, [pc, #564]	; (80044c0 <_dtoa_r+0x608>)
 800428c:	4640      	mov	r0, r8
 800428e:	4649      	mov	r1, r9
 8004290:	f7fc f9ae 	bl	80005f0 <__aeabi_dmul>
 8004294:	e9cd 0100 	strd	r0, r1, [sp]
 8004298:	9e04      	ldr	r6, [sp, #16]
 800429a:	f10b 37ff 	add.w	r7, fp, #4294967295
 800429e:	3501      	adds	r5, #1
 80042a0:	4628      	mov	r0, r5
 80042a2:	f7fc f93f 	bl	8000524 <__aeabi_i2d>
 80042a6:	e9dd 2300 	ldrd	r2, r3, [sp]
 80042aa:	f7fc f9a1 	bl	80005f0 <__aeabi_dmul>
 80042ae:	2200      	movs	r2, #0
 80042b0:	4b84      	ldr	r3, [pc, #528]	; (80044c4 <_dtoa_r+0x60c>)
 80042b2:	f7fb ffeb 	bl	800028c <__adddf3>
 80042b6:	4680      	mov	r8, r0
 80042b8:	f1a1 7950 	sub.w	r9, r1, #54525952	; 0x3400000
 80042bc:	2e00      	cmp	r6, #0
 80042be:	d15a      	bne.n	8004376 <_dtoa_r+0x4be>
 80042c0:	2200      	movs	r2, #0
 80042c2:	4b81      	ldr	r3, [pc, #516]	; (80044c8 <_dtoa_r+0x610>)
 80042c4:	e9dd 0100 	ldrd	r0, r1, [sp]
 80042c8:	f7fb ffde 	bl	8000288 <__aeabi_dsub>
 80042cc:	4642      	mov	r2, r8
 80042ce:	464b      	mov	r3, r9
 80042d0:	e9cd 0100 	strd	r0, r1, [sp]
 80042d4:	f7fc fc1c 	bl	8000b10 <__aeabi_dcmpgt>
 80042d8:	2800      	cmp	r0, #0
 80042da:	f040 829b 	bne.w	8004814 <_dtoa_r+0x95c>
 80042de:	4642      	mov	r2, r8
 80042e0:	f109 4300 	add.w	r3, r9, #2147483648	; 0x80000000
 80042e4:	e9dd 0100 	ldrd	r0, r1, [sp]
 80042e8:	f7fc fbf4 	bl	8000ad4 <__aeabi_dcmplt>
 80042ec:	2800      	cmp	r0, #0
 80042ee:	f040 828f 	bne.w	8004810 <_dtoa_r+0x958>
 80042f2:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	; 0x30
 80042f6:	e9cd 2300 	strd	r2, r3, [sp]
 80042fa:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80042fc:	2b00      	cmp	r3, #0
 80042fe:	f2c0 8150 	blt.w	80045a2 <_dtoa_r+0x6ea>
 8004302:	f1bb 0f0e 	cmp.w	fp, #14
 8004306:	f300 814c 	bgt.w	80045a2 <_dtoa_r+0x6ea>
 800430a:	4b6a      	ldr	r3, [pc, #424]	; (80044b4 <_dtoa_r+0x5fc>)
 800430c:	eb03 03cb 	add.w	r3, r3, fp, lsl #3
 8004310:	e9d3 8900 	ldrd	r8, r9, [r3]
 8004314:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8004316:	2b00      	cmp	r3, #0
 8004318:	f280 80da 	bge.w	80044d0 <_dtoa_r+0x618>
 800431c:	9b03      	ldr	r3, [sp, #12]
 800431e:	2b00      	cmp	r3, #0
 8004320:	f300 80d6 	bgt.w	80044d0 <_dtoa_r+0x618>
 8004324:	f040 8273 	bne.w	800480e <_dtoa_r+0x956>
 8004328:	2200      	movs	r2, #0
 800432a:	4b67      	ldr	r3, [pc, #412]	; (80044c8 <_dtoa_r+0x610>)
 800432c:	4640      	mov	r0, r8
 800432e:	4649      	mov	r1, r9
 8004330:	f7fc f95e 	bl	80005f0 <__aeabi_dmul>
 8004334:	e9dd 2300 	ldrd	r2, r3, [sp]
 8004338:	f7fc fbe0 	bl	8000afc <__aeabi_dcmpge>
 800433c:	9e03      	ldr	r6, [sp, #12]
 800433e:	4637      	mov	r7, r6
 8004340:	2800      	cmp	r0, #0
 8004342:	f040 824a 	bne.w	80047da <_dtoa_r+0x922>
 8004346:	9b02      	ldr	r3, [sp, #8]
 8004348:	9a02      	ldr	r2, [sp, #8]
 800434a:	1c5d      	adds	r5, r3, #1
 800434c:	2331      	movs	r3, #49	; 0x31
 800434e:	7013      	strb	r3, [r2, #0]
 8004350:	f10b 0b01 	add.w	fp, fp, #1
 8004354:	e245      	b.n	80047e2 <_dtoa_r+0x92a>
 8004356:	07f2      	lsls	r2, r6, #31
 8004358:	d505      	bpl.n	8004366 <_dtoa_r+0x4ae>
 800435a:	e9d7 2300 	ldrd	r2, r3, [r7]
 800435e:	f7fc f947 	bl	80005f0 <__aeabi_dmul>
 8004362:	3501      	adds	r5, #1
 8004364:	2301      	movs	r3, #1
 8004366:	1076      	asrs	r6, r6, #1
 8004368:	3708      	adds	r7, #8
 800436a:	e775      	b.n	8004258 <_dtoa_r+0x3a0>
 800436c:	2502      	movs	r5, #2
 800436e:	e777      	b.n	8004260 <_dtoa_r+0x3a8>
 8004370:	465f      	mov	r7, fp
 8004372:	9e03      	ldr	r6, [sp, #12]
 8004374:	e794      	b.n	80042a0 <_dtoa_r+0x3e8>
 8004376:	9a02      	ldr	r2, [sp, #8]
 8004378:	4b4e      	ldr	r3, [pc, #312]	; (80044b4 <_dtoa_r+0x5fc>)
 800437a:	4432      	add	r2, r6
 800437c:	9213      	str	r2, [sp, #76]	; 0x4c
 800437e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8004380:	1e71      	subs	r1, r6, #1
 8004382:	2a00      	cmp	r2, #0
 8004384:	d048      	beq.n	8004418 <_dtoa_r+0x560>
 8004386:	eb03 03c1 	add.w	r3, r3, r1, lsl #3
 800438a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800438e:	2000      	movs	r0, #0
 8004390:	494e      	ldr	r1, [pc, #312]	; (80044cc <_dtoa_r+0x614>)
 8004392:	f7fc fa57 	bl	8000844 <__aeabi_ddiv>
 8004396:	4642      	mov	r2, r8
 8004398:	464b      	mov	r3, r9
 800439a:	f7fb ff75 	bl	8000288 <__aeabi_dsub>
 800439e:	9d02      	ldr	r5, [sp, #8]
 80043a0:	4680      	mov	r8, r0
 80043a2:	4689      	mov	r9, r1
 80043a4:	e9dd 0100 	ldrd	r0, r1, [sp]
 80043a8:	f7fc fbd2 	bl	8000b50 <__aeabi_d2iz>
 80043ac:	4606      	mov	r6, r0
 80043ae:	f7fc f8b9 	bl	8000524 <__aeabi_i2d>
 80043b2:	4602      	mov	r2, r0
 80043b4:	460b      	mov	r3, r1
 80043b6:	e9dd 0100 	ldrd	r0, r1, [sp]
 80043ba:	f7fb ff65 	bl	8000288 <__aeabi_dsub>
 80043be:	3630      	adds	r6, #48	; 0x30
 80043c0:	f805 6b01 	strb.w	r6, [r5], #1
 80043c4:	4642      	mov	r2, r8
 80043c6:	464b      	mov	r3, r9
 80043c8:	e9cd 0100 	strd	r0, r1, [sp]
 80043cc:	f7fc fb82 	bl	8000ad4 <__aeabi_dcmplt>
 80043d0:	2800      	cmp	r0, #0
 80043d2:	d165      	bne.n	80044a0 <_dtoa_r+0x5e8>
 80043d4:	e9dd 2300 	ldrd	r2, r3, [sp]
 80043d8:	2000      	movs	r0, #0
 80043da:	4938      	ldr	r1, [pc, #224]	; (80044bc <_dtoa_r+0x604>)
 80043dc:	f7fb ff54 	bl	8000288 <__aeabi_dsub>
 80043e0:	4642      	mov	r2, r8
 80043e2:	464b      	mov	r3, r9
 80043e4:	f7fc fb76 	bl	8000ad4 <__aeabi_dcmplt>
 80043e8:	2800      	cmp	r0, #0
 80043ea:	f040 80ba 	bne.w	8004562 <_dtoa_r+0x6aa>
 80043ee:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80043f0:	429d      	cmp	r5, r3
 80043f2:	f43f af7e 	beq.w	80042f2 <_dtoa_r+0x43a>
 80043f6:	2200      	movs	r2, #0
 80043f8:	4b31      	ldr	r3, [pc, #196]	; (80044c0 <_dtoa_r+0x608>)
 80043fa:	4640      	mov	r0, r8
 80043fc:	4649      	mov	r1, r9
 80043fe:	f7fc f8f7 	bl	80005f0 <__aeabi_dmul>
 8004402:	2200      	movs	r2, #0
 8004404:	4680      	mov	r8, r0
 8004406:	4689      	mov	r9, r1
 8004408:	4b2d      	ldr	r3, [pc, #180]	; (80044c0 <_dtoa_r+0x608>)
 800440a:	e9dd 0100 	ldrd	r0, r1, [sp]
 800440e:	f7fc f8ef 	bl	80005f0 <__aeabi_dmul>
 8004412:	e9cd 0100 	strd	r0, r1, [sp]
 8004416:	e7c5      	b.n	80043a4 <_dtoa_r+0x4ec>
 8004418:	eb03 01c1 	add.w	r1, r3, r1, lsl #3
 800441c:	4642      	mov	r2, r8
 800441e:	464b      	mov	r3, r9
 8004420:	e9d1 0100 	ldrd	r0, r1, [r1]
 8004424:	f7fc f8e4 	bl	80005f0 <__aeabi_dmul>
 8004428:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 800442c:	9d02      	ldr	r5, [sp, #8]
 800442e:	e9dd 0100 	ldrd	r0, r1, [sp]
 8004432:	f7fc fb8d 	bl	8000b50 <__aeabi_d2iz>
 8004436:	4606      	mov	r6, r0
 8004438:	f7fc f874 	bl	8000524 <__aeabi_i2d>
 800443c:	3630      	adds	r6, #48	; 0x30
 800443e:	4602      	mov	r2, r0
 8004440:	460b      	mov	r3, r1
 8004442:	e9dd 0100 	ldrd	r0, r1, [sp]
 8004446:	f7fb ff1f 	bl	8000288 <__aeabi_dsub>
 800444a:	f805 6b01 	strb.w	r6, [r5], #1
 800444e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8004450:	42ab      	cmp	r3, r5
 8004452:	4680      	mov	r8, r0
 8004454:	4689      	mov	r9, r1
 8004456:	f04f 0200 	mov.w	r2, #0
 800445a:	d125      	bne.n	80044a8 <_dtoa_r+0x5f0>
 800445c:	4b1b      	ldr	r3, [pc, #108]	; (80044cc <_dtoa_r+0x614>)
 800445e:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 8004462:	f7fb ff13 	bl	800028c <__adddf3>
 8004466:	4602      	mov	r2, r0
 8004468:	460b      	mov	r3, r1
 800446a:	4640      	mov	r0, r8
 800446c:	4649      	mov	r1, r9
 800446e:	f7fc fb4f 	bl	8000b10 <__aeabi_dcmpgt>
 8004472:	2800      	cmp	r0, #0
 8004474:	d175      	bne.n	8004562 <_dtoa_r+0x6aa>
 8004476:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 800447a:	2000      	movs	r0, #0
 800447c:	4913      	ldr	r1, [pc, #76]	; (80044cc <_dtoa_r+0x614>)
 800447e:	f7fb ff03 	bl	8000288 <__aeabi_dsub>
 8004482:	4602      	mov	r2, r0
 8004484:	460b      	mov	r3, r1
 8004486:	4640      	mov	r0, r8
 8004488:	4649      	mov	r1, r9
 800448a:	f7fc fb23 	bl	8000ad4 <__aeabi_dcmplt>
 800448e:	2800      	cmp	r0, #0
 8004490:	f43f af2f 	beq.w	80042f2 <_dtoa_r+0x43a>
 8004494:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 8004498:	2b30      	cmp	r3, #48	; 0x30
 800449a:	f105 32ff 	add.w	r2, r5, #4294967295
 800449e:	d001      	beq.n	80044a4 <_dtoa_r+0x5ec>
 80044a0:	46bb      	mov	fp, r7
 80044a2:	e04d      	b.n	8004540 <_dtoa_r+0x688>
 80044a4:	4615      	mov	r5, r2
 80044a6:	e7f5      	b.n	8004494 <_dtoa_r+0x5dc>
 80044a8:	4b05      	ldr	r3, [pc, #20]	; (80044c0 <_dtoa_r+0x608>)
 80044aa:	f7fc f8a1 	bl	80005f0 <__aeabi_dmul>
 80044ae:	e9cd 0100 	strd	r0, r1, [sp]
 80044b2:	e7bc      	b.n	800442e <_dtoa_r+0x576>
 80044b4:	08008090 	.word	0x08008090
 80044b8:	08008068 	.word	0x08008068
 80044bc:	3ff00000 	.word	0x3ff00000
 80044c0:	40240000 	.word	0x40240000
 80044c4:	401c0000 	.word	0x401c0000
 80044c8:	40140000 	.word	0x40140000
 80044cc:	3fe00000 	.word	0x3fe00000
 80044d0:	e9dd 6700 	ldrd	r6, r7, [sp]
 80044d4:	9d02      	ldr	r5, [sp, #8]
 80044d6:	4642      	mov	r2, r8
 80044d8:	464b      	mov	r3, r9
 80044da:	4630      	mov	r0, r6
 80044dc:	4639      	mov	r1, r7
 80044de:	f7fc f9b1 	bl	8000844 <__aeabi_ddiv>
 80044e2:	f7fc fb35 	bl	8000b50 <__aeabi_d2iz>
 80044e6:	9000      	str	r0, [sp, #0]
 80044e8:	f7fc f81c 	bl	8000524 <__aeabi_i2d>
 80044ec:	4642      	mov	r2, r8
 80044ee:	464b      	mov	r3, r9
 80044f0:	f7fc f87e 	bl	80005f0 <__aeabi_dmul>
 80044f4:	4602      	mov	r2, r0
 80044f6:	460b      	mov	r3, r1
 80044f8:	4630      	mov	r0, r6
 80044fa:	4639      	mov	r1, r7
 80044fc:	f7fb fec4 	bl	8000288 <__aeabi_dsub>
 8004500:	9e00      	ldr	r6, [sp, #0]
 8004502:	9f03      	ldr	r7, [sp, #12]
 8004504:	3630      	adds	r6, #48	; 0x30
 8004506:	f805 6b01 	strb.w	r6, [r5], #1
 800450a:	9e02      	ldr	r6, [sp, #8]
 800450c:	1bae      	subs	r6, r5, r6
 800450e:	42b7      	cmp	r7, r6
 8004510:	4602      	mov	r2, r0
 8004512:	460b      	mov	r3, r1
 8004514:	d138      	bne.n	8004588 <_dtoa_r+0x6d0>
 8004516:	f7fb feb9 	bl	800028c <__adddf3>
 800451a:	4606      	mov	r6, r0
 800451c:	460f      	mov	r7, r1
 800451e:	4602      	mov	r2, r0
 8004520:	460b      	mov	r3, r1
 8004522:	4640      	mov	r0, r8
 8004524:	4649      	mov	r1, r9
 8004526:	f7fc fad5 	bl	8000ad4 <__aeabi_dcmplt>
 800452a:	b9c8      	cbnz	r0, 8004560 <_dtoa_r+0x6a8>
 800452c:	4632      	mov	r2, r6
 800452e:	463b      	mov	r3, r7
 8004530:	4640      	mov	r0, r8
 8004532:	4649      	mov	r1, r9
 8004534:	f7fc fac4 	bl	8000ac0 <__aeabi_dcmpeq>
 8004538:	b110      	cbz	r0, 8004540 <_dtoa_r+0x688>
 800453a:	9b00      	ldr	r3, [sp, #0]
 800453c:	07db      	lsls	r3, r3, #31
 800453e:	d40f      	bmi.n	8004560 <_dtoa_r+0x6a8>
 8004540:	4651      	mov	r1, sl
 8004542:	4620      	mov	r0, r4
 8004544:	f001 f9ac 	bl	80058a0 <_Bfree>
 8004548:	2300      	movs	r3, #0
 800454a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800454c:	702b      	strb	r3, [r5, #0]
 800454e:	f10b 0301 	add.w	r3, fp, #1
 8004552:	6013      	str	r3, [r2, #0]
 8004554:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8004556:	2b00      	cmp	r3, #0
 8004558:	f43f acf8 	beq.w	8003f4c <_dtoa_r+0x94>
 800455c:	601d      	str	r5, [r3, #0]
 800455e:	e4f5      	b.n	8003f4c <_dtoa_r+0x94>
 8004560:	465f      	mov	r7, fp
 8004562:	f815 2c01 	ldrb.w	r2, [r5, #-1]
 8004566:	2a39      	cmp	r2, #57	; 0x39
 8004568:	f105 33ff 	add.w	r3, r5, #4294967295
 800456c:	d106      	bne.n	800457c <_dtoa_r+0x6c4>
 800456e:	9a02      	ldr	r2, [sp, #8]
 8004570:	429a      	cmp	r2, r3
 8004572:	d107      	bne.n	8004584 <_dtoa_r+0x6cc>
 8004574:	2330      	movs	r3, #48	; 0x30
 8004576:	7013      	strb	r3, [r2, #0]
 8004578:	3701      	adds	r7, #1
 800457a:	4613      	mov	r3, r2
 800457c:	781a      	ldrb	r2, [r3, #0]
 800457e:	3201      	adds	r2, #1
 8004580:	701a      	strb	r2, [r3, #0]
 8004582:	e78d      	b.n	80044a0 <_dtoa_r+0x5e8>
 8004584:	461d      	mov	r5, r3
 8004586:	e7ec      	b.n	8004562 <_dtoa_r+0x6aa>
 8004588:	2200      	movs	r2, #0
 800458a:	4ba4      	ldr	r3, [pc, #656]	; (800481c <_dtoa_r+0x964>)
 800458c:	f7fc f830 	bl	80005f0 <__aeabi_dmul>
 8004590:	2200      	movs	r2, #0
 8004592:	2300      	movs	r3, #0
 8004594:	4606      	mov	r6, r0
 8004596:	460f      	mov	r7, r1
 8004598:	f7fc fa92 	bl	8000ac0 <__aeabi_dcmpeq>
 800459c:	2800      	cmp	r0, #0
 800459e:	d09a      	beq.n	80044d6 <_dtoa_r+0x61e>
 80045a0:	e7ce      	b.n	8004540 <_dtoa_r+0x688>
 80045a2:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80045a4:	2a00      	cmp	r2, #0
 80045a6:	f000 80cd 	beq.w	8004744 <_dtoa_r+0x88c>
 80045aa:	9a07      	ldr	r2, [sp, #28]
 80045ac:	2a01      	cmp	r2, #1
 80045ae:	f300 80af 	bgt.w	8004710 <_dtoa_r+0x858>
 80045b2:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80045b4:	2a00      	cmp	r2, #0
 80045b6:	f000 80a7 	beq.w	8004708 <_dtoa_r+0x850>
 80045ba:	f203 4333 	addw	r3, r3, #1075	; 0x433
 80045be:	9e08      	ldr	r6, [sp, #32]
 80045c0:	9d05      	ldr	r5, [sp, #20]
 80045c2:	9a05      	ldr	r2, [sp, #20]
 80045c4:	441a      	add	r2, r3
 80045c6:	9205      	str	r2, [sp, #20]
 80045c8:	9a06      	ldr	r2, [sp, #24]
 80045ca:	2101      	movs	r1, #1
 80045cc:	441a      	add	r2, r3
 80045ce:	4620      	mov	r0, r4
 80045d0:	9206      	str	r2, [sp, #24]
 80045d2:	f001 fa05 	bl	80059e0 <__i2b>
 80045d6:	4607      	mov	r7, r0
 80045d8:	2d00      	cmp	r5, #0
 80045da:	dd0c      	ble.n	80045f6 <_dtoa_r+0x73e>
 80045dc:	9b06      	ldr	r3, [sp, #24]
 80045de:	2b00      	cmp	r3, #0
 80045e0:	dd09      	ble.n	80045f6 <_dtoa_r+0x73e>
 80045e2:	42ab      	cmp	r3, r5
 80045e4:	9a05      	ldr	r2, [sp, #20]
 80045e6:	bfa8      	it	ge
 80045e8:	462b      	movge	r3, r5
 80045ea:	1ad2      	subs	r2, r2, r3
 80045ec:	9205      	str	r2, [sp, #20]
 80045ee:	9a06      	ldr	r2, [sp, #24]
 80045f0:	1aed      	subs	r5, r5, r3
 80045f2:	1ad3      	subs	r3, r2, r3
 80045f4:	9306      	str	r3, [sp, #24]
 80045f6:	9b08      	ldr	r3, [sp, #32]
 80045f8:	b1f3      	cbz	r3, 8004638 <_dtoa_r+0x780>
 80045fa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80045fc:	2b00      	cmp	r3, #0
 80045fe:	f000 80a5 	beq.w	800474c <_dtoa_r+0x894>
 8004602:	2e00      	cmp	r6, #0
 8004604:	dd10      	ble.n	8004628 <_dtoa_r+0x770>
 8004606:	4639      	mov	r1, r7
 8004608:	4632      	mov	r2, r6
 800460a:	4620      	mov	r0, r4
 800460c:	f001 fa7e 	bl	8005b0c <__pow5mult>
 8004610:	4652      	mov	r2, sl
 8004612:	4601      	mov	r1, r0
 8004614:	4607      	mov	r7, r0
 8004616:	4620      	mov	r0, r4
 8004618:	f001 f9eb 	bl	80059f2 <__multiply>
 800461c:	4651      	mov	r1, sl
 800461e:	4680      	mov	r8, r0
 8004620:	4620      	mov	r0, r4
 8004622:	f001 f93d 	bl	80058a0 <_Bfree>
 8004626:	46c2      	mov	sl, r8
 8004628:	9b08      	ldr	r3, [sp, #32]
 800462a:	1b9a      	subs	r2, r3, r6
 800462c:	d004      	beq.n	8004638 <_dtoa_r+0x780>
 800462e:	4651      	mov	r1, sl
 8004630:	4620      	mov	r0, r4
 8004632:	f001 fa6b 	bl	8005b0c <__pow5mult>
 8004636:	4682      	mov	sl, r0
 8004638:	2101      	movs	r1, #1
 800463a:	4620      	mov	r0, r4
 800463c:	f001 f9d0 	bl	80059e0 <__i2b>
 8004640:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8004642:	2b00      	cmp	r3, #0
 8004644:	4606      	mov	r6, r0
 8004646:	f340 8083 	ble.w	8004750 <_dtoa_r+0x898>
 800464a:	461a      	mov	r2, r3
 800464c:	4601      	mov	r1, r0
 800464e:	4620      	mov	r0, r4
 8004650:	f001 fa5c 	bl	8005b0c <__pow5mult>
 8004654:	9b07      	ldr	r3, [sp, #28]
 8004656:	2b01      	cmp	r3, #1
 8004658:	4606      	mov	r6, r0
 800465a:	dd7c      	ble.n	8004756 <_dtoa_r+0x89e>
 800465c:	f04f 0800 	mov.w	r8, #0
 8004660:	6933      	ldr	r3, [r6, #16]
 8004662:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 8004666:	6918      	ldr	r0, [r3, #16]
 8004668:	f001 f96c 	bl	8005944 <__hi0bits>
 800466c:	f1c0 0020 	rsb	r0, r0, #32
 8004670:	9b06      	ldr	r3, [sp, #24]
 8004672:	4418      	add	r0, r3
 8004674:	f010 001f 	ands.w	r0, r0, #31
 8004678:	f000 8096 	beq.w	80047a8 <_dtoa_r+0x8f0>
 800467c:	f1c0 0320 	rsb	r3, r0, #32
 8004680:	2b04      	cmp	r3, #4
 8004682:	f340 8087 	ble.w	8004794 <_dtoa_r+0x8dc>
 8004686:	9b05      	ldr	r3, [sp, #20]
 8004688:	f1c0 001c 	rsb	r0, r0, #28
 800468c:	4403      	add	r3, r0
 800468e:	9305      	str	r3, [sp, #20]
 8004690:	9b06      	ldr	r3, [sp, #24]
 8004692:	4405      	add	r5, r0
 8004694:	4403      	add	r3, r0
 8004696:	9306      	str	r3, [sp, #24]
 8004698:	9b05      	ldr	r3, [sp, #20]
 800469a:	2b00      	cmp	r3, #0
 800469c:	dd05      	ble.n	80046aa <_dtoa_r+0x7f2>
 800469e:	4651      	mov	r1, sl
 80046a0:	461a      	mov	r2, r3
 80046a2:	4620      	mov	r0, r4
 80046a4:	f001 fa80 	bl	8005ba8 <__lshift>
 80046a8:	4682      	mov	sl, r0
 80046aa:	9b06      	ldr	r3, [sp, #24]
 80046ac:	2b00      	cmp	r3, #0
 80046ae:	dd05      	ble.n	80046bc <_dtoa_r+0x804>
 80046b0:	4631      	mov	r1, r6
 80046b2:	461a      	mov	r2, r3
 80046b4:	4620      	mov	r0, r4
 80046b6:	f001 fa77 	bl	8005ba8 <__lshift>
 80046ba:	4606      	mov	r6, r0
 80046bc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80046be:	2b00      	cmp	r3, #0
 80046c0:	d074      	beq.n	80047ac <_dtoa_r+0x8f4>
 80046c2:	4631      	mov	r1, r6
 80046c4:	4650      	mov	r0, sl
 80046c6:	f001 fac0 	bl	8005c4a <__mcmp>
 80046ca:	2800      	cmp	r0, #0
 80046cc:	da6e      	bge.n	80047ac <_dtoa_r+0x8f4>
 80046ce:	2300      	movs	r3, #0
 80046d0:	4651      	mov	r1, sl
 80046d2:	220a      	movs	r2, #10
 80046d4:	4620      	mov	r0, r4
 80046d6:	f001 f8fa 	bl	80058ce <__multadd>
 80046da:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80046dc:	f10b 3bff 	add.w	fp, fp, #4294967295
 80046e0:	4682      	mov	sl, r0
 80046e2:	2b00      	cmp	r3, #0
 80046e4:	f000 81a8 	beq.w	8004a38 <_dtoa_r+0xb80>
 80046e8:	2300      	movs	r3, #0
 80046ea:	4639      	mov	r1, r7
 80046ec:	220a      	movs	r2, #10
 80046ee:	4620      	mov	r0, r4
 80046f0:	f001 f8ed 	bl	80058ce <__multadd>
 80046f4:	9b04      	ldr	r3, [sp, #16]
 80046f6:	2b00      	cmp	r3, #0
 80046f8:	4607      	mov	r7, r0
 80046fa:	f300 80c8 	bgt.w	800488e <_dtoa_r+0x9d6>
 80046fe:	9b07      	ldr	r3, [sp, #28]
 8004700:	2b02      	cmp	r3, #2
 8004702:	f340 80c4 	ble.w	800488e <_dtoa_r+0x9d6>
 8004706:	e059      	b.n	80047bc <_dtoa_r+0x904>
 8004708:	9b14      	ldr	r3, [sp, #80]	; 0x50
 800470a:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
 800470e:	e756      	b.n	80045be <_dtoa_r+0x706>
 8004710:	9b03      	ldr	r3, [sp, #12]
 8004712:	1e5e      	subs	r6, r3, #1
 8004714:	9b08      	ldr	r3, [sp, #32]
 8004716:	42b3      	cmp	r3, r6
 8004718:	bfbf      	itttt	lt
 800471a:	9b08      	ldrlt	r3, [sp, #32]
 800471c:	9608      	strlt	r6, [sp, #32]
 800471e:	1af2      	sublt	r2, r6, r3
 8004720:	9b0b      	ldrlt	r3, [sp, #44]	; 0x2c
 8004722:	bfb6      	itet	lt
 8004724:	189b      	addlt	r3, r3, r2
 8004726:	1b9e      	subge	r6, r3, r6
 8004728:	930b      	strlt	r3, [sp, #44]	; 0x2c
 800472a:	9b03      	ldr	r3, [sp, #12]
 800472c:	bfb8      	it	lt
 800472e:	2600      	movlt	r6, #0
 8004730:	2b00      	cmp	r3, #0
 8004732:	bfb9      	ittee	lt
 8004734:	9b05      	ldrlt	r3, [sp, #20]
 8004736:	9a03      	ldrlt	r2, [sp, #12]
 8004738:	9d05      	ldrge	r5, [sp, #20]
 800473a:	9b03      	ldrge	r3, [sp, #12]
 800473c:	bfbc      	itt	lt
 800473e:	1a9d      	sublt	r5, r3, r2
 8004740:	2300      	movlt	r3, #0
 8004742:	e73e      	b.n	80045c2 <_dtoa_r+0x70a>
 8004744:	9e08      	ldr	r6, [sp, #32]
 8004746:	9d05      	ldr	r5, [sp, #20]
 8004748:	9f09      	ldr	r7, [sp, #36]	; 0x24
 800474a:	e745      	b.n	80045d8 <_dtoa_r+0x720>
 800474c:	9a08      	ldr	r2, [sp, #32]
 800474e:	e76e      	b.n	800462e <_dtoa_r+0x776>
 8004750:	9b07      	ldr	r3, [sp, #28]
 8004752:	2b01      	cmp	r3, #1
 8004754:	dc19      	bgt.n	800478a <_dtoa_r+0x8d2>
 8004756:	9b00      	ldr	r3, [sp, #0]
 8004758:	b9bb      	cbnz	r3, 800478a <_dtoa_r+0x8d2>
 800475a:	9b01      	ldr	r3, [sp, #4]
 800475c:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8004760:	b99b      	cbnz	r3, 800478a <_dtoa_r+0x8d2>
 8004762:	9b01      	ldr	r3, [sp, #4]
 8004764:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8004768:	0d1b      	lsrs	r3, r3, #20
 800476a:	051b      	lsls	r3, r3, #20
 800476c:	b183      	cbz	r3, 8004790 <_dtoa_r+0x8d8>
 800476e:	9b05      	ldr	r3, [sp, #20]
 8004770:	3301      	adds	r3, #1
 8004772:	9305      	str	r3, [sp, #20]
 8004774:	9b06      	ldr	r3, [sp, #24]
 8004776:	3301      	adds	r3, #1
 8004778:	9306      	str	r3, [sp, #24]
 800477a:	f04f 0801 	mov.w	r8, #1
 800477e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8004780:	2b00      	cmp	r3, #0
 8004782:	f47f af6d 	bne.w	8004660 <_dtoa_r+0x7a8>
 8004786:	2001      	movs	r0, #1
 8004788:	e772      	b.n	8004670 <_dtoa_r+0x7b8>
 800478a:	f04f 0800 	mov.w	r8, #0
 800478e:	e7f6      	b.n	800477e <_dtoa_r+0x8c6>
 8004790:	4698      	mov	r8, r3
 8004792:	e7f4      	b.n	800477e <_dtoa_r+0x8c6>
 8004794:	d080      	beq.n	8004698 <_dtoa_r+0x7e0>
 8004796:	9a05      	ldr	r2, [sp, #20]
 8004798:	331c      	adds	r3, #28
 800479a:	441a      	add	r2, r3
 800479c:	9205      	str	r2, [sp, #20]
 800479e:	9a06      	ldr	r2, [sp, #24]
 80047a0:	441a      	add	r2, r3
 80047a2:	441d      	add	r5, r3
 80047a4:	4613      	mov	r3, r2
 80047a6:	e776      	b.n	8004696 <_dtoa_r+0x7de>
 80047a8:	4603      	mov	r3, r0
 80047aa:	e7f4      	b.n	8004796 <_dtoa_r+0x8de>
 80047ac:	9b03      	ldr	r3, [sp, #12]
 80047ae:	2b00      	cmp	r3, #0
 80047b0:	dc36      	bgt.n	8004820 <_dtoa_r+0x968>
 80047b2:	9b07      	ldr	r3, [sp, #28]
 80047b4:	2b02      	cmp	r3, #2
 80047b6:	dd33      	ble.n	8004820 <_dtoa_r+0x968>
 80047b8:	9b03      	ldr	r3, [sp, #12]
 80047ba:	9304      	str	r3, [sp, #16]
 80047bc:	9b04      	ldr	r3, [sp, #16]
 80047be:	b963      	cbnz	r3, 80047da <_dtoa_r+0x922>
 80047c0:	4631      	mov	r1, r6
 80047c2:	2205      	movs	r2, #5
 80047c4:	4620      	mov	r0, r4
 80047c6:	f001 f882 	bl	80058ce <__multadd>
 80047ca:	4601      	mov	r1, r0
 80047cc:	4606      	mov	r6, r0
 80047ce:	4650      	mov	r0, sl
 80047d0:	f001 fa3b 	bl	8005c4a <__mcmp>
 80047d4:	2800      	cmp	r0, #0
 80047d6:	f73f adb6 	bgt.w	8004346 <_dtoa_r+0x48e>
 80047da:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80047dc:	9d02      	ldr	r5, [sp, #8]
 80047de:	ea6f 0b03 	mvn.w	fp, r3
 80047e2:	2300      	movs	r3, #0
 80047e4:	9303      	str	r3, [sp, #12]
 80047e6:	4631      	mov	r1, r6
 80047e8:	4620      	mov	r0, r4
 80047ea:	f001 f859 	bl	80058a0 <_Bfree>
 80047ee:	2f00      	cmp	r7, #0
 80047f0:	f43f aea6 	beq.w	8004540 <_dtoa_r+0x688>
 80047f4:	9b03      	ldr	r3, [sp, #12]
 80047f6:	b12b      	cbz	r3, 8004804 <_dtoa_r+0x94c>
 80047f8:	42bb      	cmp	r3, r7
 80047fa:	d003      	beq.n	8004804 <_dtoa_r+0x94c>
 80047fc:	4619      	mov	r1, r3
 80047fe:	4620      	mov	r0, r4
 8004800:	f001 f84e 	bl	80058a0 <_Bfree>
 8004804:	4639      	mov	r1, r7
 8004806:	4620      	mov	r0, r4
 8004808:	f001 f84a 	bl	80058a0 <_Bfree>
 800480c:	e698      	b.n	8004540 <_dtoa_r+0x688>
 800480e:	2600      	movs	r6, #0
 8004810:	4637      	mov	r7, r6
 8004812:	e7e2      	b.n	80047da <_dtoa_r+0x922>
 8004814:	46bb      	mov	fp, r7
 8004816:	4637      	mov	r7, r6
 8004818:	e595      	b.n	8004346 <_dtoa_r+0x48e>
 800481a:	bf00      	nop
 800481c:	40240000 	.word	0x40240000
 8004820:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004822:	bb93      	cbnz	r3, 800488a <_dtoa_r+0x9d2>
 8004824:	9b03      	ldr	r3, [sp, #12]
 8004826:	9304      	str	r3, [sp, #16]
 8004828:	9d02      	ldr	r5, [sp, #8]
 800482a:	4631      	mov	r1, r6
 800482c:	4650      	mov	r0, sl
 800482e:	f7ff fab5 	bl	8003d9c <quorem>
 8004832:	f100 0930 	add.w	r9, r0, #48	; 0x30
 8004836:	f805 9b01 	strb.w	r9, [r5], #1
 800483a:	9b02      	ldr	r3, [sp, #8]
 800483c:	9a04      	ldr	r2, [sp, #16]
 800483e:	1aeb      	subs	r3, r5, r3
 8004840:	429a      	cmp	r2, r3
 8004842:	f300 80dc 	bgt.w	80049fe <_dtoa_r+0xb46>
 8004846:	9b02      	ldr	r3, [sp, #8]
 8004848:	2a01      	cmp	r2, #1
 800484a:	bfac      	ite	ge
 800484c:	189b      	addge	r3, r3, r2
 800484e:	3301      	addlt	r3, #1
 8004850:	4698      	mov	r8, r3
 8004852:	2300      	movs	r3, #0
 8004854:	9303      	str	r3, [sp, #12]
 8004856:	4651      	mov	r1, sl
 8004858:	2201      	movs	r2, #1
 800485a:	4620      	mov	r0, r4
 800485c:	f001 f9a4 	bl	8005ba8 <__lshift>
 8004860:	4631      	mov	r1, r6
 8004862:	4682      	mov	sl, r0
 8004864:	f001 f9f1 	bl	8005c4a <__mcmp>
 8004868:	2800      	cmp	r0, #0
 800486a:	f300 808d 	bgt.w	8004988 <_dtoa_r+0xad0>
 800486e:	d103      	bne.n	8004878 <_dtoa_r+0x9c0>
 8004870:	f019 0f01 	tst.w	r9, #1
 8004874:	f040 8088 	bne.w	8004988 <_dtoa_r+0xad0>
 8004878:	4645      	mov	r5, r8
 800487a:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 800487e:	2b30      	cmp	r3, #48	; 0x30
 8004880:	f105 32ff 	add.w	r2, r5, #4294967295
 8004884:	d1af      	bne.n	80047e6 <_dtoa_r+0x92e>
 8004886:	4615      	mov	r5, r2
 8004888:	e7f7      	b.n	800487a <_dtoa_r+0x9c2>
 800488a:	9b03      	ldr	r3, [sp, #12]
 800488c:	9304      	str	r3, [sp, #16]
 800488e:	2d00      	cmp	r5, #0
 8004890:	dd05      	ble.n	800489e <_dtoa_r+0x9e6>
 8004892:	4639      	mov	r1, r7
 8004894:	462a      	mov	r2, r5
 8004896:	4620      	mov	r0, r4
 8004898:	f001 f986 	bl	8005ba8 <__lshift>
 800489c:	4607      	mov	r7, r0
 800489e:	f1b8 0f00 	cmp.w	r8, #0
 80048a2:	d04c      	beq.n	800493e <_dtoa_r+0xa86>
 80048a4:	6879      	ldr	r1, [r7, #4]
 80048a6:	4620      	mov	r0, r4
 80048a8:	f000 ffc6 	bl	8005838 <_Balloc>
 80048ac:	693a      	ldr	r2, [r7, #16]
 80048ae:	3202      	adds	r2, #2
 80048b0:	4605      	mov	r5, r0
 80048b2:	0092      	lsls	r2, r2, #2
 80048b4:	f107 010c 	add.w	r1, r7, #12
 80048b8:	300c      	adds	r0, #12
 80048ba:	f000 ff83 	bl	80057c4 <memcpy>
 80048be:	2201      	movs	r2, #1
 80048c0:	4629      	mov	r1, r5
 80048c2:	4620      	mov	r0, r4
 80048c4:	f001 f970 	bl	8005ba8 <__lshift>
 80048c8:	9b00      	ldr	r3, [sp, #0]
 80048ca:	f8dd 8008 	ldr.w	r8, [sp, #8]
 80048ce:	9703      	str	r7, [sp, #12]
 80048d0:	f003 0301 	and.w	r3, r3, #1
 80048d4:	4607      	mov	r7, r0
 80048d6:	9305      	str	r3, [sp, #20]
 80048d8:	4631      	mov	r1, r6
 80048da:	4650      	mov	r0, sl
 80048dc:	f7ff fa5e 	bl	8003d9c <quorem>
 80048e0:	9903      	ldr	r1, [sp, #12]
 80048e2:	4605      	mov	r5, r0
 80048e4:	f100 0930 	add.w	r9, r0, #48	; 0x30
 80048e8:	4650      	mov	r0, sl
 80048ea:	f001 f9ae 	bl	8005c4a <__mcmp>
 80048ee:	463a      	mov	r2, r7
 80048f0:	9000      	str	r0, [sp, #0]
 80048f2:	4631      	mov	r1, r6
 80048f4:	4620      	mov	r0, r4
 80048f6:	f001 f9c2 	bl	8005c7e <__mdiff>
 80048fa:	68c3      	ldr	r3, [r0, #12]
 80048fc:	4602      	mov	r2, r0
 80048fe:	bb03      	cbnz	r3, 8004942 <_dtoa_r+0xa8a>
 8004900:	4601      	mov	r1, r0
 8004902:	9006      	str	r0, [sp, #24]
 8004904:	4650      	mov	r0, sl
 8004906:	f001 f9a0 	bl	8005c4a <__mcmp>
 800490a:	9a06      	ldr	r2, [sp, #24]
 800490c:	4603      	mov	r3, r0
 800490e:	4611      	mov	r1, r2
 8004910:	4620      	mov	r0, r4
 8004912:	9306      	str	r3, [sp, #24]
 8004914:	f000 ffc4 	bl	80058a0 <_Bfree>
 8004918:	9b06      	ldr	r3, [sp, #24]
 800491a:	b9a3      	cbnz	r3, 8004946 <_dtoa_r+0xa8e>
 800491c:	9a07      	ldr	r2, [sp, #28]
 800491e:	b992      	cbnz	r2, 8004946 <_dtoa_r+0xa8e>
 8004920:	9a05      	ldr	r2, [sp, #20]
 8004922:	b982      	cbnz	r2, 8004946 <_dtoa_r+0xa8e>
 8004924:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
 8004928:	d029      	beq.n	800497e <_dtoa_r+0xac6>
 800492a:	9b00      	ldr	r3, [sp, #0]
 800492c:	2b00      	cmp	r3, #0
 800492e:	dd01      	ble.n	8004934 <_dtoa_r+0xa7c>
 8004930:	f105 0931 	add.w	r9, r5, #49	; 0x31
 8004934:	f108 0501 	add.w	r5, r8, #1
 8004938:	f888 9000 	strb.w	r9, [r8]
 800493c:	e753      	b.n	80047e6 <_dtoa_r+0x92e>
 800493e:	4638      	mov	r0, r7
 8004940:	e7c2      	b.n	80048c8 <_dtoa_r+0xa10>
 8004942:	2301      	movs	r3, #1
 8004944:	e7e3      	b.n	800490e <_dtoa_r+0xa56>
 8004946:	9a00      	ldr	r2, [sp, #0]
 8004948:	2a00      	cmp	r2, #0
 800494a:	db04      	blt.n	8004956 <_dtoa_r+0xa9e>
 800494c:	d125      	bne.n	800499a <_dtoa_r+0xae2>
 800494e:	9a07      	ldr	r2, [sp, #28]
 8004950:	bb1a      	cbnz	r2, 800499a <_dtoa_r+0xae2>
 8004952:	9a05      	ldr	r2, [sp, #20]
 8004954:	bb0a      	cbnz	r2, 800499a <_dtoa_r+0xae2>
 8004956:	2b00      	cmp	r3, #0
 8004958:	ddec      	ble.n	8004934 <_dtoa_r+0xa7c>
 800495a:	4651      	mov	r1, sl
 800495c:	2201      	movs	r2, #1
 800495e:	4620      	mov	r0, r4
 8004960:	f001 f922 	bl	8005ba8 <__lshift>
 8004964:	4631      	mov	r1, r6
 8004966:	4682      	mov	sl, r0
 8004968:	f001 f96f 	bl	8005c4a <__mcmp>
 800496c:	2800      	cmp	r0, #0
 800496e:	dc03      	bgt.n	8004978 <_dtoa_r+0xac0>
 8004970:	d1e0      	bne.n	8004934 <_dtoa_r+0xa7c>
 8004972:	f019 0f01 	tst.w	r9, #1
 8004976:	d0dd      	beq.n	8004934 <_dtoa_r+0xa7c>
 8004978:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
 800497c:	d1d8      	bne.n	8004930 <_dtoa_r+0xa78>
 800497e:	2339      	movs	r3, #57	; 0x39
 8004980:	f888 3000 	strb.w	r3, [r8]
 8004984:	f108 0801 	add.w	r8, r8, #1
 8004988:	4645      	mov	r5, r8
 800498a:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 800498e:	2b39      	cmp	r3, #57	; 0x39
 8004990:	f105 32ff 	add.w	r2, r5, #4294967295
 8004994:	d03b      	beq.n	8004a0e <_dtoa_r+0xb56>
 8004996:	3301      	adds	r3, #1
 8004998:	e040      	b.n	8004a1c <_dtoa_r+0xb64>
 800499a:	2b00      	cmp	r3, #0
 800499c:	f108 0501 	add.w	r5, r8, #1
 80049a0:	dd05      	ble.n	80049ae <_dtoa_r+0xaf6>
 80049a2:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
 80049a6:	d0ea      	beq.n	800497e <_dtoa_r+0xac6>
 80049a8:	f109 0901 	add.w	r9, r9, #1
 80049ac:	e7c4      	b.n	8004938 <_dtoa_r+0xa80>
 80049ae:	9b02      	ldr	r3, [sp, #8]
 80049b0:	9a04      	ldr	r2, [sp, #16]
 80049b2:	f805 9c01 	strb.w	r9, [r5, #-1]
 80049b6:	1aeb      	subs	r3, r5, r3
 80049b8:	4293      	cmp	r3, r2
 80049ba:	46a8      	mov	r8, r5
 80049bc:	f43f af4b 	beq.w	8004856 <_dtoa_r+0x99e>
 80049c0:	4651      	mov	r1, sl
 80049c2:	2300      	movs	r3, #0
 80049c4:	220a      	movs	r2, #10
 80049c6:	4620      	mov	r0, r4
 80049c8:	f000 ff81 	bl	80058ce <__multadd>
 80049cc:	9b03      	ldr	r3, [sp, #12]
 80049ce:	9903      	ldr	r1, [sp, #12]
 80049d0:	42bb      	cmp	r3, r7
 80049d2:	4682      	mov	sl, r0
 80049d4:	f04f 0300 	mov.w	r3, #0
 80049d8:	f04f 020a 	mov.w	r2, #10
 80049dc:	4620      	mov	r0, r4
 80049de:	d104      	bne.n	80049ea <_dtoa_r+0xb32>
 80049e0:	f000 ff75 	bl	80058ce <__multadd>
 80049e4:	9003      	str	r0, [sp, #12]
 80049e6:	4607      	mov	r7, r0
 80049e8:	e776      	b.n	80048d8 <_dtoa_r+0xa20>
 80049ea:	f000 ff70 	bl	80058ce <__multadd>
 80049ee:	2300      	movs	r3, #0
 80049f0:	9003      	str	r0, [sp, #12]
 80049f2:	220a      	movs	r2, #10
 80049f4:	4639      	mov	r1, r7
 80049f6:	4620      	mov	r0, r4
 80049f8:	f000 ff69 	bl	80058ce <__multadd>
 80049fc:	e7f3      	b.n	80049e6 <_dtoa_r+0xb2e>
 80049fe:	4651      	mov	r1, sl
 8004a00:	2300      	movs	r3, #0
 8004a02:	220a      	movs	r2, #10
 8004a04:	4620      	mov	r0, r4
 8004a06:	f000 ff62 	bl	80058ce <__multadd>
 8004a0a:	4682      	mov	sl, r0
 8004a0c:	e70d      	b.n	800482a <_dtoa_r+0x972>
 8004a0e:	9b02      	ldr	r3, [sp, #8]
 8004a10:	4293      	cmp	r3, r2
 8004a12:	d105      	bne.n	8004a20 <_dtoa_r+0xb68>
 8004a14:	9a02      	ldr	r2, [sp, #8]
 8004a16:	f10b 0b01 	add.w	fp, fp, #1
 8004a1a:	2331      	movs	r3, #49	; 0x31
 8004a1c:	7013      	strb	r3, [r2, #0]
 8004a1e:	e6e2      	b.n	80047e6 <_dtoa_r+0x92e>
 8004a20:	4615      	mov	r5, r2
 8004a22:	e7b2      	b.n	800498a <_dtoa_r+0xad2>
 8004a24:	4b09      	ldr	r3, [pc, #36]	; (8004a4c <_dtoa_r+0xb94>)
 8004a26:	f7ff baae 	b.w	8003f86 <_dtoa_r+0xce>
 8004a2a:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8004a2c:	2b00      	cmp	r3, #0
 8004a2e:	f47f aa88 	bne.w	8003f42 <_dtoa_r+0x8a>
 8004a32:	4b07      	ldr	r3, [pc, #28]	; (8004a50 <_dtoa_r+0xb98>)
 8004a34:	f7ff baa7 	b.w	8003f86 <_dtoa_r+0xce>
 8004a38:	9b04      	ldr	r3, [sp, #16]
 8004a3a:	2b00      	cmp	r3, #0
 8004a3c:	f73f aef4 	bgt.w	8004828 <_dtoa_r+0x970>
 8004a40:	9b07      	ldr	r3, [sp, #28]
 8004a42:	2b02      	cmp	r3, #2
 8004a44:	f77f aef0 	ble.w	8004828 <_dtoa_r+0x970>
 8004a48:	e6b8      	b.n	80047bc <_dtoa_r+0x904>
 8004a4a:	bf00      	nop
 8004a4c:	08007fd2 	.word	0x08007fd2
 8004a50:	08007ff4 	.word	0x08007ff4

08004a54 <__sflush_r>:
 8004a54:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8004a58:	b293      	uxth	r3, r2
 8004a5a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004a5e:	4605      	mov	r5, r0
 8004a60:	0718      	lsls	r0, r3, #28
 8004a62:	460c      	mov	r4, r1
 8004a64:	d461      	bmi.n	8004b2a <__sflush_r+0xd6>
 8004a66:	684b      	ldr	r3, [r1, #4]
 8004a68:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8004a6c:	2b00      	cmp	r3, #0
 8004a6e:	818a      	strh	r2, [r1, #12]
 8004a70:	dc05      	bgt.n	8004a7e <__sflush_r+0x2a>
 8004a72:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8004a74:	2b00      	cmp	r3, #0
 8004a76:	dc02      	bgt.n	8004a7e <__sflush_r+0x2a>
 8004a78:	2000      	movs	r0, #0
 8004a7a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8004a7e:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8004a80:	2e00      	cmp	r6, #0
 8004a82:	d0f9      	beq.n	8004a78 <__sflush_r+0x24>
 8004a84:	2300      	movs	r3, #0
 8004a86:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8004a8a:	682f      	ldr	r7, [r5, #0]
 8004a8c:	602b      	str	r3, [r5, #0]
 8004a8e:	d037      	beq.n	8004b00 <__sflush_r+0xac>
 8004a90:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8004a92:	89a3      	ldrh	r3, [r4, #12]
 8004a94:	075a      	lsls	r2, r3, #29
 8004a96:	d505      	bpl.n	8004aa4 <__sflush_r+0x50>
 8004a98:	6863      	ldr	r3, [r4, #4]
 8004a9a:	1ac0      	subs	r0, r0, r3
 8004a9c:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8004a9e:	b10b      	cbz	r3, 8004aa4 <__sflush_r+0x50>
 8004aa0:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8004aa2:	1ac0      	subs	r0, r0, r3
 8004aa4:	2300      	movs	r3, #0
 8004aa6:	4602      	mov	r2, r0
 8004aa8:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8004aaa:	6a21      	ldr	r1, [r4, #32]
 8004aac:	4628      	mov	r0, r5
 8004aae:	47b0      	blx	r6
 8004ab0:	1c43      	adds	r3, r0, #1
 8004ab2:	89a3      	ldrh	r3, [r4, #12]
 8004ab4:	d106      	bne.n	8004ac4 <__sflush_r+0x70>
 8004ab6:	6829      	ldr	r1, [r5, #0]
 8004ab8:	291d      	cmp	r1, #29
 8004aba:	d84f      	bhi.n	8004b5c <__sflush_r+0x108>
 8004abc:	4a2d      	ldr	r2, [pc, #180]	; (8004b74 <__sflush_r+0x120>)
 8004abe:	40ca      	lsrs	r2, r1
 8004ac0:	07d6      	lsls	r6, r2, #31
 8004ac2:	d54b      	bpl.n	8004b5c <__sflush_r+0x108>
 8004ac4:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8004ac8:	b21b      	sxth	r3, r3
 8004aca:	2200      	movs	r2, #0
 8004acc:	6062      	str	r2, [r4, #4]
 8004ace:	04d9      	lsls	r1, r3, #19
 8004ad0:	6922      	ldr	r2, [r4, #16]
 8004ad2:	81a3      	strh	r3, [r4, #12]
 8004ad4:	6022      	str	r2, [r4, #0]
 8004ad6:	d504      	bpl.n	8004ae2 <__sflush_r+0x8e>
 8004ad8:	1c42      	adds	r2, r0, #1
 8004ada:	d101      	bne.n	8004ae0 <__sflush_r+0x8c>
 8004adc:	682b      	ldr	r3, [r5, #0]
 8004ade:	b903      	cbnz	r3, 8004ae2 <__sflush_r+0x8e>
 8004ae0:	6560      	str	r0, [r4, #84]	; 0x54
 8004ae2:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8004ae4:	602f      	str	r7, [r5, #0]
 8004ae6:	2900      	cmp	r1, #0
 8004ae8:	d0c6      	beq.n	8004a78 <__sflush_r+0x24>
 8004aea:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8004aee:	4299      	cmp	r1, r3
 8004af0:	d002      	beq.n	8004af8 <__sflush_r+0xa4>
 8004af2:	4628      	mov	r0, r5
 8004af4:	f000 f9aa 	bl	8004e4c <_free_r>
 8004af8:	2000      	movs	r0, #0
 8004afa:	6360      	str	r0, [r4, #52]	; 0x34
 8004afc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8004b00:	6a21      	ldr	r1, [r4, #32]
 8004b02:	2301      	movs	r3, #1
 8004b04:	4628      	mov	r0, r5
 8004b06:	47b0      	blx	r6
 8004b08:	1c41      	adds	r1, r0, #1
 8004b0a:	d1c2      	bne.n	8004a92 <__sflush_r+0x3e>
 8004b0c:	682b      	ldr	r3, [r5, #0]
 8004b0e:	2b00      	cmp	r3, #0
 8004b10:	d0bf      	beq.n	8004a92 <__sflush_r+0x3e>
 8004b12:	2b1d      	cmp	r3, #29
 8004b14:	d001      	beq.n	8004b1a <__sflush_r+0xc6>
 8004b16:	2b16      	cmp	r3, #22
 8004b18:	d101      	bne.n	8004b1e <__sflush_r+0xca>
 8004b1a:	602f      	str	r7, [r5, #0]
 8004b1c:	e7ac      	b.n	8004a78 <__sflush_r+0x24>
 8004b1e:	89a3      	ldrh	r3, [r4, #12]
 8004b20:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8004b24:	81a3      	strh	r3, [r4, #12]
 8004b26:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8004b2a:	690f      	ldr	r7, [r1, #16]
 8004b2c:	2f00      	cmp	r7, #0
 8004b2e:	d0a3      	beq.n	8004a78 <__sflush_r+0x24>
 8004b30:	079b      	lsls	r3, r3, #30
 8004b32:	680e      	ldr	r6, [r1, #0]
 8004b34:	bf08      	it	eq
 8004b36:	694b      	ldreq	r3, [r1, #20]
 8004b38:	600f      	str	r7, [r1, #0]
 8004b3a:	bf18      	it	ne
 8004b3c:	2300      	movne	r3, #0
 8004b3e:	eba6 0807 	sub.w	r8, r6, r7
 8004b42:	608b      	str	r3, [r1, #8]
 8004b44:	f1b8 0f00 	cmp.w	r8, #0
 8004b48:	dd96      	ble.n	8004a78 <__sflush_r+0x24>
 8004b4a:	4643      	mov	r3, r8
 8004b4c:	463a      	mov	r2, r7
 8004b4e:	6a21      	ldr	r1, [r4, #32]
 8004b50:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8004b52:	4628      	mov	r0, r5
 8004b54:	47b0      	blx	r6
 8004b56:	2800      	cmp	r0, #0
 8004b58:	dc07      	bgt.n	8004b6a <__sflush_r+0x116>
 8004b5a:	89a3      	ldrh	r3, [r4, #12]
 8004b5c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8004b60:	81a3      	strh	r3, [r4, #12]
 8004b62:	f04f 30ff 	mov.w	r0, #4294967295
 8004b66:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8004b6a:	4407      	add	r7, r0
 8004b6c:	eba8 0800 	sub.w	r8, r8, r0
 8004b70:	e7e8      	b.n	8004b44 <__sflush_r+0xf0>
 8004b72:	bf00      	nop
 8004b74:	20400001 	.word	0x20400001

08004b78 <_fflush_r>:
 8004b78:	b538      	push	{r3, r4, r5, lr}
 8004b7a:	690b      	ldr	r3, [r1, #16]
 8004b7c:	4605      	mov	r5, r0
 8004b7e:	460c      	mov	r4, r1
 8004b80:	b913      	cbnz	r3, 8004b88 <_fflush_r+0x10>
 8004b82:	2500      	movs	r5, #0
 8004b84:	4628      	mov	r0, r5
 8004b86:	bd38      	pop	{r3, r4, r5, pc}
 8004b88:	b118      	cbz	r0, 8004b92 <_fflush_r+0x1a>
 8004b8a:	6983      	ldr	r3, [r0, #24]
 8004b8c:	b90b      	cbnz	r3, 8004b92 <_fflush_r+0x1a>
 8004b8e:	f000 f887 	bl	8004ca0 <__sinit>
 8004b92:	4b14      	ldr	r3, [pc, #80]	; (8004be4 <_fflush_r+0x6c>)
 8004b94:	429c      	cmp	r4, r3
 8004b96:	d11b      	bne.n	8004bd0 <_fflush_r+0x58>
 8004b98:	686c      	ldr	r4, [r5, #4]
 8004b9a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8004b9e:	2b00      	cmp	r3, #0
 8004ba0:	d0ef      	beq.n	8004b82 <_fflush_r+0xa>
 8004ba2:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8004ba4:	07d0      	lsls	r0, r2, #31
 8004ba6:	d404      	bmi.n	8004bb2 <_fflush_r+0x3a>
 8004ba8:	0599      	lsls	r1, r3, #22
 8004baa:	d402      	bmi.n	8004bb2 <_fflush_r+0x3a>
 8004bac:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8004bae:	f000 fb85 	bl	80052bc <__retarget_lock_acquire_recursive>
 8004bb2:	4628      	mov	r0, r5
 8004bb4:	4621      	mov	r1, r4
 8004bb6:	f7ff ff4d 	bl	8004a54 <__sflush_r>
 8004bba:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8004bbc:	07da      	lsls	r2, r3, #31
 8004bbe:	4605      	mov	r5, r0
 8004bc0:	d4e0      	bmi.n	8004b84 <_fflush_r+0xc>
 8004bc2:	89a3      	ldrh	r3, [r4, #12]
 8004bc4:	059b      	lsls	r3, r3, #22
 8004bc6:	d4dd      	bmi.n	8004b84 <_fflush_r+0xc>
 8004bc8:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8004bca:	f000 fb78 	bl	80052be <__retarget_lock_release_recursive>
 8004bce:	e7d9      	b.n	8004b84 <_fflush_r+0xc>
 8004bd0:	4b05      	ldr	r3, [pc, #20]	; (8004be8 <_fflush_r+0x70>)
 8004bd2:	429c      	cmp	r4, r3
 8004bd4:	d101      	bne.n	8004bda <_fflush_r+0x62>
 8004bd6:	68ac      	ldr	r4, [r5, #8]
 8004bd8:	e7df      	b.n	8004b9a <_fflush_r+0x22>
 8004bda:	4b04      	ldr	r3, [pc, #16]	; (8004bec <_fflush_r+0x74>)
 8004bdc:	429c      	cmp	r4, r3
 8004bde:	bf08      	it	eq
 8004be0:	68ec      	ldreq	r4, [r5, #12]
 8004be2:	e7da      	b.n	8004b9a <_fflush_r+0x22>
 8004be4:	08008024 	.word	0x08008024
 8004be8:	08008044 	.word	0x08008044
 8004bec:	08008004 	.word	0x08008004

08004bf0 <_cleanup_r>:
 8004bf0:	4901      	ldr	r1, [pc, #4]	; (8004bf8 <_cleanup_r+0x8>)
 8004bf2:	f000 bb35 	b.w	8005260 <_fwalk_reent>
 8004bf6:	bf00      	nop
 8004bf8:	08006289 	.word	0x08006289

08004bfc <std.isra.0>:
 8004bfc:	2300      	movs	r3, #0
 8004bfe:	b510      	push	{r4, lr}
 8004c00:	4604      	mov	r4, r0
 8004c02:	6003      	str	r3, [r0, #0]
 8004c04:	6043      	str	r3, [r0, #4]
 8004c06:	6083      	str	r3, [r0, #8]
 8004c08:	8181      	strh	r1, [r0, #12]
 8004c0a:	6643      	str	r3, [r0, #100]	; 0x64
 8004c0c:	81c2      	strh	r2, [r0, #14]
 8004c0e:	6103      	str	r3, [r0, #16]
 8004c10:	6143      	str	r3, [r0, #20]
 8004c12:	6183      	str	r3, [r0, #24]
 8004c14:	4619      	mov	r1, r3
 8004c16:	2208      	movs	r2, #8
 8004c18:	305c      	adds	r0, #92	; 0x5c
 8004c1a:	f000 fdf8 	bl	800580e <memset>
 8004c1e:	4b05      	ldr	r3, [pc, #20]	; (8004c34 <std.isra.0+0x38>)
 8004c20:	6263      	str	r3, [r4, #36]	; 0x24
 8004c22:	4b05      	ldr	r3, [pc, #20]	; (8004c38 <std.isra.0+0x3c>)
 8004c24:	62a3      	str	r3, [r4, #40]	; 0x28
 8004c26:	4b05      	ldr	r3, [pc, #20]	; (8004c3c <std.isra.0+0x40>)
 8004c28:	62e3      	str	r3, [r4, #44]	; 0x2c
 8004c2a:	4b05      	ldr	r3, [pc, #20]	; (8004c40 <std.isra.0+0x44>)
 8004c2c:	6224      	str	r4, [r4, #32]
 8004c2e:	6323      	str	r3, [r4, #48]	; 0x30
 8004c30:	bd10      	pop	{r4, pc}
 8004c32:	bf00      	nop
 8004c34:	080060f9 	.word	0x080060f9
 8004c38:	0800611b 	.word	0x0800611b
 8004c3c:	08006153 	.word	0x08006153
 8004c40:	08006177 	.word	0x08006177

08004c44 <__sfmoreglue>:
 8004c44:	b570      	push	{r4, r5, r6, lr}
 8004c46:	1e4a      	subs	r2, r1, #1
 8004c48:	2568      	movs	r5, #104	; 0x68
 8004c4a:	4355      	muls	r5, r2
 8004c4c:	460e      	mov	r6, r1
 8004c4e:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8004c52:	f000 fba9 	bl	80053a8 <_malloc_r>
 8004c56:	4604      	mov	r4, r0
 8004c58:	b140      	cbz	r0, 8004c6c <__sfmoreglue+0x28>
 8004c5a:	2100      	movs	r1, #0
 8004c5c:	e880 0042 	stmia.w	r0, {r1, r6}
 8004c60:	300c      	adds	r0, #12
 8004c62:	60a0      	str	r0, [r4, #8]
 8004c64:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8004c68:	f000 fdd1 	bl	800580e <memset>
 8004c6c:	4620      	mov	r0, r4
 8004c6e:	bd70      	pop	{r4, r5, r6, pc}

08004c70 <__sfp_lock_acquire>:
 8004c70:	4801      	ldr	r0, [pc, #4]	; (8004c78 <__sfp_lock_acquire+0x8>)
 8004c72:	f000 bb23 	b.w	80052bc <__retarget_lock_acquire_recursive>
 8004c76:	bf00      	nop
 8004c78:	200007c8 	.word	0x200007c8

08004c7c <__sfp_lock_release>:
 8004c7c:	4801      	ldr	r0, [pc, #4]	; (8004c84 <__sfp_lock_release+0x8>)
 8004c7e:	f000 bb1e 	b.w	80052be <__retarget_lock_release_recursive>
 8004c82:	bf00      	nop
 8004c84:	200007c8 	.word	0x200007c8

08004c88 <__sinit_lock_acquire>:
 8004c88:	4801      	ldr	r0, [pc, #4]	; (8004c90 <__sinit_lock_acquire+0x8>)
 8004c8a:	f000 bb17 	b.w	80052bc <__retarget_lock_acquire_recursive>
 8004c8e:	bf00      	nop
 8004c90:	200007c3 	.word	0x200007c3

08004c94 <__sinit_lock_release>:
 8004c94:	4801      	ldr	r0, [pc, #4]	; (8004c9c <__sinit_lock_release+0x8>)
 8004c96:	f000 bb12 	b.w	80052be <__retarget_lock_release_recursive>
 8004c9a:	bf00      	nop
 8004c9c:	200007c3 	.word	0x200007c3

08004ca0 <__sinit>:
 8004ca0:	b510      	push	{r4, lr}
 8004ca2:	4604      	mov	r4, r0
 8004ca4:	f7ff fff0 	bl	8004c88 <__sinit_lock_acquire>
 8004ca8:	69a3      	ldr	r3, [r4, #24]
 8004caa:	b11b      	cbz	r3, 8004cb4 <__sinit+0x14>
 8004cac:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8004cb0:	f7ff bff0 	b.w	8004c94 <__sinit_lock_release>
 8004cb4:	f8c4 30d8 	str.w	r3, [r4, #216]	; 0xd8
 8004cb8:	f8c4 30dc 	str.w	r3, [r4, #220]	; 0xdc
 8004cbc:	f8c4 30e0 	str.w	r3, [r4, #224]	; 0xe0
 8004cc0:	4b12      	ldr	r3, [pc, #72]	; (8004d0c <__sinit+0x6c>)
 8004cc2:	4a13      	ldr	r2, [pc, #76]	; (8004d10 <__sinit+0x70>)
 8004cc4:	681b      	ldr	r3, [r3, #0]
 8004cc6:	62a2      	str	r2, [r4, #40]	; 0x28
 8004cc8:	429c      	cmp	r4, r3
 8004cca:	bf04      	itt	eq
 8004ccc:	2301      	moveq	r3, #1
 8004cce:	61a3      	streq	r3, [r4, #24]
 8004cd0:	4620      	mov	r0, r4
 8004cd2:	f000 f81f 	bl	8004d14 <__sfp>
 8004cd6:	6060      	str	r0, [r4, #4]
 8004cd8:	4620      	mov	r0, r4
 8004cda:	f000 f81b 	bl	8004d14 <__sfp>
 8004cde:	60a0      	str	r0, [r4, #8]
 8004ce0:	4620      	mov	r0, r4
 8004ce2:	f000 f817 	bl	8004d14 <__sfp>
 8004ce6:	2200      	movs	r2, #0
 8004ce8:	60e0      	str	r0, [r4, #12]
 8004cea:	2104      	movs	r1, #4
 8004cec:	6860      	ldr	r0, [r4, #4]
 8004cee:	f7ff ff85 	bl	8004bfc <std.isra.0>
 8004cf2:	2201      	movs	r2, #1
 8004cf4:	2109      	movs	r1, #9
 8004cf6:	68a0      	ldr	r0, [r4, #8]
 8004cf8:	f7ff ff80 	bl	8004bfc <std.isra.0>
 8004cfc:	2202      	movs	r2, #2
 8004cfe:	2112      	movs	r1, #18
 8004d00:	68e0      	ldr	r0, [r4, #12]
 8004d02:	f7ff ff7b 	bl	8004bfc <std.isra.0>
 8004d06:	2301      	movs	r3, #1
 8004d08:	61a3      	str	r3, [r4, #24]
 8004d0a:	e7cf      	b.n	8004cac <__sinit+0xc>
 8004d0c:	08008064 	.word	0x08008064
 8004d10:	08004bf1 	.word	0x08004bf1

08004d14 <__sfp>:
 8004d14:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004d16:	4607      	mov	r7, r0
 8004d18:	f7ff ffaa 	bl	8004c70 <__sfp_lock_acquire>
 8004d1c:	4b1f      	ldr	r3, [pc, #124]	; (8004d9c <__sfp+0x88>)
 8004d1e:	681e      	ldr	r6, [r3, #0]
 8004d20:	69b3      	ldr	r3, [r6, #24]
 8004d22:	b913      	cbnz	r3, 8004d2a <__sfp+0x16>
 8004d24:	4630      	mov	r0, r6
 8004d26:	f7ff ffbb 	bl	8004ca0 <__sinit>
 8004d2a:	36d8      	adds	r6, #216	; 0xd8
 8004d2c:	68b4      	ldr	r4, [r6, #8]
 8004d2e:	6873      	ldr	r3, [r6, #4]
 8004d30:	3b01      	subs	r3, #1
 8004d32:	d503      	bpl.n	8004d3c <__sfp+0x28>
 8004d34:	6833      	ldr	r3, [r6, #0]
 8004d36:	b133      	cbz	r3, 8004d46 <__sfp+0x32>
 8004d38:	6836      	ldr	r6, [r6, #0]
 8004d3a:	e7f7      	b.n	8004d2c <__sfp+0x18>
 8004d3c:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8004d40:	b17d      	cbz	r5, 8004d62 <__sfp+0x4e>
 8004d42:	3468      	adds	r4, #104	; 0x68
 8004d44:	e7f4      	b.n	8004d30 <__sfp+0x1c>
 8004d46:	2104      	movs	r1, #4
 8004d48:	4638      	mov	r0, r7
 8004d4a:	f7ff ff7b 	bl	8004c44 <__sfmoreglue>
 8004d4e:	4604      	mov	r4, r0
 8004d50:	6030      	str	r0, [r6, #0]
 8004d52:	2800      	cmp	r0, #0
 8004d54:	d1f0      	bne.n	8004d38 <__sfp+0x24>
 8004d56:	f7ff ff91 	bl	8004c7c <__sfp_lock_release>
 8004d5a:	230c      	movs	r3, #12
 8004d5c:	603b      	str	r3, [r7, #0]
 8004d5e:	4620      	mov	r0, r4
 8004d60:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8004d62:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8004d66:	81e3      	strh	r3, [r4, #14]
 8004d68:	2301      	movs	r3, #1
 8004d6a:	81a3      	strh	r3, [r4, #12]
 8004d6c:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8004d70:	6665      	str	r5, [r4, #100]	; 0x64
 8004d72:	f000 faa1 	bl	80052b8 <__retarget_lock_init_recursive>
 8004d76:	f7ff ff81 	bl	8004c7c <__sfp_lock_release>
 8004d7a:	6025      	str	r5, [r4, #0]
 8004d7c:	60a5      	str	r5, [r4, #8]
 8004d7e:	6065      	str	r5, [r4, #4]
 8004d80:	6125      	str	r5, [r4, #16]
 8004d82:	6165      	str	r5, [r4, #20]
 8004d84:	61a5      	str	r5, [r4, #24]
 8004d86:	2208      	movs	r2, #8
 8004d88:	4629      	mov	r1, r5
 8004d8a:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8004d8e:	f000 fd3e 	bl	800580e <memset>
 8004d92:	6365      	str	r5, [r4, #52]	; 0x34
 8004d94:	63a5      	str	r5, [r4, #56]	; 0x38
 8004d96:	64a5      	str	r5, [r4, #72]	; 0x48
 8004d98:	64e5      	str	r5, [r4, #76]	; 0x4c
 8004d9a:	e7e0      	b.n	8004d5e <__sfp+0x4a>
 8004d9c:	08008064 	.word	0x08008064

08004da0 <_malloc_trim_r>:
 8004da0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8004da4:	4f25      	ldr	r7, [pc, #148]	; (8004e3c <_malloc_trim_r+0x9c>)
 8004da6:	f8df 80a0 	ldr.w	r8, [pc, #160]	; 8004e48 <_malloc_trim_r+0xa8>
 8004daa:	4689      	mov	r9, r1
 8004dac:	4606      	mov	r6, r0
 8004dae:	f000 fd37 	bl	8005820 <__malloc_lock>
 8004db2:	68bb      	ldr	r3, [r7, #8]
 8004db4:	685d      	ldr	r5, [r3, #4]
 8004db6:	f1a8 0411 	sub.w	r4, r8, #17
 8004dba:	f025 0503 	bic.w	r5, r5, #3
 8004dbe:	eba4 0409 	sub.w	r4, r4, r9
 8004dc2:	442c      	add	r4, r5
 8004dc4:	fbb4 f4f8 	udiv	r4, r4, r8
 8004dc8:	3c01      	subs	r4, #1
 8004dca:	fb08 f404 	mul.w	r4, r8, r4
 8004dce:	4544      	cmp	r4, r8
 8004dd0:	da05      	bge.n	8004dde <_malloc_trim_r+0x3e>
 8004dd2:	4630      	mov	r0, r6
 8004dd4:	f000 fd2a 	bl	800582c <__malloc_unlock>
 8004dd8:	2000      	movs	r0, #0
 8004dda:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8004dde:	2100      	movs	r1, #0
 8004de0:	4630      	mov	r0, r6
 8004de2:	f001 f979 	bl	80060d8 <_sbrk_r>
 8004de6:	68bb      	ldr	r3, [r7, #8]
 8004de8:	442b      	add	r3, r5
 8004dea:	4298      	cmp	r0, r3
 8004dec:	d1f1      	bne.n	8004dd2 <_malloc_trim_r+0x32>
 8004dee:	4261      	negs	r1, r4
 8004df0:	4630      	mov	r0, r6
 8004df2:	f001 f971 	bl	80060d8 <_sbrk_r>
 8004df6:	3001      	adds	r0, #1
 8004df8:	d110      	bne.n	8004e1c <_malloc_trim_r+0x7c>
 8004dfa:	2100      	movs	r1, #0
 8004dfc:	4630      	mov	r0, r6
 8004dfe:	f001 f96b 	bl	80060d8 <_sbrk_r>
 8004e02:	68ba      	ldr	r2, [r7, #8]
 8004e04:	1a83      	subs	r3, r0, r2
 8004e06:	2b0f      	cmp	r3, #15
 8004e08:	dde3      	ble.n	8004dd2 <_malloc_trim_r+0x32>
 8004e0a:	490d      	ldr	r1, [pc, #52]	; (8004e40 <_malloc_trim_r+0xa0>)
 8004e0c:	6809      	ldr	r1, [r1, #0]
 8004e0e:	1a40      	subs	r0, r0, r1
 8004e10:	490c      	ldr	r1, [pc, #48]	; (8004e44 <_malloc_trim_r+0xa4>)
 8004e12:	f043 0301 	orr.w	r3, r3, #1
 8004e16:	6008      	str	r0, [r1, #0]
 8004e18:	6053      	str	r3, [r2, #4]
 8004e1a:	e7da      	b.n	8004dd2 <_malloc_trim_r+0x32>
 8004e1c:	68bb      	ldr	r3, [r7, #8]
 8004e1e:	4a09      	ldr	r2, [pc, #36]	; (8004e44 <_malloc_trim_r+0xa4>)
 8004e20:	1b2d      	subs	r5, r5, r4
 8004e22:	f045 0501 	orr.w	r5, r5, #1
 8004e26:	605d      	str	r5, [r3, #4]
 8004e28:	6813      	ldr	r3, [r2, #0]
 8004e2a:	4630      	mov	r0, r6
 8004e2c:	1b1c      	subs	r4, r3, r4
 8004e2e:	6014      	str	r4, [r2, #0]
 8004e30:	f000 fcfc 	bl	800582c <__malloc_unlock>
 8004e34:	2001      	movs	r0, #1
 8004e36:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8004e3a:	bf00      	nop
 8004e3c:	200000f8 	.word	0x200000f8
 8004e40:	20000500 	.word	0x20000500
 8004e44:	20000698 	.word	0x20000698
 8004e48:	00000080 	.word	0x00000080

08004e4c <_free_r>:
 8004e4c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004e50:	4604      	mov	r4, r0
 8004e52:	4688      	mov	r8, r1
 8004e54:	2900      	cmp	r1, #0
 8004e56:	f000 80ab 	beq.w	8004fb0 <_free_r+0x164>
 8004e5a:	f000 fce1 	bl	8005820 <__malloc_lock>
 8004e5e:	f858 2c04 	ldr.w	r2, [r8, #-4]
 8004e62:	4d54      	ldr	r5, [pc, #336]	; (8004fb4 <_free_r+0x168>)
 8004e64:	f022 0001 	bic.w	r0, r2, #1
 8004e68:	f1a8 0308 	sub.w	r3, r8, #8
 8004e6c:	181f      	adds	r7, r3, r0
 8004e6e:	68a9      	ldr	r1, [r5, #8]
 8004e70:	687e      	ldr	r6, [r7, #4]
 8004e72:	428f      	cmp	r7, r1
 8004e74:	f026 0603 	bic.w	r6, r6, #3
 8004e78:	f002 0201 	and.w	r2, r2, #1
 8004e7c:	d11b      	bne.n	8004eb6 <_free_r+0x6a>
 8004e7e:	4430      	add	r0, r6
 8004e80:	b93a      	cbnz	r2, 8004e92 <_free_r+0x46>
 8004e82:	f858 2c08 	ldr.w	r2, [r8, #-8]
 8004e86:	1a9b      	subs	r3, r3, r2
 8004e88:	4410      	add	r0, r2
 8004e8a:	6899      	ldr	r1, [r3, #8]
 8004e8c:	68da      	ldr	r2, [r3, #12]
 8004e8e:	60ca      	str	r2, [r1, #12]
 8004e90:	6091      	str	r1, [r2, #8]
 8004e92:	f040 0201 	orr.w	r2, r0, #1
 8004e96:	605a      	str	r2, [r3, #4]
 8004e98:	60ab      	str	r3, [r5, #8]
 8004e9a:	4b47      	ldr	r3, [pc, #284]	; (8004fb8 <_free_r+0x16c>)
 8004e9c:	681b      	ldr	r3, [r3, #0]
 8004e9e:	4298      	cmp	r0, r3
 8004ea0:	d304      	bcc.n	8004eac <_free_r+0x60>
 8004ea2:	4b46      	ldr	r3, [pc, #280]	; (8004fbc <_free_r+0x170>)
 8004ea4:	4620      	mov	r0, r4
 8004ea6:	6819      	ldr	r1, [r3, #0]
 8004ea8:	f7ff ff7a 	bl	8004da0 <_malloc_trim_r>
 8004eac:	4620      	mov	r0, r4
 8004eae:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8004eb2:	f000 bcbb 	b.w	800582c <__malloc_unlock>
 8004eb6:	607e      	str	r6, [r7, #4]
 8004eb8:	2a00      	cmp	r2, #0
 8004eba:	d139      	bne.n	8004f30 <_free_r+0xe4>
 8004ebc:	f858 1c08 	ldr.w	r1, [r8, #-8]
 8004ec0:	1a5b      	subs	r3, r3, r1
 8004ec2:	4408      	add	r0, r1
 8004ec4:	6899      	ldr	r1, [r3, #8]
 8004ec6:	f105 0e08 	add.w	lr, r5, #8
 8004eca:	4571      	cmp	r1, lr
 8004ecc:	d032      	beq.n	8004f34 <_free_r+0xe8>
 8004ece:	f8d3 e00c 	ldr.w	lr, [r3, #12]
 8004ed2:	f8c1 e00c 	str.w	lr, [r1, #12]
 8004ed6:	f8ce 1008 	str.w	r1, [lr, #8]
 8004eda:	19b9      	adds	r1, r7, r6
 8004edc:	6849      	ldr	r1, [r1, #4]
 8004ede:	07c9      	lsls	r1, r1, #31
 8004ee0:	d40a      	bmi.n	8004ef8 <_free_r+0xac>
 8004ee2:	4430      	add	r0, r6
 8004ee4:	68b9      	ldr	r1, [r7, #8]
 8004ee6:	bb3a      	cbnz	r2, 8004f38 <_free_r+0xec>
 8004ee8:	4e35      	ldr	r6, [pc, #212]	; (8004fc0 <_free_r+0x174>)
 8004eea:	42b1      	cmp	r1, r6
 8004eec:	d124      	bne.n	8004f38 <_free_r+0xec>
 8004eee:	616b      	str	r3, [r5, #20]
 8004ef0:	612b      	str	r3, [r5, #16]
 8004ef2:	2201      	movs	r2, #1
 8004ef4:	60d9      	str	r1, [r3, #12]
 8004ef6:	6099      	str	r1, [r3, #8]
 8004ef8:	f040 0101 	orr.w	r1, r0, #1
 8004efc:	6059      	str	r1, [r3, #4]
 8004efe:	5018      	str	r0, [r3, r0]
 8004f00:	2a00      	cmp	r2, #0
 8004f02:	d1d3      	bne.n	8004eac <_free_r+0x60>
 8004f04:	f5b0 7f00 	cmp.w	r0, #512	; 0x200
 8004f08:	d21a      	bcs.n	8004f40 <_free_r+0xf4>
 8004f0a:	08c0      	lsrs	r0, r0, #3
 8004f0c:	1081      	asrs	r1, r0, #2
 8004f0e:	2201      	movs	r2, #1
 8004f10:	408a      	lsls	r2, r1
 8004f12:	6869      	ldr	r1, [r5, #4]
 8004f14:	3001      	adds	r0, #1
 8004f16:	430a      	orrs	r2, r1
 8004f18:	606a      	str	r2, [r5, #4]
 8004f1a:	eb05 02c0 	add.w	r2, r5, r0, lsl #3
 8004f1e:	f855 1030 	ldr.w	r1, [r5, r0, lsl #3]
 8004f22:	6099      	str	r1, [r3, #8]
 8004f24:	3a08      	subs	r2, #8
 8004f26:	60da      	str	r2, [r3, #12]
 8004f28:	f845 3030 	str.w	r3, [r5, r0, lsl #3]
 8004f2c:	60cb      	str	r3, [r1, #12]
 8004f2e:	e7bd      	b.n	8004eac <_free_r+0x60>
 8004f30:	2200      	movs	r2, #0
 8004f32:	e7d2      	b.n	8004eda <_free_r+0x8e>
 8004f34:	2201      	movs	r2, #1
 8004f36:	e7d0      	b.n	8004eda <_free_r+0x8e>
 8004f38:	68fe      	ldr	r6, [r7, #12]
 8004f3a:	60ce      	str	r6, [r1, #12]
 8004f3c:	60b1      	str	r1, [r6, #8]
 8004f3e:	e7db      	b.n	8004ef8 <_free_r+0xac>
 8004f40:	0a42      	lsrs	r2, r0, #9
 8004f42:	2a04      	cmp	r2, #4
 8004f44:	d813      	bhi.n	8004f6e <_free_r+0x122>
 8004f46:	0982      	lsrs	r2, r0, #6
 8004f48:	3238      	adds	r2, #56	; 0x38
 8004f4a:	1c51      	adds	r1, r2, #1
 8004f4c:	eb05 06c2 	add.w	r6, r5, r2, lsl #3
 8004f50:	f855 1031 	ldr.w	r1, [r5, r1, lsl #3]
 8004f54:	428e      	cmp	r6, r1
 8004f56:	d124      	bne.n	8004fa2 <_free_r+0x156>
 8004f58:	2001      	movs	r0, #1
 8004f5a:	1092      	asrs	r2, r2, #2
 8004f5c:	fa00 f202 	lsl.w	r2, r0, r2
 8004f60:	6868      	ldr	r0, [r5, #4]
 8004f62:	4302      	orrs	r2, r0
 8004f64:	606a      	str	r2, [r5, #4]
 8004f66:	60de      	str	r6, [r3, #12]
 8004f68:	6099      	str	r1, [r3, #8]
 8004f6a:	60b3      	str	r3, [r6, #8]
 8004f6c:	e7de      	b.n	8004f2c <_free_r+0xe0>
 8004f6e:	2a14      	cmp	r2, #20
 8004f70:	d801      	bhi.n	8004f76 <_free_r+0x12a>
 8004f72:	325b      	adds	r2, #91	; 0x5b
 8004f74:	e7e9      	b.n	8004f4a <_free_r+0xfe>
 8004f76:	2a54      	cmp	r2, #84	; 0x54
 8004f78:	d802      	bhi.n	8004f80 <_free_r+0x134>
 8004f7a:	0b02      	lsrs	r2, r0, #12
 8004f7c:	326e      	adds	r2, #110	; 0x6e
 8004f7e:	e7e4      	b.n	8004f4a <_free_r+0xfe>
 8004f80:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
 8004f84:	d802      	bhi.n	8004f8c <_free_r+0x140>
 8004f86:	0bc2      	lsrs	r2, r0, #15
 8004f88:	3277      	adds	r2, #119	; 0x77
 8004f8a:	e7de      	b.n	8004f4a <_free_r+0xfe>
 8004f8c:	f240 5154 	movw	r1, #1364	; 0x554
 8004f90:	428a      	cmp	r2, r1
 8004f92:	bf9a      	itte	ls
 8004f94:	0c82      	lsrls	r2, r0, #18
 8004f96:	327c      	addls	r2, #124	; 0x7c
 8004f98:	227e      	movhi	r2, #126	; 0x7e
 8004f9a:	e7d6      	b.n	8004f4a <_free_r+0xfe>
 8004f9c:	6889      	ldr	r1, [r1, #8]
 8004f9e:	428e      	cmp	r6, r1
 8004fa0:	d004      	beq.n	8004fac <_free_r+0x160>
 8004fa2:	684a      	ldr	r2, [r1, #4]
 8004fa4:	f022 0203 	bic.w	r2, r2, #3
 8004fa8:	4290      	cmp	r0, r2
 8004faa:	d3f7      	bcc.n	8004f9c <_free_r+0x150>
 8004fac:	68ce      	ldr	r6, [r1, #12]
 8004fae:	e7da      	b.n	8004f66 <_free_r+0x11a>
 8004fb0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8004fb4:	200000f8 	.word	0x200000f8
 8004fb8:	20000504 	.word	0x20000504
 8004fbc:	200006c8 	.word	0x200006c8
 8004fc0:	20000100 	.word	0x20000100

08004fc4 <__sfvwrite_r>:
 8004fc4:	6893      	ldr	r3, [r2, #8]
 8004fc6:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004fca:	4607      	mov	r7, r0
 8004fcc:	460c      	mov	r4, r1
 8004fce:	4690      	mov	r8, r2
 8004fd0:	b91b      	cbnz	r3, 8004fda <__sfvwrite_r+0x16>
 8004fd2:	2000      	movs	r0, #0
 8004fd4:	b003      	add	sp, #12
 8004fd6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004fda:	898b      	ldrh	r3, [r1, #12]
 8004fdc:	0718      	lsls	r0, r3, #28
 8004fde:	d526      	bpl.n	800502e <__sfvwrite_r+0x6a>
 8004fe0:	690b      	ldr	r3, [r1, #16]
 8004fe2:	b323      	cbz	r3, 800502e <__sfvwrite_r+0x6a>
 8004fe4:	89a3      	ldrh	r3, [r4, #12]
 8004fe6:	f8d8 6000 	ldr.w	r6, [r8]
 8004fea:	f013 0902 	ands.w	r9, r3, #2
 8004fee:	d02d      	beq.n	800504c <__sfvwrite_r+0x88>
 8004ff0:	f04f 0a00 	mov.w	sl, #0
 8004ff4:	f8df b264 	ldr.w	fp, [pc, #612]	; 800525c <__sfvwrite_r+0x298>
 8004ff8:	46d1      	mov	r9, sl
 8004ffa:	f1b9 0f00 	cmp.w	r9, #0
 8004ffe:	d01f      	beq.n	8005040 <__sfvwrite_r+0x7c>
 8005000:	45d9      	cmp	r9, fp
 8005002:	464b      	mov	r3, r9
 8005004:	4652      	mov	r2, sl
 8005006:	bf28      	it	cs
 8005008:	465b      	movcs	r3, fp
 800500a:	6a21      	ldr	r1, [r4, #32]
 800500c:	6aa5      	ldr	r5, [r4, #40]	; 0x28
 800500e:	4638      	mov	r0, r7
 8005010:	47a8      	blx	r5
 8005012:	2800      	cmp	r0, #0
 8005014:	f340 8089 	ble.w	800512a <__sfvwrite_r+0x166>
 8005018:	f8d8 3008 	ldr.w	r3, [r8, #8]
 800501c:	4482      	add	sl, r0
 800501e:	eba9 0900 	sub.w	r9, r9, r0
 8005022:	1a18      	subs	r0, r3, r0
 8005024:	f8c8 0008 	str.w	r0, [r8, #8]
 8005028:	2800      	cmp	r0, #0
 800502a:	d1e6      	bne.n	8004ffa <__sfvwrite_r+0x36>
 800502c:	e7d1      	b.n	8004fd2 <__sfvwrite_r+0xe>
 800502e:	4621      	mov	r1, r4
 8005030:	4638      	mov	r0, r7
 8005032:	f7fe fe45 	bl	8003cc0 <__swsetup_r>
 8005036:	2800      	cmp	r0, #0
 8005038:	d0d4      	beq.n	8004fe4 <__sfvwrite_r+0x20>
 800503a:	f04f 30ff 	mov.w	r0, #4294967295
 800503e:	e7c9      	b.n	8004fd4 <__sfvwrite_r+0x10>
 8005040:	f8d6 a000 	ldr.w	sl, [r6]
 8005044:	f8d6 9004 	ldr.w	r9, [r6, #4]
 8005048:	3608      	adds	r6, #8
 800504a:	e7d6      	b.n	8004ffa <__sfvwrite_r+0x36>
 800504c:	f013 0301 	ands.w	r3, r3, #1
 8005050:	d043      	beq.n	80050da <__sfvwrite_r+0x116>
 8005052:	4648      	mov	r0, r9
 8005054:	46ca      	mov	sl, r9
 8005056:	46cb      	mov	fp, r9
 8005058:	f1bb 0f00 	cmp.w	fp, #0
 800505c:	f000 80d9 	beq.w	8005212 <__sfvwrite_r+0x24e>
 8005060:	b950      	cbnz	r0, 8005078 <__sfvwrite_r+0xb4>
 8005062:	465a      	mov	r2, fp
 8005064:	210a      	movs	r1, #10
 8005066:	4650      	mov	r0, sl
 8005068:	f7fb f8ba 	bl	80001e0 <memchr>
 800506c:	2800      	cmp	r0, #0
 800506e:	f000 80d5 	beq.w	800521c <__sfvwrite_r+0x258>
 8005072:	3001      	adds	r0, #1
 8005074:	eba0 090a 	sub.w	r9, r0, sl
 8005078:	6820      	ldr	r0, [r4, #0]
 800507a:	6921      	ldr	r1, [r4, #16]
 800507c:	6962      	ldr	r2, [r4, #20]
 800507e:	45d9      	cmp	r9, fp
 8005080:	464b      	mov	r3, r9
 8005082:	bf28      	it	cs
 8005084:	465b      	movcs	r3, fp
 8005086:	4288      	cmp	r0, r1
 8005088:	f240 80cb 	bls.w	8005222 <__sfvwrite_r+0x25e>
 800508c:	68a5      	ldr	r5, [r4, #8]
 800508e:	4415      	add	r5, r2
 8005090:	42ab      	cmp	r3, r5
 8005092:	f340 80c6 	ble.w	8005222 <__sfvwrite_r+0x25e>
 8005096:	4651      	mov	r1, sl
 8005098:	462a      	mov	r2, r5
 800509a:	f000 fb9e 	bl	80057da <memmove>
 800509e:	6823      	ldr	r3, [r4, #0]
 80050a0:	442b      	add	r3, r5
 80050a2:	6023      	str	r3, [r4, #0]
 80050a4:	4621      	mov	r1, r4
 80050a6:	4638      	mov	r0, r7
 80050a8:	f7ff fd66 	bl	8004b78 <_fflush_r>
 80050ac:	2800      	cmp	r0, #0
 80050ae:	d13c      	bne.n	800512a <__sfvwrite_r+0x166>
 80050b0:	ebb9 0905 	subs.w	r9, r9, r5
 80050b4:	f040 80cf 	bne.w	8005256 <__sfvwrite_r+0x292>
 80050b8:	4621      	mov	r1, r4
 80050ba:	4638      	mov	r0, r7
 80050bc:	f7ff fd5c 	bl	8004b78 <_fflush_r>
 80050c0:	2800      	cmp	r0, #0
 80050c2:	d132      	bne.n	800512a <__sfvwrite_r+0x166>
 80050c4:	f8d8 3008 	ldr.w	r3, [r8, #8]
 80050c8:	44aa      	add	sl, r5
 80050ca:	ebab 0b05 	sub.w	fp, fp, r5
 80050ce:	1b5d      	subs	r5, r3, r5
 80050d0:	f8c8 5008 	str.w	r5, [r8, #8]
 80050d4:	2d00      	cmp	r5, #0
 80050d6:	d1bf      	bne.n	8005058 <__sfvwrite_r+0x94>
 80050d8:	e77b      	b.n	8004fd2 <__sfvwrite_r+0xe>
 80050da:	4699      	mov	r9, r3
 80050dc:	469a      	mov	sl, r3
 80050de:	f1ba 0f00 	cmp.w	sl, #0
 80050e2:	d027      	beq.n	8005134 <__sfvwrite_r+0x170>
 80050e4:	89a2      	ldrh	r2, [r4, #12]
 80050e6:	68a5      	ldr	r5, [r4, #8]
 80050e8:	0591      	lsls	r1, r2, #22
 80050ea:	d565      	bpl.n	80051b8 <__sfvwrite_r+0x1f4>
 80050ec:	45aa      	cmp	sl, r5
 80050ee:	d33b      	bcc.n	8005168 <__sfvwrite_r+0x1a4>
 80050f0:	f412 6f90 	tst.w	r2, #1152	; 0x480
 80050f4:	d036      	beq.n	8005164 <__sfvwrite_r+0x1a0>
 80050f6:	6921      	ldr	r1, [r4, #16]
 80050f8:	6823      	ldr	r3, [r4, #0]
 80050fa:	1a5b      	subs	r3, r3, r1
 80050fc:	9301      	str	r3, [sp, #4]
 80050fe:	6963      	ldr	r3, [r4, #20]
 8005100:	2002      	movs	r0, #2
 8005102:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8005106:	fb93 fbf0 	sdiv	fp, r3, r0
 800510a:	9b01      	ldr	r3, [sp, #4]
 800510c:	1c58      	adds	r0, r3, #1
 800510e:	4450      	add	r0, sl
 8005110:	4583      	cmp	fp, r0
 8005112:	bf38      	it	cc
 8005114:	4683      	movcc	fp, r0
 8005116:	0553      	lsls	r3, r2, #21
 8005118:	d53e      	bpl.n	8005198 <__sfvwrite_r+0x1d4>
 800511a:	4659      	mov	r1, fp
 800511c:	4638      	mov	r0, r7
 800511e:	f000 f943 	bl	80053a8 <_malloc_r>
 8005122:	4605      	mov	r5, r0
 8005124:	b950      	cbnz	r0, 800513c <__sfvwrite_r+0x178>
 8005126:	230c      	movs	r3, #12
 8005128:	603b      	str	r3, [r7, #0]
 800512a:	89a3      	ldrh	r3, [r4, #12]
 800512c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8005130:	81a3      	strh	r3, [r4, #12]
 8005132:	e782      	b.n	800503a <__sfvwrite_r+0x76>
 8005134:	e896 0600 	ldmia.w	r6, {r9, sl}
 8005138:	3608      	adds	r6, #8
 800513a:	e7d0      	b.n	80050de <__sfvwrite_r+0x11a>
 800513c:	9a01      	ldr	r2, [sp, #4]
 800513e:	6921      	ldr	r1, [r4, #16]
 8005140:	f000 fb40 	bl	80057c4 <memcpy>
 8005144:	89a2      	ldrh	r2, [r4, #12]
 8005146:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
 800514a:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 800514e:	81a2      	strh	r2, [r4, #12]
 8005150:	9b01      	ldr	r3, [sp, #4]
 8005152:	6125      	str	r5, [r4, #16]
 8005154:	441d      	add	r5, r3
 8005156:	ebab 0303 	sub.w	r3, fp, r3
 800515a:	6025      	str	r5, [r4, #0]
 800515c:	f8c4 b014 	str.w	fp, [r4, #20]
 8005160:	4655      	mov	r5, sl
 8005162:	60a3      	str	r3, [r4, #8]
 8005164:	45aa      	cmp	sl, r5
 8005166:	d200      	bcs.n	800516a <__sfvwrite_r+0x1a6>
 8005168:	4655      	mov	r5, sl
 800516a:	462a      	mov	r2, r5
 800516c:	4649      	mov	r1, r9
 800516e:	6820      	ldr	r0, [r4, #0]
 8005170:	f000 fb33 	bl	80057da <memmove>
 8005174:	68a3      	ldr	r3, [r4, #8]
 8005176:	1b5b      	subs	r3, r3, r5
 8005178:	60a3      	str	r3, [r4, #8]
 800517a:	6823      	ldr	r3, [r4, #0]
 800517c:	441d      	add	r5, r3
 800517e:	6025      	str	r5, [r4, #0]
 8005180:	4655      	mov	r5, sl
 8005182:	f8d8 3008 	ldr.w	r3, [r8, #8]
 8005186:	44a9      	add	r9, r5
 8005188:	ebaa 0a05 	sub.w	sl, sl, r5
 800518c:	1b5d      	subs	r5, r3, r5
 800518e:	f8c8 5008 	str.w	r5, [r8, #8]
 8005192:	2d00      	cmp	r5, #0
 8005194:	d1a3      	bne.n	80050de <__sfvwrite_r+0x11a>
 8005196:	e71c      	b.n	8004fd2 <__sfvwrite_r+0xe>
 8005198:	465a      	mov	r2, fp
 800519a:	4638      	mov	r0, r7
 800519c:	f000 fe1c 	bl	8005dd8 <_realloc_r>
 80051a0:	4605      	mov	r5, r0
 80051a2:	2800      	cmp	r0, #0
 80051a4:	d1d4      	bne.n	8005150 <__sfvwrite_r+0x18c>
 80051a6:	6921      	ldr	r1, [r4, #16]
 80051a8:	4638      	mov	r0, r7
 80051aa:	f7ff fe4f 	bl	8004e4c <_free_r>
 80051ae:	89a3      	ldrh	r3, [r4, #12]
 80051b0:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 80051b4:	81a3      	strh	r3, [r4, #12]
 80051b6:	e7b6      	b.n	8005126 <__sfvwrite_r+0x162>
 80051b8:	6820      	ldr	r0, [r4, #0]
 80051ba:	6923      	ldr	r3, [r4, #16]
 80051bc:	4298      	cmp	r0, r3
 80051be:	d802      	bhi.n	80051c6 <__sfvwrite_r+0x202>
 80051c0:	6962      	ldr	r2, [r4, #20]
 80051c2:	4592      	cmp	sl, r2
 80051c4:	d215      	bcs.n	80051f2 <__sfvwrite_r+0x22e>
 80051c6:	4555      	cmp	r5, sl
 80051c8:	bf28      	it	cs
 80051ca:	4655      	movcs	r5, sl
 80051cc:	462a      	mov	r2, r5
 80051ce:	4649      	mov	r1, r9
 80051d0:	f000 fb03 	bl	80057da <memmove>
 80051d4:	68a3      	ldr	r3, [r4, #8]
 80051d6:	6822      	ldr	r2, [r4, #0]
 80051d8:	1b5b      	subs	r3, r3, r5
 80051da:	442a      	add	r2, r5
 80051dc:	60a3      	str	r3, [r4, #8]
 80051de:	6022      	str	r2, [r4, #0]
 80051e0:	2b00      	cmp	r3, #0
 80051e2:	d1ce      	bne.n	8005182 <__sfvwrite_r+0x1be>
 80051e4:	4621      	mov	r1, r4
 80051e6:	4638      	mov	r0, r7
 80051e8:	f7ff fcc6 	bl	8004b78 <_fflush_r>
 80051ec:	2800      	cmp	r0, #0
 80051ee:	d0c8      	beq.n	8005182 <__sfvwrite_r+0x1be>
 80051f0:	e79b      	b.n	800512a <__sfvwrite_r+0x166>
 80051f2:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
 80051f6:	4553      	cmp	r3, sl
 80051f8:	bf28      	it	cs
 80051fa:	4653      	movcs	r3, sl
 80051fc:	6aa5      	ldr	r5, [r4, #40]	; 0x28
 80051fe:	fb93 f3f2 	sdiv	r3, r3, r2
 8005202:	6a21      	ldr	r1, [r4, #32]
 8005204:	4353      	muls	r3, r2
 8005206:	4638      	mov	r0, r7
 8005208:	464a      	mov	r2, r9
 800520a:	47a8      	blx	r5
 800520c:	1e05      	subs	r5, r0, #0
 800520e:	dcb8      	bgt.n	8005182 <__sfvwrite_r+0x1be>
 8005210:	e78b      	b.n	800512a <__sfvwrite_r+0x166>
 8005212:	e896 0c00 	ldmia.w	r6, {sl, fp}
 8005216:	2000      	movs	r0, #0
 8005218:	3608      	adds	r6, #8
 800521a:	e71d      	b.n	8005058 <__sfvwrite_r+0x94>
 800521c:	f10b 0901 	add.w	r9, fp, #1
 8005220:	e72a      	b.n	8005078 <__sfvwrite_r+0xb4>
 8005222:	4293      	cmp	r3, r2
 8005224:	db09      	blt.n	800523a <__sfvwrite_r+0x276>
 8005226:	6aa5      	ldr	r5, [r4, #40]	; 0x28
 8005228:	6a21      	ldr	r1, [r4, #32]
 800522a:	4613      	mov	r3, r2
 800522c:	4638      	mov	r0, r7
 800522e:	4652      	mov	r2, sl
 8005230:	47a8      	blx	r5
 8005232:	1e05      	subs	r5, r0, #0
 8005234:	f73f af3c 	bgt.w	80050b0 <__sfvwrite_r+0xec>
 8005238:	e777      	b.n	800512a <__sfvwrite_r+0x166>
 800523a:	461a      	mov	r2, r3
 800523c:	4651      	mov	r1, sl
 800523e:	9301      	str	r3, [sp, #4]
 8005240:	f000 facb 	bl	80057da <memmove>
 8005244:	9b01      	ldr	r3, [sp, #4]
 8005246:	68a2      	ldr	r2, [r4, #8]
 8005248:	1ad2      	subs	r2, r2, r3
 800524a:	60a2      	str	r2, [r4, #8]
 800524c:	6822      	ldr	r2, [r4, #0]
 800524e:	441a      	add	r2, r3
 8005250:	6022      	str	r2, [r4, #0]
 8005252:	461d      	mov	r5, r3
 8005254:	e72c      	b.n	80050b0 <__sfvwrite_r+0xec>
 8005256:	2001      	movs	r0, #1
 8005258:	e734      	b.n	80050c4 <__sfvwrite_r+0x100>
 800525a:	bf00      	nop
 800525c:	7ffffc00 	.word	0x7ffffc00

08005260 <_fwalk_reent>:
 8005260:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8005264:	4680      	mov	r8, r0
 8005266:	4689      	mov	r9, r1
 8005268:	f100 04d8 	add.w	r4, r0, #216	; 0xd8
 800526c:	2600      	movs	r6, #0
 800526e:	b914      	cbnz	r4, 8005276 <_fwalk_reent+0x16>
 8005270:	4630      	mov	r0, r6
 8005272:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8005276:	68a5      	ldr	r5, [r4, #8]
 8005278:	6867      	ldr	r7, [r4, #4]
 800527a:	3f01      	subs	r7, #1
 800527c:	d501      	bpl.n	8005282 <_fwalk_reent+0x22>
 800527e:	6824      	ldr	r4, [r4, #0]
 8005280:	e7f5      	b.n	800526e <_fwalk_reent+0xe>
 8005282:	89ab      	ldrh	r3, [r5, #12]
 8005284:	2b01      	cmp	r3, #1
 8005286:	d907      	bls.n	8005298 <_fwalk_reent+0x38>
 8005288:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 800528c:	3301      	adds	r3, #1
 800528e:	d003      	beq.n	8005298 <_fwalk_reent+0x38>
 8005290:	4629      	mov	r1, r5
 8005292:	4640      	mov	r0, r8
 8005294:	47c8      	blx	r9
 8005296:	4306      	orrs	r6, r0
 8005298:	3568      	adds	r5, #104	; 0x68
 800529a:	e7ee      	b.n	800527a <_fwalk_reent+0x1a>

0800529c <_localeconv_r>:
 800529c:	4b04      	ldr	r3, [pc, #16]	; (80052b0 <_localeconv_r+0x14>)
 800529e:	681b      	ldr	r3, [r3, #0]
 80052a0:	6a18      	ldr	r0, [r3, #32]
 80052a2:	4b04      	ldr	r3, [pc, #16]	; (80052b4 <_localeconv_r+0x18>)
 80052a4:	2800      	cmp	r0, #0
 80052a6:	bf08      	it	eq
 80052a8:	4618      	moveq	r0, r3
 80052aa:	30f0      	adds	r0, #240	; 0xf0
 80052ac:	4770      	bx	lr
 80052ae:	bf00      	nop
 80052b0:	20000004 	.word	0x20000004
 80052b4:	20000508 	.word	0x20000508

080052b8 <__retarget_lock_init_recursive>:
 80052b8:	4770      	bx	lr

080052ba <__retarget_lock_close_recursive>:
 80052ba:	4770      	bx	lr

080052bc <__retarget_lock_acquire_recursive>:
 80052bc:	4770      	bx	lr

080052be <__retarget_lock_release_recursive>:
 80052be:	4770      	bx	lr

080052c0 <__swhatbuf_r>:
 80052c0:	b570      	push	{r4, r5, r6, lr}
 80052c2:	460e      	mov	r6, r1
 80052c4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80052c8:	2900      	cmp	r1, #0
 80052ca:	b090      	sub	sp, #64	; 0x40
 80052cc:	4614      	mov	r4, r2
 80052ce:	461d      	mov	r5, r3
 80052d0:	da09      	bge.n	80052e6 <__swhatbuf_r+0x26>
 80052d2:	89b3      	ldrh	r3, [r6, #12]
 80052d4:	2200      	movs	r2, #0
 80052d6:	f013 0080 	ands.w	r0, r3, #128	; 0x80
 80052da:	602a      	str	r2, [r5, #0]
 80052dc:	d116      	bne.n	800530c <__swhatbuf_r+0x4c>
 80052de:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80052e2:	6023      	str	r3, [r4, #0]
 80052e4:	e015      	b.n	8005312 <__swhatbuf_r+0x52>
 80052e6:	aa01      	add	r2, sp, #4
 80052e8:	f001 f8a4 	bl	8006434 <_fstat_r>
 80052ec:	2800      	cmp	r0, #0
 80052ee:	dbf0      	blt.n	80052d2 <__swhatbuf_r+0x12>
 80052f0:	9a02      	ldr	r2, [sp, #8]
 80052f2:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 80052f6:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 80052fa:	425a      	negs	r2, r3
 80052fc:	415a      	adcs	r2, r3
 80052fe:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8005302:	602a      	str	r2, [r5, #0]
 8005304:	f44f 6000 	mov.w	r0, #2048	; 0x800
 8005308:	6023      	str	r3, [r4, #0]
 800530a:	e002      	b.n	8005312 <__swhatbuf_r+0x52>
 800530c:	2340      	movs	r3, #64	; 0x40
 800530e:	6023      	str	r3, [r4, #0]
 8005310:	4610      	mov	r0, r2
 8005312:	b010      	add	sp, #64	; 0x40
 8005314:	bd70      	pop	{r4, r5, r6, pc}
	...

08005318 <__smakebuf_r>:
 8005318:	898b      	ldrh	r3, [r1, #12]
 800531a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800531c:	079d      	lsls	r5, r3, #30
 800531e:	4606      	mov	r6, r0
 8005320:	460c      	mov	r4, r1
 8005322:	d507      	bpl.n	8005334 <__smakebuf_r+0x1c>
 8005324:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8005328:	6023      	str	r3, [r4, #0]
 800532a:	6123      	str	r3, [r4, #16]
 800532c:	2301      	movs	r3, #1
 800532e:	6163      	str	r3, [r4, #20]
 8005330:	b002      	add	sp, #8
 8005332:	bd70      	pop	{r4, r5, r6, pc}
 8005334:	ab01      	add	r3, sp, #4
 8005336:	466a      	mov	r2, sp
 8005338:	f7ff ffc2 	bl	80052c0 <__swhatbuf_r>
 800533c:	9900      	ldr	r1, [sp, #0]
 800533e:	4605      	mov	r5, r0
 8005340:	4630      	mov	r0, r6
 8005342:	f000 f831 	bl	80053a8 <_malloc_r>
 8005346:	b948      	cbnz	r0, 800535c <__smakebuf_r+0x44>
 8005348:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800534c:	059a      	lsls	r2, r3, #22
 800534e:	d4ef      	bmi.n	8005330 <__smakebuf_r+0x18>
 8005350:	f023 0303 	bic.w	r3, r3, #3
 8005354:	f043 0302 	orr.w	r3, r3, #2
 8005358:	81a3      	strh	r3, [r4, #12]
 800535a:	e7e3      	b.n	8005324 <__smakebuf_r+0xc>
 800535c:	4b0d      	ldr	r3, [pc, #52]	; (8005394 <__smakebuf_r+0x7c>)
 800535e:	62b3      	str	r3, [r6, #40]	; 0x28
 8005360:	89a3      	ldrh	r3, [r4, #12]
 8005362:	6020      	str	r0, [r4, #0]
 8005364:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8005368:	81a3      	strh	r3, [r4, #12]
 800536a:	9b00      	ldr	r3, [sp, #0]
 800536c:	6163      	str	r3, [r4, #20]
 800536e:	9b01      	ldr	r3, [sp, #4]
 8005370:	6120      	str	r0, [r4, #16]
 8005372:	b15b      	cbz	r3, 800538c <__smakebuf_r+0x74>
 8005374:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8005378:	4630      	mov	r0, r6
 800537a:	f001 f86d 	bl	8006458 <_isatty_r>
 800537e:	b128      	cbz	r0, 800538c <__smakebuf_r+0x74>
 8005380:	89a3      	ldrh	r3, [r4, #12]
 8005382:	f023 0303 	bic.w	r3, r3, #3
 8005386:	f043 0301 	orr.w	r3, r3, #1
 800538a:	81a3      	strh	r3, [r4, #12]
 800538c:	89a3      	ldrh	r3, [r4, #12]
 800538e:	431d      	orrs	r5, r3
 8005390:	81a5      	strh	r5, [r4, #12]
 8005392:	e7cd      	b.n	8005330 <__smakebuf_r+0x18>
 8005394:	08004bf1 	.word	0x08004bf1

08005398 <malloc>:
 8005398:	4b02      	ldr	r3, [pc, #8]	; (80053a4 <malloc+0xc>)
 800539a:	4601      	mov	r1, r0
 800539c:	6818      	ldr	r0, [r3, #0]
 800539e:	f000 b803 	b.w	80053a8 <_malloc_r>
 80053a2:	bf00      	nop
 80053a4:	20000004 	.word	0x20000004

080053a8 <_malloc_r>:
 80053a8:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80053ac:	f101 040b 	add.w	r4, r1, #11
 80053b0:	2c16      	cmp	r4, #22
 80053b2:	4681      	mov	r9, r0
 80053b4:	d907      	bls.n	80053c6 <_malloc_r+0x1e>
 80053b6:	f034 0407 	bics.w	r4, r4, #7
 80053ba:	d505      	bpl.n	80053c8 <_malloc_r+0x20>
 80053bc:	230c      	movs	r3, #12
 80053be:	f8c9 3000 	str.w	r3, [r9]
 80053c2:	2600      	movs	r6, #0
 80053c4:	e131      	b.n	800562a <_malloc_r+0x282>
 80053c6:	2410      	movs	r4, #16
 80053c8:	428c      	cmp	r4, r1
 80053ca:	d3f7      	bcc.n	80053bc <_malloc_r+0x14>
 80053cc:	4648      	mov	r0, r9
 80053ce:	f000 fa27 	bl	8005820 <__malloc_lock>
 80053d2:	f5b4 7ffc 	cmp.w	r4, #504	; 0x1f8
 80053d6:	4d9c      	ldr	r5, [pc, #624]	; (8005648 <_malloc_r+0x2a0>)
 80053d8:	d236      	bcs.n	8005448 <_malloc_r+0xa0>
 80053da:	f104 0208 	add.w	r2, r4, #8
 80053de:	442a      	add	r2, r5
 80053e0:	f1a2 0108 	sub.w	r1, r2, #8
 80053e4:	6856      	ldr	r6, [r2, #4]
 80053e6:	428e      	cmp	r6, r1
 80053e8:	ea4f 03d4 	mov.w	r3, r4, lsr #3
 80053ec:	d102      	bne.n	80053f4 <_malloc_r+0x4c>
 80053ee:	68d6      	ldr	r6, [r2, #12]
 80053f0:	42b2      	cmp	r2, r6
 80053f2:	d010      	beq.n	8005416 <_malloc_r+0x6e>
 80053f4:	6873      	ldr	r3, [r6, #4]
 80053f6:	68f2      	ldr	r2, [r6, #12]
 80053f8:	68b1      	ldr	r1, [r6, #8]
 80053fa:	f023 0303 	bic.w	r3, r3, #3
 80053fe:	60ca      	str	r2, [r1, #12]
 8005400:	4433      	add	r3, r6
 8005402:	6091      	str	r1, [r2, #8]
 8005404:	685a      	ldr	r2, [r3, #4]
 8005406:	f042 0201 	orr.w	r2, r2, #1
 800540a:	605a      	str	r2, [r3, #4]
 800540c:	4648      	mov	r0, r9
 800540e:	f000 fa0d 	bl	800582c <__malloc_unlock>
 8005412:	3608      	adds	r6, #8
 8005414:	e109      	b.n	800562a <_malloc_r+0x282>
 8005416:	3302      	adds	r3, #2
 8005418:	4a8c      	ldr	r2, [pc, #560]	; (800564c <_malloc_r+0x2a4>)
 800541a:	692e      	ldr	r6, [r5, #16]
 800541c:	4296      	cmp	r6, r2
 800541e:	4611      	mov	r1, r2
 8005420:	d06d      	beq.n	80054fe <_malloc_r+0x156>
 8005422:	6870      	ldr	r0, [r6, #4]
 8005424:	f020 0003 	bic.w	r0, r0, #3
 8005428:	1b07      	subs	r7, r0, r4
 800542a:	2f0f      	cmp	r7, #15
 800542c:	dd47      	ble.n	80054be <_malloc_r+0x116>
 800542e:	1933      	adds	r3, r6, r4
 8005430:	f044 0401 	orr.w	r4, r4, #1
 8005434:	6074      	str	r4, [r6, #4]
 8005436:	616b      	str	r3, [r5, #20]
 8005438:	612b      	str	r3, [r5, #16]
 800543a:	60da      	str	r2, [r3, #12]
 800543c:	609a      	str	r2, [r3, #8]
 800543e:	f047 0201 	orr.w	r2, r7, #1
 8005442:	605a      	str	r2, [r3, #4]
 8005444:	5037      	str	r7, [r6, r0]
 8005446:	e7e1      	b.n	800540c <_malloc_r+0x64>
 8005448:	0a63      	lsrs	r3, r4, #9
 800544a:	d02a      	beq.n	80054a2 <_malloc_r+0xfa>
 800544c:	2b04      	cmp	r3, #4
 800544e:	d812      	bhi.n	8005476 <_malloc_r+0xce>
 8005450:	09a3      	lsrs	r3, r4, #6
 8005452:	3338      	adds	r3, #56	; 0x38
 8005454:	1c5a      	adds	r2, r3, #1
 8005456:	eb05 02c2 	add.w	r2, r5, r2, lsl #3
 800545a:	f1a2 0008 	sub.w	r0, r2, #8
 800545e:	6856      	ldr	r6, [r2, #4]
 8005460:	4286      	cmp	r6, r0
 8005462:	d006      	beq.n	8005472 <_malloc_r+0xca>
 8005464:	6872      	ldr	r2, [r6, #4]
 8005466:	f022 0203 	bic.w	r2, r2, #3
 800546a:	1b11      	subs	r1, r2, r4
 800546c:	290f      	cmp	r1, #15
 800546e:	dd1c      	ble.n	80054aa <_malloc_r+0x102>
 8005470:	3b01      	subs	r3, #1
 8005472:	3301      	adds	r3, #1
 8005474:	e7d0      	b.n	8005418 <_malloc_r+0x70>
 8005476:	2b14      	cmp	r3, #20
 8005478:	d801      	bhi.n	800547e <_malloc_r+0xd6>
 800547a:	335b      	adds	r3, #91	; 0x5b
 800547c:	e7ea      	b.n	8005454 <_malloc_r+0xac>
 800547e:	2b54      	cmp	r3, #84	; 0x54
 8005480:	d802      	bhi.n	8005488 <_malloc_r+0xe0>
 8005482:	0b23      	lsrs	r3, r4, #12
 8005484:	336e      	adds	r3, #110	; 0x6e
 8005486:	e7e5      	b.n	8005454 <_malloc_r+0xac>
 8005488:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
 800548c:	d802      	bhi.n	8005494 <_malloc_r+0xec>
 800548e:	0be3      	lsrs	r3, r4, #15
 8005490:	3377      	adds	r3, #119	; 0x77
 8005492:	e7df      	b.n	8005454 <_malloc_r+0xac>
 8005494:	f240 5254 	movw	r2, #1364	; 0x554
 8005498:	4293      	cmp	r3, r2
 800549a:	d804      	bhi.n	80054a6 <_malloc_r+0xfe>
 800549c:	0ca3      	lsrs	r3, r4, #18
 800549e:	337c      	adds	r3, #124	; 0x7c
 80054a0:	e7d8      	b.n	8005454 <_malloc_r+0xac>
 80054a2:	233f      	movs	r3, #63	; 0x3f
 80054a4:	e7d6      	b.n	8005454 <_malloc_r+0xac>
 80054a6:	237e      	movs	r3, #126	; 0x7e
 80054a8:	e7d4      	b.n	8005454 <_malloc_r+0xac>
 80054aa:	2900      	cmp	r1, #0
 80054ac:	68f1      	ldr	r1, [r6, #12]
 80054ae:	db04      	blt.n	80054ba <_malloc_r+0x112>
 80054b0:	68b3      	ldr	r3, [r6, #8]
 80054b2:	60d9      	str	r1, [r3, #12]
 80054b4:	608b      	str	r3, [r1, #8]
 80054b6:	18b3      	adds	r3, r6, r2
 80054b8:	e7a4      	b.n	8005404 <_malloc_r+0x5c>
 80054ba:	460e      	mov	r6, r1
 80054bc:	e7d0      	b.n	8005460 <_malloc_r+0xb8>
 80054be:	2f00      	cmp	r7, #0
 80054c0:	616a      	str	r2, [r5, #20]
 80054c2:	612a      	str	r2, [r5, #16]
 80054c4:	db05      	blt.n	80054d2 <_malloc_r+0x12a>
 80054c6:	4430      	add	r0, r6
 80054c8:	6843      	ldr	r3, [r0, #4]
 80054ca:	f043 0301 	orr.w	r3, r3, #1
 80054ce:	6043      	str	r3, [r0, #4]
 80054d0:	e79c      	b.n	800540c <_malloc_r+0x64>
 80054d2:	f5b0 7f00 	cmp.w	r0, #512	; 0x200
 80054d6:	d244      	bcs.n	8005562 <_malloc_r+0x1ba>
 80054d8:	08c0      	lsrs	r0, r0, #3
 80054da:	1087      	asrs	r7, r0, #2
 80054dc:	2201      	movs	r2, #1
 80054de:	fa02 f707 	lsl.w	r7, r2, r7
 80054e2:	686a      	ldr	r2, [r5, #4]
 80054e4:	3001      	adds	r0, #1
 80054e6:	433a      	orrs	r2, r7
 80054e8:	606a      	str	r2, [r5, #4]
 80054ea:	eb05 02c0 	add.w	r2, r5, r0, lsl #3
 80054ee:	f855 7030 	ldr.w	r7, [r5, r0, lsl #3]
 80054f2:	60b7      	str	r7, [r6, #8]
 80054f4:	3a08      	subs	r2, #8
 80054f6:	60f2      	str	r2, [r6, #12]
 80054f8:	f845 6030 	str.w	r6, [r5, r0, lsl #3]
 80054fc:	60fe      	str	r6, [r7, #12]
 80054fe:	2001      	movs	r0, #1
 8005500:	109a      	asrs	r2, r3, #2
 8005502:	fa00 f202 	lsl.w	r2, r0, r2
 8005506:	6868      	ldr	r0, [r5, #4]
 8005508:	4282      	cmp	r2, r0
 800550a:	f200 80a1 	bhi.w	8005650 <_malloc_r+0x2a8>
 800550e:	4202      	tst	r2, r0
 8005510:	d106      	bne.n	8005520 <_malloc_r+0x178>
 8005512:	f023 0303 	bic.w	r3, r3, #3
 8005516:	0052      	lsls	r2, r2, #1
 8005518:	4202      	tst	r2, r0
 800551a:	f103 0304 	add.w	r3, r3, #4
 800551e:	d0fa      	beq.n	8005516 <_malloc_r+0x16e>
 8005520:	eb05 0cc3 	add.w	ip, r5, r3, lsl #3
 8005524:	46e0      	mov	r8, ip
 8005526:	469e      	mov	lr, r3
 8005528:	f8d8 600c 	ldr.w	r6, [r8, #12]
 800552c:	4546      	cmp	r6, r8
 800552e:	d153      	bne.n	80055d8 <_malloc_r+0x230>
 8005530:	f10e 0e01 	add.w	lr, lr, #1
 8005534:	f01e 0f03 	tst.w	lr, #3
 8005538:	f108 0808 	add.w	r8, r8, #8
 800553c:	d1f4      	bne.n	8005528 <_malloc_r+0x180>
 800553e:	0798      	lsls	r0, r3, #30
 8005540:	d179      	bne.n	8005636 <_malloc_r+0x28e>
 8005542:	686b      	ldr	r3, [r5, #4]
 8005544:	ea23 0302 	bic.w	r3, r3, r2
 8005548:	606b      	str	r3, [r5, #4]
 800554a:	6868      	ldr	r0, [r5, #4]
 800554c:	0052      	lsls	r2, r2, #1
 800554e:	4282      	cmp	r2, r0
 8005550:	d87e      	bhi.n	8005650 <_malloc_r+0x2a8>
 8005552:	2a00      	cmp	r2, #0
 8005554:	d07c      	beq.n	8005650 <_malloc_r+0x2a8>
 8005556:	4673      	mov	r3, lr
 8005558:	4202      	tst	r2, r0
 800555a:	d1e1      	bne.n	8005520 <_malloc_r+0x178>
 800555c:	3304      	adds	r3, #4
 800555e:	0052      	lsls	r2, r2, #1
 8005560:	e7fa      	b.n	8005558 <_malloc_r+0x1b0>
 8005562:	0a42      	lsrs	r2, r0, #9
 8005564:	2a04      	cmp	r2, #4
 8005566:	d815      	bhi.n	8005594 <_malloc_r+0x1ec>
 8005568:	0982      	lsrs	r2, r0, #6
 800556a:	3238      	adds	r2, #56	; 0x38
 800556c:	1c57      	adds	r7, r2, #1
 800556e:	eb05 0ec2 	add.w	lr, r5, r2, lsl #3
 8005572:	f855 7037 	ldr.w	r7, [r5, r7, lsl #3]
 8005576:	45be      	cmp	lr, r7
 8005578:	d126      	bne.n	80055c8 <_malloc_r+0x220>
 800557a:	2001      	movs	r0, #1
 800557c:	1092      	asrs	r2, r2, #2
 800557e:	fa00 f202 	lsl.w	r2, r0, r2
 8005582:	6868      	ldr	r0, [r5, #4]
 8005584:	4310      	orrs	r0, r2
 8005586:	6068      	str	r0, [r5, #4]
 8005588:	f8c6 e00c 	str.w	lr, [r6, #12]
 800558c:	60b7      	str	r7, [r6, #8]
 800558e:	f8ce 6008 	str.w	r6, [lr, #8]
 8005592:	e7b3      	b.n	80054fc <_malloc_r+0x154>
 8005594:	2a14      	cmp	r2, #20
 8005596:	d801      	bhi.n	800559c <_malloc_r+0x1f4>
 8005598:	325b      	adds	r2, #91	; 0x5b
 800559a:	e7e7      	b.n	800556c <_malloc_r+0x1c4>
 800559c:	2a54      	cmp	r2, #84	; 0x54
 800559e:	d802      	bhi.n	80055a6 <_malloc_r+0x1fe>
 80055a0:	0b02      	lsrs	r2, r0, #12
 80055a2:	326e      	adds	r2, #110	; 0x6e
 80055a4:	e7e2      	b.n	800556c <_malloc_r+0x1c4>
 80055a6:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
 80055aa:	d802      	bhi.n	80055b2 <_malloc_r+0x20a>
 80055ac:	0bc2      	lsrs	r2, r0, #15
 80055ae:	3277      	adds	r2, #119	; 0x77
 80055b0:	e7dc      	b.n	800556c <_malloc_r+0x1c4>
 80055b2:	f240 5754 	movw	r7, #1364	; 0x554
 80055b6:	42ba      	cmp	r2, r7
 80055b8:	bf9a      	itte	ls
 80055ba:	0c82      	lsrls	r2, r0, #18
 80055bc:	327c      	addls	r2, #124	; 0x7c
 80055be:	227e      	movhi	r2, #126	; 0x7e
 80055c0:	e7d4      	b.n	800556c <_malloc_r+0x1c4>
 80055c2:	68bf      	ldr	r7, [r7, #8]
 80055c4:	45be      	cmp	lr, r7
 80055c6:	d004      	beq.n	80055d2 <_malloc_r+0x22a>
 80055c8:	687a      	ldr	r2, [r7, #4]
 80055ca:	f022 0203 	bic.w	r2, r2, #3
 80055ce:	4290      	cmp	r0, r2
 80055d0:	d3f7      	bcc.n	80055c2 <_malloc_r+0x21a>
 80055d2:	f8d7 e00c 	ldr.w	lr, [r7, #12]
 80055d6:	e7d7      	b.n	8005588 <_malloc_r+0x1e0>
 80055d8:	6870      	ldr	r0, [r6, #4]
 80055da:	68f7      	ldr	r7, [r6, #12]
 80055dc:	f020 0003 	bic.w	r0, r0, #3
 80055e0:	eba0 0a04 	sub.w	sl, r0, r4
 80055e4:	f1ba 0f0f 	cmp.w	sl, #15
 80055e8:	dd10      	ble.n	800560c <_malloc_r+0x264>
 80055ea:	68b2      	ldr	r2, [r6, #8]
 80055ec:	1933      	adds	r3, r6, r4
 80055ee:	f044 0401 	orr.w	r4, r4, #1
 80055f2:	6074      	str	r4, [r6, #4]
 80055f4:	60d7      	str	r7, [r2, #12]
 80055f6:	60ba      	str	r2, [r7, #8]
 80055f8:	f04a 0201 	orr.w	r2, sl, #1
 80055fc:	616b      	str	r3, [r5, #20]
 80055fe:	612b      	str	r3, [r5, #16]
 8005600:	60d9      	str	r1, [r3, #12]
 8005602:	6099      	str	r1, [r3, #8]
 8005604:	605a      	str	r2, [r3, #4]
 8005606:	f846 a000 	str.w	sl, [r6, r0]
 800560a:	e6ff      	b.n	800540c <_malloc_r+0x64>
 800560c:	f1ba 0f00 	cmp.w	sl, #0
 8005610:	db0f      	blt.n	8005632 <_malloc_r+0x28a>
 8005612:	4430      	add	r0, r6
 8005614:	6843      	ldr	r3, [r0, #4]
 8005616:	f043 0301 	orr.w	r3, r3, #1
 800561a:	6043      	str	r3, [r0, #4]
 800561c:	f856 3f08 	ldr.w	r3, [r6, #8]!
 8005620:	4648      	mov	r0, r9
 8005622:	60df      	str	r7, [r3, #12]
 8005624:	60bb      	str	r3, [r7, #8]
 8005626:	f000 f901 	bl	800582c <__malloc_unlock>
 800562a:	4630      	mov	r0, r6
 800562c:	b003      	add	sp, #12
 800562e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005632:	463e      	mov	r6, r7
 8005634:	e77a      	b.n	800552c <_malloc_r+0x184>
 8005636:	f85c 0908 	ldr.w	r0, [ip], #-8
 800563a:	4584      	cmp	ip, r0
 800563c:	f103 33ff 	add.w	r3, r3, #4294967295
 8005640:	f43f af7d 	beq.w	800553e <_malloc_r+0x196>
 8005644:	e781      	b.n	800554a <_malloc_r+0x1a2>
 8005646:	bf00      	nop
 8005648:	200000f8 	.word	0x200000f8
 800564c:	20000100 	.word	0x20000100
 8005650:	f8d5 b008 	ldr.w	fp, [r5, #8]
 8005654:	f8db 6004 	ldr.w	r6, [fp, #4]
 8005658:	f026 0603 	bic.w	r6, r6, #3
 800565c:	42b4      	cmp	r4, r6
 800565e:	d803      	bhi.n	8005668 <_malloc_r+0x2c0>
 8005660:	1b33      	subs	r3, r6, r4
 8005662:	2b0f      	cmp	r3, #15
 8005664:	f300 8096 	bgt.w	8005794 <_malloc_r+0x3ec>
 8005668:	4a4f      	ldr	r2, [pc, #316]	; (80057a8 <_malloc_r+0x400>)
 800566a:	6817      	ldr	r7, [r2, #0]
 800566c:	4a4f      	ldr	r2, [pc, #316]	; (80057ac <_malloc_r+0x404>)
 800566e:	6811      	ldr	r1, [r2, #0]
 8005670:	3710      	adds	r7, #16
 8005672:	3101      	adds	r1, #1
 8005674:	eb0b 0306 	add.w	r3, fp, r6
 8005678:	4427      	add	r7, r4
 800567a:	d005      	beq.n	8005688 <_malloc_r+0x2e0>
 800567c:	494c      	ldr	r1, [pc, #304]	; (80057b0 <_malloc_r+0x408>)
 800567e:	3901      	subs	r1, #1
 8005680:	440f      	add	r7, r1
 8005682:	3101      	adds	r1, #1
 8005684:	4249      	negs	r1, r1
 8005686:	400f      	ands	r7, r1
 8005688:	4639      	mov	r1, r7
 800568a:	4648      	mov	r0, r9
 800568c:	9201      	str	r2, [sp, #4]
 800568e:	9300      	str	r3, [sp, #0]
 8005690:	f000 fd22 	bl	80060d8 <_sbrk_r>
 8005694:	f1b0 3fff 	cmp.w	r0, #4294967295
 8005698:	4680      	mov	r8, r0
 800569a:	d056      	beq.n	800574a <_malloc_r+0x3a2>
 800569c:	9b00      	ldr	r3, [sp, #0]
 800569e:	9a01      	ldr	r2, [sp, #4]
 80056a0:	4283      	cmp	r3, r0
 80056a2:	d901      	bls.n	80056a8 <_malloc_r+0x300>
 80056a4:	45ab      	cmp	fp, r5
 80056a6:	d150      	bne.n	800574a <_malloc_r+0x3a2>
 80056a8:	4842      	ldr	r0, [pc, #264]	; (80057b4 <_malloc_r+0x40c>)
 80056aa:	6801      	ldr	r1, [r0, #0]
 80056ac:	4543      	cmp	r3, r8
 80056ae:	eb07 0e01 	add.w	lr, r7, r1
 80056b2:	f8c0 e000 	str.w	lr, [r0]
 80056b6:	4940      	ldr	r1, [pc, #256]	; (80057b8 <_malloc_r+0x410>)
 80056b8:	4682      	mov	sl, r0
 80056ba:	d113      	bne.n	80056e4 <_malloc_r+0x33c>
 80056bc:	420b      	tst	r3, r1
 80056be:	d111      	bne.n	80056e4 <_malloc_r+0x33c>
 80056c0:	68ab      	ldr	r3, [r5, #8]
 80056c2:	443e      	add	r6, r7
 80056c4:	f046 0601 	orr.w	r6, r6, #1
 80056c8:	605e      	str	r6, [r3, #4]
 80056ca:	4a3c      	ldr	r2, [pc, #240]	; (80057bc <_malloc_r+0x414>)
 80056cc:	f8da 3000 	ldr.w	r3, [sl]
 80056d0:	6811      	ldr	r1, [r2, #0]
 80056d2:	428b      	cmp	r3, r1
 80056d4:	bf88      	it	hi
 80056d6:	6013      	strhi	r3, [r2, #0]
 80056d8:	4a39      	ldr	r2, [pc, #228]	; (80057c0 <_malloc_r+0x418>)
 80056da:	6811      	ldr	r1, [r2, #0]
 80056dc:	428b      	cmp	r3, r1
 80056de:	bf88      	it	hi
 80056e0:	6013      	strhi	r3, [r2, #0]
 80056e2:	e032      	b.n	800574a <_malloc_r+0x3a2>
 80056e4:	6810      	ldr	r0, [r2, #0]
 80056e6:	3001      	adds	r0, #1
 80056e8:	bf1b      	ittet	ne
 80056ea:	eba8 0303 	subne.w	r3, r8, r3
 80056ee:	4473      	addne	r3, lr
 80056f0:	f8c2 8000 	streq.w	r8, [r2]
 80056f4:	f8ca 3000 	strne.w	r3, [sl]
 80056f8:	f018 0007 	ands.w	r0, r8, #7
 80056fc:	bf1c      	itt	ne
 80056fe:	f1c0 0008 	rsbne	r0, r0, #8
 8005702:	4480      	addne	r8, r0
 8005704:	4b2a      	ldr	r3, [pc, #168]	; (80057b0 <_malloc_r+0x408>)
 8005706:	4447      	add	r7, r8
 8005708:	4418      	add	r0, r3
 800570a:	400f      	ands	r7, r1
 800570c:	1bc7      	subs	r7, r0, r7
 800570e:	4639      	mov	r1, r7
 8005710:	4648      	mov	r0, r9
 8005712:	f000 fce1 	bl	80060d8 <_sbrk_r>
 8005716:	1c43      	adds	r3, r0, #1
 8005718:	bf08      	it	eq
 800571a:	4640      	moveq	r0, r8
 800571c:	f8da 3000 	ldr.w	r3, [sl]
 8005720:	f8c5 8008 	str.w	r8, [r5, #8]
 8005724:	bf08      	it	eq
 8005726:	2700      	moveq	r7, #0
 8005728:	eba0 0008 	sub.w	r0, r0, r8
 800572c:	443b      	add	r3, r7
 800572e:	4407      	add	r7, r0
 8005730:	f047 0701 	orr.w	r7, r7, #1
 8005734:	45ab      	cmp	fp, r5
 8005736:	f8ca 3000 	str.w	r3, [sl]
 800573a:	f8c8 7004 	str.w	r7, [r8, #4]
 800573e:	d0c4      	beq.n	80056ca <_malloc_r+0x322>
 8005740:	2e0f      	cmp	r6, #15
 8005742:	d810      	bhi.n	8005766 <_malloc_r+0x3be>
 8005744:	2301      	movs	r3, #1
 8005746:	f8c8 3004 	str.w	r3, [r8, #4]
 800574a:	68ab      	ldr	r3, [r5, #8]
 800574c:	685a      	ldr	r2, [r3, #4]
 800574e:	f022 0203 	bic.w	r2, r2, #3
 8005752:	4294      	cmp	r4, r2
 8005754:	eba2 0304 	sub.w	r3, r2, r4
 8005758:	d801      	bhi.n	800575e <_malloc_r+0x3b6>
 800575a:	2b0f      	cmp	r3, #15
 800575c:	dc1a      	bgt.n	8005794 <_malloc_r+0x3ec>
 800575e:	4648      	mov	r0, r9
 8005760:	f000 f864 	bl	800582c <__malloc_unlock>
 8005764:	e62d      	b.n	80053c2 <_malloc_r+0x1a>
 8005766:	f8db 3004 	ldr.w	r3, [fp, #4]
 800576a:	3e0c      	subs	r6, #12
 800576c:	f026 0607 	bic.w	r6, r6, #7
 8005770:	f003 0301 	and.w	r3, r3, #1
 8005774:	4333      	orrs	r3, r6
 8005776:	f8cb 3004 	str.w	r3, [fp, #4]
 800577a:	eb0b 0306 	add.w	r3, fp, r6
 800577e:	2205      	movs	r2, #5
 8005780:	2e0f      	cmp	r6, #15
 8005782:	605a      	str	r2, [r3, #4]
 8005784:	609a      	str	r2, [r3, #8]
 8005786:	d9a0      	bls.n	80056ca <_malloc_r+0x322>
 8005788:	f10b 0108 	add.w	r1, fp, #8
 800578c:	4648      	mov	r0, r9
 800578e:	f7ff fb5d 	bl	8004e4c <_free_r>
 8005792:	e79a      	b.n	80056ca <_malloc_r+0x322>
 8005794:	68ae      	ldr	r6, [r5, #8]
 8005796:	f044 0201 	orr.w	r2, r4, #1
 800579a:	4434      	add	r4, r6
 800579c:	f043 0301 	orr.w	r3, r3, #1
 80057a0:	6072      	str	r2, [r6, #4]
 80057a2:	60ac      	str	r4, [r5, #8]
 80057a4:	6063      	str	r3, [r4, #4]
 80057a6:	e631      	b.n	800540c <_malloc_r+0x64>
 80057a8:	200006c8 	.word	0x200006c8
 80057ac:	20000500 	.word	0x20000500
 80057b0:	00000080 	.word	0x00000080
 80057b4:	20000698 	.word	0x20000698
 80057b8:	0000007f 	.word	0x0000007f
 80057bc:	200006c0 	.word	0x200006c0
 80057c0:	200006c4 	.word	0x200006c4

080057c4 <memcpy>:
 80057c4:	b510      	push	{r4, lr}
 80057c6:	1e43      	subs	r3, r0, #1
 80057c8:	440a      	add	r2, r1
 80057ca:	4291      	cmp	r1, r2
 80057cc:	d100      	bne.n	80057d0 <memcpy+0xc>
 80057ce:	bd10      	pop	{r4, pc}
 80057d0:	f811 4b01 	ldrb.w	r4, [r1], #1
 80057d4:	f803 4f01 	strb.w	r4, [r3, #1]!
 80057d8:	e7f7      	b.n	80057ca <memcpy+0x6>

080057da <memmove>:
 80057da:	4288      	cmp	r0, r1
 80057dc:	b510      	push	{r4, lr}
 80057de:	eb01 0302 	add.w	r3, r1, r2
 80057e2:	d803      	bhi.n	80057ec <memmove+0x12>
 80057e4:	1e42      	subs	r2, r0, #1
 80057e6:	4299      	cmp	r1, r3
 80057e8:	d10c      	bne.n	8005804 <memmove+0x2a>
 80057ea:	bd10      	pop	{r4, pc}
 80057ec:	4298      	cmp	r0, r3
 80057ee:	d2f9      	bcs.n	80057e4 <memmove+0xa>
 80057f0:	1881      	adds	r1, r0, r2
 80057f2:	1ad2      	subs	r2, r2, r3
 80057f4:	42d3      	cmn	r3, r2
 80057f6:	d100      	bne.n	80057fa <memmove+0x20>
 80057f8:	bd10      	pop	{r4, pc}
 80057fa:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 80057fe:	f801 4d01 	strb.w	r4, [r1, #-1]!
 8005802:	e7f7      	b.n	80057f4 <memmove+0x1a>
 8005804:	f811 4b01 	ldrb.w	r4, [r1], #1
 8005808:	f802 4f01 	strb.w	r4, [r2, #1]!
 800580c:	e7eb      	b.n	80057e6 <memmove+0xc>

0800580e <memset>:
 800580e:	4402      	add	r2, r0
 8005810:	4603      	mov	r3, r0
 8005812:	4293      	cmp	r3, r2
 8005814:	d100      	bne.n	8005818 <memset+0xa>
 8005816:	4770      	bx	lr
 8005818:	f803 1b01 	strb.w	r1, [r3], #1
 800581c:	e7f9      	b.n	8005812 <memset+0x4>
	...

08005820 <__malloc_lock>:
 8005820:	4801      	ldr	r0, [pc, #4]	; (8005828 <__malloc_lock+0x8>)
 8005822:	f7ff bd4b 	b.w	80052bc <__retarget_lock_acquire_recursive>
 8005826:	bf00      	nop
 8005828:	200007c4 	.word	0x200007c4

0800582c <__malloc_unlock>:
 800582c:	4801      	ldr	r0, [pc, #4]	; (8005834 <__malloc_unlock+0x8>)
 800582e:	f7ff bd46 	b.w	80052be <__retarget_lock_release_recursive>
 8005832:	bf00      	nop
 8005834:	200007c4 	.word	0x200007c4

08005838 <_Balloc>:
 8005838:	b570      	push	{r4, r5, r6, lr}
 800583a:	6a45      	ldr	r5, [r0, #36]	; 0x24
 800583c:	4604      	mov	r4, r0
 800583e:	460e      	mov	r6, r1
 8005840:	b93d      	cbnz	r5, 8005852 <_Balloc+0x1a>
 8005842:	2010      	movs	r0, #16
 8005844:	f7ff fda8 	bl	8005398 <malloc>
 8005848:	6260      	str	r0, [r4, #36]	; 0x24
 800584a:	6045      	str	r5, [r0, #4]
 800584c:	6085      	str	r5, [r0, #8]
 800584e:	6005      	str	r5, [r0, #0]
 8005850:	60c5      	str	r5, [r0, #12]
 8005852:	6a65      	ldr	r5, [r4, #36]	; 0x24
 8005854:	68eb      	ldr	r3, [r5, #12]
 8005856:	b183      	cbz	r3, 800587a <_Balloc+0x42>
 8005858:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800585a:	68db      	ldr	r3, [r3, #12]
 800585c:	f853 0026 	ldr.w	r0, [r3, r6, lsl #2]
 8005860:	b9b8      	cbnz	r0, 8005892 <_Balloc+0x5a>
 8005862:	2101      	movs	r1, #1
 8005864:	fa01 f506 	lsl.w	r5, r1, r6
 8005868:	1d6a      	adds	r2, r5, #5
 800586a:	0092      	lsls	r2, r2, #2
 800586c:	4620      	mov	r0, r4
 800586e:	f000 fccd 	bl	800620c <_calloc_r>
 8005872:	b160      	cbz	r0, 800588e <_Balloc+0x56>
 8005874:	6046      	str	r6, [r0, #4]
 8005876:	6085      	str	r5, [r0, #8]
 8005878:	e00e      	b.n	8005898 <_Balloc+0x60>
 800587a:	2221      	movs	r2, #33	; 0x21
 800587c:	2104      	movs	r1, #4
 800587e:	4620      	mov	r0, r4
 8005880:	f000 fcc4 	bl	800620c <_calloc_r>
 8005884:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8005886:	60e8      	str	r0, [r5, #12]
 8005888:	68db      	ldr	r3, [r3, #12]
 800588a:	2b00      	cmp	r3, #0
 800588c:	d1e4      	bne.n	8005858 <_Balloc+0x20>
 800588e:	2000      	movs	r0, #0
 8005890:	bd70      	pop	{r4, r5, r6, pc}
 8005892:	6802      	ldr	r2, [r0, #0]
 8005894:	f843 2026 	str.w	r2, [r3, r6, lsl #2]
 8005898:	2300      	movs	r3, #0
 800589a:	6103      	str	r3, [r0, #16]
 800589c:	60c3      	str	r3, [r0, #12]
 800589e:	bd70      	pop	{r4, r5, r6, pc}

080058a0 <_Bfree>:
 80058a0:	b570      	push	{r4, r5, r6, lr}
 80058a2:	6a44      	ldr	r4, [r0, #36]	; 0x24
 80058a4:	4606      	mov	r6, r0
 80058a6:	460d      	mov	r5, r1
 80058a8:	b93c      	cbnz	r4, 80058ba <_Bfree+0x1a>
 80058aa:	2010      	movs	r0, #16
 80058ac:	f7ff fd74 	bl	8005398 <malloc>
 80058b0:	6270      	str	r0, [r6, #36]	; 0x24
 80058b2:	6044      	str	r4, [r0, #4]
 80058b4:	6084      	str	r4, [r0, #8]
 80058b6:	6004      	str	r4, [r0, #0]
 80058b8:	60c4      	str	r4, [r0, #12]
 80058ba:	b13d      	cbz	r5, 80058cc <_Bfree+0x2c>
 80058bc:	6a73      	ldr	r3, [r6, #36]	; 0x24
 80058be:	686a      	ldr	r2, [r5, #4]
 80058c0:	68db      	ldr	r3, [r3, #12]
 80058c2:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80058c6:	6029      	str	r1, [r5, #0]
 80058c8:	f843 5022 	str.w	r5, [r3, r2, lsl #2]
 80058cc:	bd70      	pop	{r4, r5, r6, pc}

080058ce <__multadd>:
 80058ce:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80058d2:	690d      	ldr	r5, [r1, #16]
 80058d4:	461f      	mov	r7, r3
 80058d6:	4606      	mov	r6, r0
 80058d8:	460c      	mov	r4, r1
 80058da:	f101 0e14 	add.w	lr, r1, #20
 80058de:	2300      	movs	r3, #0
 80058e0:	f8de 0000 	ldr.w	r0, [lr]
 80058e4:	b281      	uxth	r1, r0
 80058e6:	fb02 7101 	mla	r1, r2, r1, r7
 80058ea:	0c0f      	lsrs	r7, r1, #16
 80058ec:	0c00      	lsrs	r0, r0, #16
 80058ee:	fb02 7000 	mla	r0, r2, r0, r7
 80058f2:	b289      	uxth	r1, r1
 80058f4:	3301      	adds	r3, #1
 80058f6:	eb01 4100 	add.w	r1, r1, r0, lsl #16
 80058fa:	429d      	cmp	r5, r3
 80058fc:	ea4f 4710 	mov.w	r7, r0, lsr #16
 8005900:	f84e 1b04 	str.w	r1, [lr], #4
 8005904:	dcec      	bgt.n	80058e0 <__multadd+0x12>
 8005906:	b1d7      	cbz	r7, 800593e <__multadd+0x70>
 8005908:	68a3      	ldr	r3, [r4, #8]
 800590a:	429d      	cmp	r5, r3
 800590c:	db12      	blt.n	8005934 <__multadd+0x66>
 800590e:	6861      	ldr	r1, [r4, #4]
 8005910:	4630      	mov	r0, r6
 8005912:	3101      	adds	r1, #1
 8005914:	f7ff ff90 	bl	8005838 <_Balloc>
 8005918:	6922      	ldr	r2, [r4, #16]
 800591a:	3202      	adds	r2, #2
 800591c:	f104 010c 	add.w	r1, r4, #12
 8005920:	4680      	mov	r8, r0
 8005922:	0092      	lsls	r2, r2, #2
 8005924:	300c      	adds	r0, #12
 8005926:	f7ff ff4d 	bl	80057c4 <memcpy>
 800592a:	4621      	mov	r1, r4
 800592c:	4630      	mov	r0, r6
 800592e:	f7ff ffb7 	bl	80058a0 <_Bfree>
 8005932:	4644      	mov	r4, r8
 8005934:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 8005938:	3501      	adds	r5, #1
 800593a:	615f      	str	r7, [r3, #20]
 800593c:	6125      	str	r5, [r4, #16]
 800593e:	4620      	mov	r0, r4
 8005940:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08005944 <__hi0bits>:
 8005944:	0c02      	lsrs	r2, r0, #16
 8005946:	0412      	lsls	r2, r2, #16
 8005948:	4603      	mov	r3, r0
 800594a:	b9b2      	cbnz	r2, 800597a <__hi0bits+0x36>
 800594c:	0403      	lsls	r3, r0, #16
 800594e:	2010      	movs	r0, #16
 8005950:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8005954:	bf04      	itt	eq
 8005956:	021b      	lsleq	r3, r3, #8
 8005958:	3008      	addeq	r0, #8
 800595a:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 800595e:	bf04      	itt	eq
 8005960:	011b      	lsleq	r3, r3, #4
 8005962:	3004      	addeq	r0, #4
 8005964:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 8005968:	bf04      	itt	eq
 800596a:	009b      	lsleq	r3, r3, #2
 800596c:	3002      	addeq	r0, #2
 800596e:	2b00      	cmp	r3, #0
 8005970:	db06      	blt.n	8005980 <__hi0bits+0x3c>
 8005972:	005b      	lsls	r3, r3, #1
 8005974:	d503      	bpl.n	800597e <__hi0bits+0x3a>
 8005976:	3001      	adds	r0, #1
 8005978:	4770      	bx	lr
 800597a:	2000      	movs	r0, #0
 800597c:	e7e8      	b.n	8005950 <__hi0bits+0xc>
 800597e:	2020      	movs	r0, #32
 8005980:	4770      	bx	lr

08005982 <__lo0bits>:
 8005982:	6803      	ldr	r3, [r0, #0]
 8005984:	f013 0207 	ands.w	r2, r3, #7
 8005988:	4601      	mov	r1, r0
 800598a:	d00b      	beq.n	80059a4 <__lo0bits+0x22>
 800598c:	07da      	lsls	r2, r3, #31
 800598e:	d423      	bmi.n	80059d8 <__lo0bits+0x56>
 8005990:	0798      	lsls	r0, r3, #30
 8005992:	bf49      	itett	mi
 8005994:	085b      	lsrmi	r3, r3, #1
 8005996:	089b      	lsrpl	r3, r3, #2
 8005998:	2001      	movmi	r0, #1
 800599a:	600b      	strmi	r3, [r1, #0]
 800599c:	bf5c      	itt	pl
 800599e:	600b      	strpl	r3, [r1, #0]
 80059a0:	2002      	movpl	r0, #2
 80059a2:	4770      	bx	lr
 80059a4:	b298      	uxth	r0, r3
 80059a6:	b9a8      	cbnz	r0, 80059d4 <__lo0bits+0x52>
 80059a8:	0c1b      	lsrs	r3, r3, #16
 80059aa:	2010      	movs	r0, #16
 80059ac:	f013 0fff 	tst.w	r3, #255	; 0xff
 80059b0:	bf04      	itt	eq
 80059b2:	0a1b      	lsreq	r3, r3, #8
 80059b4:	3008      	addeq	r0, #8
 80059b6:	071a      	lsls	r2, r3, #28
 80059b8:	bf04      	itt	eq
 80059ba:	091b      	lsreq	r3, r3, #4
 80059bc:	3004      	addeq	r0, #4
 80059be:	079a      	lsls	r2, r3, #30
 80059c0:	bf04      	itt	eq
 80059c2:	089b      	lsreq	r3, r3, #2
 80059c4:	3002      	addeq	r0, #2
 80059c6:	07da      	lsls	r2, r3, #31
 80059c8:	d402      	bmi.n	80059d0 <__lo0bits+0x4e>
 80059ca:	085b      	lsrs	r3, r3, #1
 80059cc:	d006      	beq.n	80059dc <__lo0bits+0x5a>
 80059ce:	3001      	adds	r0, #1
 80059d0:	600b      	str	r3, [r1, #0]
 80059d2:	4770      	bx	lr
 80059d4:	4610      	mov	r0, r2
 80059d6:	e7e9      	b.n	80059ac <__lo0bits+0x2a>
 80059d8:	2000      	movs	r0, #0
 80059da:	4770      	bx	lr
 80059dc:	2020      	movs	r0, #32
 80059de:	4770      	bx	lr

080059e0 <__i2b>:
 80059e0:	b510      	push	{r4, lr}
 80059e2:	460c      	mov	r4, r1
 80059e4:	2101      	movs	r1, #1
 80059e6:	f7ff ff27 	bl	8005838 <_Balloc>
 80059ea:	2201      	movs	r2, #1
 80059ec:	6144      	str	r4, [r0, #20]
 80059ee:	6102      	str	r2, [r0, #16]
 80059f0:	bd10      	pop	{r4, pc}

080059f2 <__multiply>:
 80059f2:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80059f6:	4614      	mov	r4, r2
 80059f8:	690a      	ldr	r2, [r1, #16]
 80059fa:	6923      	ldr	r3, [r4, #16]
 80059fc:	429a      	cmp	r2, r3
 80059fe:	bfb8      	it	lt
 8005a00:	460b      	movlt	r3, r1
 8005a02:	4689      	mov	r9, r1
 8005a04:	bfbc      	itt	lt
 8005a06:	46a1      	movlt	r9, r4
 8005a08:	461c      	movlt	r4, r3
 8005a0a:	f8d9 7010 	ldr.w	r7, [r9, #16]
 8005a0e:	f8d4 a010 	ldr.w	sl, [r4, #16]
 8005a12:	f8d9 3008 	ldr.w	r3, [r9, #8]
 8005a16:	f8d9 1004 	ldr.w	r1, [r9, #4]
 8005a1a:	eb07 060a 	add.w	r6, r7, sl
 8005a1e:	429e      	cmp	r6, r3
 8005a20:	bfc8      	it	gt
 8005a22:	3101      	addgt	r1, #1
 8005a24:	f7ff ff08 	bl	8005838 <_Balloc>
 8005a28:	f100 0514 	add.w	r5, r0, #20
 8005a2c:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 8005a30:	462b      	mov	r3, r5
 8005a32:	2200      	movs	r2, #0
 8005a34:	4543      	cmp	r3, r8
 8005a36:	d316      	bcc.n	8005a66 <__multiply+0x74>
 8005a38:	f104 0214 	add.w	r2, r4, #20
 8005a3c:	f109 0114 	add.w	r1, r9, #20
 8005a40:	eb02 038a 	add.w	r3, r2, sl, lsl #2
 8005a44:	eb01 0787 	add.w	r7, r1, r7, lsl #2
 8005a48:	9301      	str	r3, [sp, #4]
 8005a4a:	9c01      	ldr	r4, [sp, #4]
 8005a4c:	4294      	cmp	r4, r2
 8005a4e:	4613      	mov	r3, r2
 8005a50:	d80c      	bhi.n	8005a6c <__multiply+0x7a>
 8005a52:	2e00      	cmp	r6, #0
 8005a54:	dd03      	ble.n	8005a5e <__multiply+0x6c>
 8005a56:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 8005a5a:	2b00      	cmp	r3, #0
 8005a5c:	d054      	beq.n	8005b08 <__multiply+0x116>
 8005a5e:	6106      	str	r6, [r0, #16]
 8005a60:	b003      	add	sp, #12
 8005a62:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005a66:	f843 2b04 	str.w	r2, [r3], #4
 8005a6a:	e7e3      	b.n	8005a34 <__multiply+0x42>
 8005a6c:	f8b3 a000 	ldrh.w	sl, [r3]
 8005a70:	3204      	adds	r2, #4
 8005a72:	f1ba 0f00 	cmp.w	sl, #0
 8005a76:	d020      	beq.n	8005aba <__multiply+0xc8>
 8005a78:	46ae      	mov	lr, r5
 8005a7a:	4689      	mov	r9, r1
 8005a7c:	f04f 0c00 	mov.w	ip, #0
 8005a80:	f859 4b04 	ldr.w	r4, [r9], #4
 8005a84:	f8be b000 	ldrh.w	fp, [lr]
 8005a88:	b2a3      	uxth	r3, r4
 8005a8a:	fb0a b303 	mla	r3, sl, r3, fp
 8005a8e:	ea4f 4b14 	mov.w	fp, r4, lsr #16
 8005a92:	f8de 4000 	ldr.w	r4, [lr]
 8005a96:	4463      	add	r3, ip
 8005a98:	ea4f 4c14 	mov.w	ip, r4, lsr #16
 8005a9c:	fb0a c40b 	mla	r4, sl, fp, ip
 8005aa0:	eb04 4413 	add.w	r4, r4, r3, lsr #16
 8005aa4:	b29b      	uxth	r3, r3
 8005aa6:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 8005aaa:	454f      	cmp	r7, r9
 8005aac:	ea4f 4c14 	mov.w	ip, r4, lsr #16
 8005ab0:	f84e 3b04 	str.w	r3, [lr], #4
 8005ab4:	d8e4      	bhi.n	8005a80 <__multiply+0x8e>
 8005ab6:	f8ce c000 	str.w	ip, [lr]
 8005aba:	f832 9c02 	ldrh.w	r9, [r2, #-2]
 8005abe:	f1b9 0f00 	cmp.w	r9, #0
 8005ac2:	d01f      	beq.n	8005b04 <__multiply+0x112>
 8005ac4:	682b      	ldr	r3, [r5, #0]
 8005ac6:	46ae      	mov	lr, r5
 8005ac8:	468c      	mov	ip, r1
 8005aca:	f04f 0a00 	mov.w	sl, #0
 8005ace:	f8bc 4000 	ldrh.w	r4, [ip]
 8005ad2:	f8be b002 	ldrh.w	fp, [lr, #2]
 8005ad6:	fb09 b404 	mla	r4, r9, r4, fp
 8005ada:	44a2      	add	sl, r4
 8005adc:	b29b      	uxth	r3, r3
 8005ade:	ea43 430a 	orr.w	r3, r3, sl, lsl #16
 8005ae2:	f84e 3b04 	str.w	r3, [lr], #4
 8005ae6:	f85c 3b04 	ldr.w	r3, [ip], #4
 8005aea:	f8be 4000 	ldrh.w	r4, [lr]
 8005aee:	0c1b      	lsrs	r3, r3, #16
 8005af0:	fb09 4303 	mla	r3, r9, r3, r4
 8005af4:	eb03 431a 	add.w	r3, r3, sl, lsr #16
 8005af8:	4567      	cmp	r7, ip
 8005afa:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 8005afe:	d8e6      	bhi.n	8005ace <__multiply+0xdc>
 8005b00:	f8ce 3000 	str.w	r3, [lr]
 8005b04:	3504      	adds	r5, #4
 8005b06:	e7a0      	b.n	8005a4a <__multiply+0x58>
 8005b08:	3e01      	subs	r6, #1
 8005b0a:	e7a2      	b.n	8005a52 <__multiply+0x60>

08005b0c <__pow5mult>:
 8005b0c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8005b10:	4615      	mov	r5, r2
 8005b12:	f012 0203 	ands.w	r2, r2, #3
 8005b16:	4606      	mov	r6, r0
 8005b18:	460f      	mov	r7, r1
 8005b1a:	d007      	beq.n	8005b2c <__pow5mult+0x20>
 8005b1c:	3a01      	subs	r2, #1
 8005b1e:	4c21      	ldr	r4, [pc, #132]	; (8005ba4 <__pow5mult+0x98>)
 8005b20:	2300      	movs	r3, #0
 8005b22:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 8005b26:	f7ff fed2 	bl	80058ce <__multadd>
 8005b2a:	4607      	mov	r7, r0
 8005b2c:	10ad      	asrs	r5, r5, #2
 8005b2e:	d035      	beq.n	8005b9c <__pow5mult+0x90>
 8005b30:	6a74      	ldr	r4, [r6, #36]	; 0x24
 8005b32:	b93c      	cbnz	r4, 8005b44 <__pow5mult+0x38>
 8005b34:	2010      	movs	r0, #16
 8005b36:	f7ff fc2f 	bl	8005398 <malloc>
 8005b3a:	6270      	str	r0, [r6, #36]	; 0x24
 8005b3c:	6044      	str	r4, [r0, #4]
 8005b3e:	6084      	str	r4, [r0, #8]
 8005b40:	6004      	str	r4, [r0, #0]
 8005b42:	60c4      	str	r4, [r0, #12]
 8005b44:	f8d6 8024 	ldr.w	r8, [r6, #36]	; 0x24
 8005b48:	f8d8 4008 	ldr.w	r4, [r8, #8]
 8005b4c:	b94c      	cbnz	r4, 8005b62 <__pow5mult+0x56>
 8005b4e:	f240 2171 	movw	r1, #625	; 0x271
 8005b52:	4630      	mov	r0, r6
 8005b54:	f7ff ff44 	bl	80059e0 <__i2b>
 8005b58:	2300      	movs	r3, #0
 8005b5a:	f8c8 0008 	str.w	r0, [r8, #8]
 8005b5e:	4604      	mov	r4, r0
 8005b60:	6003      	str	r3, [r0, #0]
 8005b62:	f04f 0800 	mov.w	r8, #0
 8005b66:	07eb      	lsls	r3, r5, #31
 8005b68:	d50a      	bpl.n	8005b80 <__pow5mult+0x74>
 8005b6a:	4639      	mov	r1, r7
 8005b6c:	4622      	mov	r2, r4
 8005b6e:	4630      	mov	r0, r6
 8005b70:	f7ff ff3f 	bl	80059f2 <__multiply>
 8005b74:	4639      	mov	r1, r7
 8005b76:	4681      	mov	r9, r0
 8005b78:	4630      	mov	r0, r6
 8005b7a:	f7ff fe91 	bl	80058a0 <_Bfree>
 8005b7e:	464f      	mov	r7, r9
 8005b80:	106d      	asrs	r5, r5, #1
 8005b82:	d00b      	beq.n	8005b9c <__pow5mult+0x90>
 8005b84:	6820      	ldr	r0, [r4, #0]
 8005b86:	b938      	cbnz	r0, 8005b98 <__pow5mult+0x8c>
 8005b88:	4622      	mov	r2, r4
 8005b8a:	4621      	mov	r1, r4
 8005b8c:	4630      	mov	r0, r6
 8005b8e:	f7ff ff30 	bl	80059f2 <__multiply>
 8005b92:	6020      	str	r0, [r4, #0]
 8005b94:	f8c0 8000 	str.w	r8, [r0]
 8005b98:	4604      	mov	r4, r0
 8005b9a:	e7e4      	b.n	8005b66 <__pow5mult+0x5a>
 8005b9c:	4638      	mov	r0, r7
 8005b9e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8005ba2:	bf00      	nop
 8005ba4:	08008158 	.word	0x08008158

08005ba8 <__lshift>:
 8005ba8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005bac:	460c      	mov	r4, r1
 8005bae:	ea4f 1a62 	mov.w	sl, r2, asr #5
 8005bb2:	6923      	ldr	r3, [r4, #16]
 8005bb4:	6849      	ldr	r1, [r1, #4]
 8005bb6:	eb0a 0903 	add.w	r9, sl, r3
 8005bba:	68a3      	ldr	r3, [r4, #8]
 8005bbc:	4607      	mov	r7, r0
 8005bbe:	4616      	mov	r6, r2
 8005bc0:	f109 0501 	add.w	r5, r9, #1
 8005bc4:	42ab      	cmp	r3, r5
 8005bc6:	db31      	blt.n	8005c2c <__lshift+0x84>
 8005bc8:	4638      	mov	r0, r7
 8005bca:	f7ff fe35 	bl	8005838 <_Balloc>
 8005bce:	2200      	movs	r2, #0
 8005bd0:	4680      	mov	r8, r0
 8005bd2:	f100 0314 	add.w	r3, r0, #20
 8005bd6:	4611      	mov	r1, r2
 8005bd8:	4552      	cmp	r2, sl
 8005bda:	db2a      	blt.n	8005c32 <__lshift+0x8a>
 8005bdc:	6920      	ldr	r0, [r4, #16]
 8005bde:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 8005be2:	f104 0114 	add.w	r1, r4, #20
 8005be6:	f016 021f 	ands.w	r2, r6, #31
 8005bea:	eb03 038a 	add.w	r3, r3, sl, lsl #2
 8005bee:	eb01 0e80 	add.w	lr, r1, r0, lsl #2
 8005bf2:	d022      	beq.n	8005c3a <__lshift+0x92>
 8005bf4:	f1c2 0c20 	rsb	ip, r2, #32
 8005bf8:	2000      	movs	r0, #0
 8005bfa:	680e      	ldr	r6, [r1, #0]
 8005bfc:	4096      	lsls	r6, r2
 8005bfe:	4330      	orrs	r0, r6
 8005c00:	f843 0b04 	str.w	r0, [r3], #4
 8005c04:	f851 0b04 	ldr.w	r0, [r1], #4
 8005c08:	458e      	cmp	lr, r1
 8005c0a:	fa20 f00c 	lsr.w	r0, r0, ip
 8005c0e:	d8f4      	bhi.n	8005bfa <__lshift+0x52>
 8005c10:	6018      	str	r0, [r3, #0]
 8005c12:	b108      	cbz	r0, 8005c18 <__lshift+0x70>
 8005c14:	f109 0502 	add.w	r5, r9, #2
 8005c18:	3d01      	subs	r5, #1
 8005c1a:	4638      	mov	r0, r7
 8005c1c:	f8c8 5010 	str.w	r5, [r8, #16]
 8005c20:	4621      	mov	r1, r4
 8005c22:	f7ff fe3d 	bl	80058a0 <_Bfree>
 8005c26:	4640      	mov	r0, r8
 8005c28:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8005c2c:	3101      	adds	r1, #1
 8005c2e:	005b      	lsls	r3, r3, #1
 8005c30:	e7c8      	b.n	8005bc4 <__lshift+0x1c>
 8005c32:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8005c36:	3201      	adds	r2, #1
 8005c38:	e7ce      	b.n	8005bd8 <__lshift+0x30>
 8005c3a:	3b04      	subs	r3, #4
 8005c3c:	f851 2b04 	ldr.w	r2, [r1], #4
 8005c40:	f843 2f04 	str.w	r2, [r3, #4]!
 8005c44:	458e      	cmp	lr, r1
 8005c46:	d8f9      	bhi.n	8005c3c <__lshift+0x94>
 8005c48:	e7e6      	b.n	8005c18 <__lshift+0x70>

08005c4a <__mcmp>:
 8005c4a:	6903      	ldr	r3, [r0, #16]
 8005c4c:	690a      	ldr	r2, [r1, #16]
 8005c4e:	1a9b      	subs	r3, r3, r2
 8005c50:	b530      	push	{r4, r5, lr}
 8005c52:	d10c      	bne.n	8005c6e <__mcmp+0x24>
 8005c54:	0092      	lsls	r2, r2, #2
 8005c56:	3014      	adds	r0, #20
 8005c58:	3114      	adds	r1, #20
 8005c5a:	1884      	adds	r4, r0, r2
 8005c5c:	4411      	add	r1, r2
 8005c5e:	f854 5d04 	ldr.w	r5, [r4, #-4]!
 8005c62:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 8005c66:	4295      	cmp	r5, r2
 8005c68:	d003      	beq.n	8005c72 <__mcmp+0x28>
 8005c6a:	d305      	bcc.n	8005c78 <__mcmp+0x2e>
 8005c6c:	2301      	movs	r3, #1
 8005c6e:	4618      	mov	r0, r3
 8005c70:	bd30      	pop	{r4, r5, pc}
 8005c72:	42a0      	cmp	r0, r4
 8005c74:	d3f3      	bcc.n	8005c5e <__mcmp+0x14>
 8005c76:	e7fa      	b.n	8005c6e <__mcmp+0x24>
 8005c78:	f04f 33ff 	mov.w	r3, #4294967295
 8005c7c:	e7f7      	b.n	8005c6e <__mcmp+0x24>

08005c7e <__mdiff>:
 8005c7e:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005c82:	460d      	mov	r5, r1
 8005c84:	4607      	mov	r7, r0
 8005c86:	4611      	mov	r1, r2
 8005c88:	4628      	mov	r0, r5
 8005c8a:	4614      	mov	r4, r2
 8005c8c:	f7ff ffdd 	bl	8005c4a <__mcmp>
 8005c90:	1e06      	subs	r6, r0, #0
 8005c92:	d108      	bne.n	8005ca6 <__mdiff+0x28>
 8005c94:	4631      	mov	r1, r6
 8005c96:	4638      	mov	r0, r7
 8005c98:	f7ff fdce 	bl	8005838 <_Balloc>
 8005c9c:	2301      	movs	r3, #1
 8005c9e:	6103      	str	r3, [r0, #16]
 8005ca0:	6146      	str	r6, [r0, #20]
 8005ca2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8005ca6:	bfa4      	itt	ge
 8005ca8:	4623      	movge	r3, r4
 8005caa:	462c      	movge	r4, r5
 8005cac:	4638      	mov	r0, r7
 8005cae:	6861      	ldr	r1, [r4, #4]
 8005cb0:	bfa6      	itte	ge
 8005cb2:	461d      	movge	r5, r3
 8005cb4:	2600      	movge	r6, #0
 8005cb6:	2601      	movlt	r6, #1
 8005cb8:	f7ff fdbe 	bl	8005838 <_Balloc>
 8005cbc:	692b      	ldr	r3, [r5, #16]
 8005cbe:	60c6      	str	r6, [r0, #12]
 8005cc0:	6926      	ldr	r6, [r4, #16]
 8005cc2:	f105 0914 	add.w	r9, r5, #20
 8005cc6:	f104 0214 	add.w	r2, r4, #20
 8005cca:	eb02 0786 	add.w	r7, r2, r6, lsl #2
 8005cce:	eb09 0883 	add.w	r8, r9, r3, lsl #2
 8005cd2:	f100 0514 	add.w	r5, r0, #20
 8005cd6:	f04f 0c00 	mov.w	ip, #0
 8005cda:	f852 ab04 	ldr.w	sl, [r2], #4
 8005cde:	f859 4b04 	ldr.w	r4, [r9], #4
 8005ce2:	fa1c f18a 	uxtah	r1, ip, sl
 8005ce6:	b2a3      	uxth	r3, r4
 8005ce8:	1ac9      	subs	r1, r1, r3
 8005cea:	0c23      	lsrs	r3, r4, #16
 8005cec:	ebc3 431a 	rsb	r3, r3, sl, lsr #16
 8005cf0:	eb03 4321 	add.w	r3, r3, r1, asr #16
 8005cf4:	b289      	uxth	r1, r1
 8005cf6:	ea4f 4c23 	mov.w	ip, r3, asr #16
 8005cfa:	45c8      	cmp	r8, r9
 8005cfc:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
 8005d00:	4696      	mov	lr, r2
 8005d02:	f845 3b04 	str.w	r3, [r5], #4
 8005d06:	d8e8      	bhi.n	8005cda <__mdiff+0x5c>
 8005d08:	45be      	cmp	lr, r7
 8005d0a:	d305      	bcc.n	8005d18 <__mdiff+0x9a>
 8005d0c:	f855 3d04 	ldr.w	r3, [r5, #-4]!
 8005d10:	b18b      	cbz	r3, 8005d36 <__mdiff+0xb8>
 8005d12:	6106      	str	r6, [r0, #16]
 8005d14:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8005d18:	f85e 1b04 	ldr.w	r1, [lr], #4
 8005d1c:	fa1c f381 	uxtah	r3, ip, r1
 8005d20:	141a      	asrs	r2, r3, #16
 8005d22:	eb02 4211 	add.w	r2, r2, r1, lsr #16
 8005d26:	b29b      	uxth	r3, r3
 8005d28:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8005d2c:	ea4f 4c22 	mov.w	ip, r2, asr #16
 8005d30:	f845 3b04 	str.w	r3, [r5], #4
 8005d34:	e7e8      	b.n	8005d08 <__mdiff+0x8a>
 8005d36:	3e01      	subs	r6, #1
 8005d38:	e7e8      	b.n	8005d0c <__mdiff+0x8e>

08005d3a <__d2b>:
 8005d3a:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8005d3e:	460e      	mov	r6, r1
 8005d40:	2101      	movs	r1, #1
 8005d42:	ec59 8b10 	vmov	r8, r9, d0
 8005d46:	4615      	mov	r5, r2
 8005d48:	f7ff fd76 	bl	8005838 <_Balloc>
 8005d4c:	f3c9 540a 	ubfx	r4, r9, #20, #11
 8005d50:	4607      	mov	r7, r0
 8005d52:	f3c9 0313 	ubfx	r3, r9, #0, #20
 8005d56:	bb34      	cbnz	r4, 8005da6 <__d2b+0x6c>
 8005d58:	9301      	str	r3, [sp, #4]
 8005d5a:	f1b8 0f00 	cmp.w	r8, #0
 8005d5e:	d027      	beq.n	8005db0 <__d2b+0x76>
 8005d60:	a802      	add	r0, sp, #8
 8005d62:	f840 8d08 	str.w	r8, [r0, #-8]!
 8005d66:	f7ff fe0c 	bl	8005982 <__lo0bits>
 8005d6a:	9900      	ldr	r1, [sp, #0]
 8005d6c:	b1f0      	cbz	r0, 8005dac <__d2b+0x72>
 8005d6e:	9a01      	ldr	r2, [sp, #4]
 8005d70:	f1c0 0320 	rsb	r3, r0, #32
 8005d74:	fa02 f303 	lsl.w	r3, r2, r3
 8005d78:	430b      	orrs	r3, r1
 8005d7a:	40c2      	lsrs	r2, r0
 8005d7c:	617b      	str	r3, [r7, #20]
 8005d7e:	9201      	str	r2, [sp, #4]
 8005d80:	9b01      	ldr	r3, [sp, #4]
 8005d82:	61bb      	str	r3, [r7, #24]
 8005d84:	2b00      	cmp	r3, #0
 8005d86:	bf14      	ite	ne
 8005d88:	2102      	movne	r1, #2
 8005d8a:	2101      	moveq	r1, #1
 8005d8c:	6139      	str	r1, [r7, #16]
 8005d8e:	b1c4      	cbz	r4, 8005dc2 <__d2b+0x88>
 8005d90:	f2a4 4433 	subw	r4, r4, #1075	; 0x433
 8005d94:	4404      	add	r4, r0
 8005d96:	6034      	str	r4, [r6, #0]
 8005d98:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
 8005d9c:	6028      	str	r0, [r5, #0]
 8005d9e:	4638      	mov	r0, r7
 8005da0:	b003      	add	sp, #12
 8005da2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8005da6:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8005daa:	e7d5      	b.n	8005d58 <__d2b+0x1e>
 8005dac:	6179      	str	r1, [r7, #20]
 8005dae:	e7e7      	b.n	8005d80 <__d2b+0x46>
 8005db0:	a801      	add	r0, sp, #4
 8005db2:	f7ff fde6 	bl	8005982 <__lo0bits>
 8005db6:	9b01      	ldr	r3, [sp, #4]
 8005db8:	617b      	str	r3, [r7, #20]
 8005dba:	2101      	movs	r1, #1
 8005dbc:	6139      	str	r1, [r7, #16]
 8005dbe:	3020      	adds	r0, #32
 8005dc0:	e7e5      	b.n	8005d8e <__d2b+0x54>
 8005dc2:	eb07 0381 	add.w	r3, r7, r1, lsl #2
 8005dc6:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
 8005dca:	6030      	str	r0, [r6, #0]
 8005dcc:	6918      	ldr	r0, [r3, #16]
 8005dce:	f7ff fdb9 	bl	8005944 <__hi0bits>
 8005dd2:	ebc0 1041 	rsb	r0, r0, r1, lsl #5
 8005dd6:	e7e1      	b.n	8005d9c <__d2b+0x62>

08005dd8 <_realloc_r>:
 8005dd8:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005ddc:	4682      	mov	sl, r0
 8005dde:	460c      	mov	r4, r1
 8005de0:	b929      	cbnz	r1, 8005dee <_realloc_r+0x16>
 8005de2:	4611      	mov	r1, r2
 8005de4:	b003      	add	sp, #12
 8005de6:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005dea:	f7ff badd 	b.w	80053a8 <_malloc_r>
 8005dee:	9201      	str	r2, [sp, #4]
 8005df0:	f7ff fd16 	bl	8005820 <__malloc_lock>
 8005df4:	9a01      	ldr	r2, [sp, #4]
 8005df6:	f854 5c04 	ldr.w	r5, [r4, #-4]
 8005dfa:	f102 080b 	add.w	r8, r2, #11
 8005dfe:	f1b8 0f16 	cmp.w	r8, #22
 8005e02:	f1a4 0908 	sub.w	r9, r4, #8
 8005e06:	f025 0603 	bic.w	r6, r5, #3
 8005e0a:	d90a      	bls.n	8005e22 <_realloc_r+0x4a>
 8005e0c:	f038 0807 	bics.w	r8, r8, #7
 8005e10:	d509      	bpl.n	8005e26 <_realloc_r+0x4e>
 8005e12:	230c      	movs	r3, #12
 8005e14:	f8ca 3000 	str.w	r3, [sl]
 8005e18:	2700      	movs	r7, #0
 8005e1a:	4638      	mov	r0, r7
 8005e1c:	b003      	add	sp, #12
 8005e1e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005e22:	f04f 0810 	mov.w	r8, #16
 8005e26:	4590      	cmp	r8, r2
 8005e28:	d3f3      	bcc.n	8005e12 <_realloc_r+0x3a>
 8005e2a:	45b0      	cmp	r8, r6
 8005e2c:	f340 8145 	ble.w	80060ba <_realloc_r+0x2e2>
 8005e30:	4ba8      	ldr	r3, [pc, #672]	; (80060d4 <_realloc_r+0x2fc>)
 8005e32:	f8d3 e008 	ldr.w	lr, [r3, #8]
 8005e36:	eb09 0106 	add.w	r1, r9, r6
 8005e3a:	4571      	cmp	r1, lr
 8005e3c:	469b      	mov	fp, r3
 8005e3e:	684b      	ldr	r3, [r1, #4]
 8005e40:	d005      	beq.n	8005e4e <_realloc_r+0x76>
 8005e42:	f023 0001 	bic.w	r0, r3, #1
 8005e46:	4408      	add	r0, r1
 8005e48:	6840      	ldr	r0, [r0, #4]
 8005e4a:	07c7      	lsls	r7, r0, #31
 8005e4c:	d447      	bmi.n	8005ede <_realloc_r+0x106>
 8005e4e:	f023 0303 	bic.w	r3, r3, #3
 8005e52:	4571      	cmp	r1, lr
 8005e54:	eb06 0703 	add.w	r7, r6, r3
 8005e58:	d119      	bne.n	8005e8e <_realloc_r+0xb6>
 8005e5a:	f108 0010 	add.w	r0, r8, #16
 8005e5e:	4287      	cmp	r7, r0
 8005e60:	db3f      	blt.n	8005ee2 <_realloc_r+0x10a>
 8005e62:	eb09 0308 	add.w	r3, r9, r8
 8005e66:	eba7 0708 	sub.w	r7, r7, r8
 8005e6a:	f047 0701 	orr.w	r7, r7, #1
 8005e6e:	f8cb 3008 	str.w	r3, [fp, #8]
 8005e72:	605f      	str	r7, [r3, #4]
 8005e74:	f854 3c04 	ldr.w	r3, [r4, #-4]
 8005e78:	f003 0301 	and.w	r3, r3, #1
 8005e7c:	ea43 0308 	orr.w	r3, r3, r8
 8005e80:	f844 3c04 	str.w	r3, [r4, #-4]
 8005e84:	4650      	mov	r0, sl
 8005e86:	f7ff fcd1 	bl	800582c <__malloc_unlock>
 8005e8a:	4627      	mov	r7, r4
 8005e8c:	e7c5      	b.n	8005e1a <_realloc_r+0x42>
 8005e8e:	45b8      	cmp	r8, r7
 8005e90:	dc27      	bgt.n	8005ee2 <_realloc_r+0x10a>
 8005e92:	68cb      	ldr	r3, [r1, #12]
 8005e94:	688a      	ldr	r2, [r1, #8]
 8005e96:	60d3      	str	r3, [r2, #12]
 8005e98:	609a      	str	r2, [r3, #8]
 8005e9a:	eba7 0008 	sub.w	r0, r7, r8
 8005e9e:	280f      	cmp	r0, #15
 8005ea0:	f8d9 3004 	ldr.w	r3, [r9, #4]
 8005ea4:	eb09 0207 	add.w	r2, r9, r7
 8005ea8:	f240 8109 	bls.w	80060be <_realloc_r+0x2e6>
 8005eac:	eb09 0108 	add.w	r1, r9, r8
 8005eb0:	f003 0301 	and.w	r3, r3, #1
 8005eb4:	ea43 0308 	orr.w	r3, r3, r8
 8005eb8:	f040 0001 	orr.w	r0, r0, #1
 8005ebc:	f8c9 3004 	str.w	r3, [r9, #4]
 8005ec0:	6048      	str	r0, [r1, #4]
 8005ec2:	6853      	ldr	r3, [r2, #4]
 8005ec4:	f043 0301 	orr.w	r3, r3, #1
 8005ec8:	6053      	str	r3, [r2, #4]
 8005eca:	3108      	adds	r1, #8
 8005ecc:	4650      	mov	r0, sl
 8005ece:	f7fe ffbd 	bl	8004e4c <_free_r>
 8005ed2:	4650      	mov	r0, sl
 8005ed4:	f7ff fcaa 	bl	800582c <__malloc_unlock>
 8005ed8:	f109 0708 	add.w	r7, r9, #8
 8005edc:	e79d      	b.n	8005e1a <_realloc_r+0x42>
 8005ede:	2300      	movs	r3, #0
 8005ee0:	4619      	mov	r1, r3
 8005ee2:	07e8      	lsls	r0, r5, #31
 8005ee4:	f100 8084 	bmi.w	8005ff0 <_realloc_r+0x218>
 8005ee8:	f854 5c08 	ldr.w	r5, [r4, #-8]
 8005eec:	eba9 0505 	sub.w	r5, r9, r5
 8005ef0:	6868      	ldr	r0, [r5, #4]
 8005ef2:	f020 0003 	bic.w	r0, r0, #3
 8005ef6:	4430      	add	r0, r6
 8005ef8:	2900      	cmp	r1, #0
 8005efa:	d076      	beq.n	8005fea <_realloc_r+0x212>
 8005efc:	4571      	cmp	r1, lr
 8005efe:	d150      	bne.n	8005fa2 <_realloc_r+0x1ca>
 8005f00:	4403      	add	r3, r0
 8005f02:	f108 0110 	add.w	r1, r8, #16
 8005f06:	428b      	cmp	r3, r1
 8005f08:	db6f      	blt.n	8005fea <_realloc_r+0x212>
 8005f0a:	462f      	mov	r7, r5
 8005f0c:	68ea      	ldr	r2, [r5, #12]
 8005f0e:	f857 1f08 	ldr.w	r1, [r7, #8]!
 8005f12:	60ca      	str	r2, [r1, #12]
 8005f14:	6091      	str	r1, [r2, #8]
 8005f16:	1f32      	subs	r2, r6, #4
 8005f18:	2a24      	cmp	r2, #36	; 0x24
 8005f1a:	d83b      	bhi.n	8005f94 <_realloc_r+0x1bc>
 8005f1c:	2a13      	cmp	r2, #19
 8005f1e:	d936      	bls.n	8005f8e <_realloc_r+0x1b6>
 8005f20:	6821      	ldr	r1, [r4, #0]
 8005f22:	60a9      	str	r1, [r5, #8]
 8005f24:	6861      	ldr	r1, [r4, #4]
 8005f26:	60e9      	str	r1, [r5, #12]
 8005f28:	2a1b      	cmp	r2, #27
 8005f2a:	d81c      	bhi.n	8005f66 <_realloc_r+0x18e>
 8005f2c:	f105 0210 	add.w	r2, r5, #16
 8005f30:	f104 0108 	add.w	r1, r4, #8
 8005f34:	6808      	ldr	r0, [r1, #0]
 8005f36:	6010      	str	r0, [r2, #0]
 8005f38:	6848      	ldr	r0, [r1, #4]
 8005f3a:	6050      	str	r0, [r2, #4]
 8005f3c:	6889      	ldr	r1, [r1, #8]
 8005f3e:	6091      	str	r1, [r2, #8]
 8005f40:	eb05 0208 	add.w	r2, r5, r8
 8005f44:	eba3 0308 	sub.w	r3, r3, r8
 8005f48:	f043 0301 	orr.w	r3, r3, #1
 8005f4c:	f8cb 2008 	str.w	r2, [fp, #8]
 8005f50:	6053      	str	r3, [r2, #4]
 8005f52:	686b      	ldr	r3, [r5, #4]
 8005f54:	f003 0301 	and.w	r3, r3, #1
 8005f58:	ea43 0308 	orr.w	r3, r3, r8
 8005f5c:	606b      	str	r3, [r5, #4]
 8005f5e:	4650      	mov	r0, sl
 8005f60:	f7ff fc64 	bl	800582c <__malloc_unlock>
 8005f64:	e759      	b.n	8005e1a <_realloc_r+0x42>
 8005f66:	68a1      	ldr	r1, [r4, #8]
 8005f68:	6129      	str	r1, [r5, #16]
 8005f6a:	68e1      	ldr	r1, [r4, #12]
 8005f6c:	6169      	str	r1, [r5, #20]
 8005f6e:	2a24      	cmp	r2, #36	; 0x24
 8005f70:	bf01      	itttt	eq
 8005f72:	6922      	ldreq	r2, [r4, #16]
 8005f74:	61aa      	streq	r2, [r5, #24]
 8005f76:	6960      	ldreq	r0, [r4, #20]
 8005f78:	61e8      	streq	r0, [r5, #28]
 8005f7a:	bf19      	ittee	ne
 8005f7c:	f105 0218 	addne.w	r2, r5, #24
 8005f80:	f104 0110 	addne.w	r1, r4, #16
 8005f84:	f105 0220 	addeq.w	r2, r5, #32
 8005f88:	f104 0118 	addeq.w	r1, r4, #24
 8005f8c:	e7d2      	b.n	8005f34 <_realloc_r+0x15c>
 8005f8e:	463a      	mov	r2, r7
 8005f90:	4621      	mov	r1, r4
 8005f92:	e7cf      	b.n	8005f34 <_realloc_r+0x15c>
 8005f94:	4621      	mov	r1, r4
 8005f96:	4638      	mov	r0, r7
 8005f98:	9301      	str	r3, [sp, #4]
 8005f9a:	f7ff fc1e 	bl	80057da <memmove>
 8005f9e:	9b01      	ldr	r3, [sp, #4]
 8005fa0:	e7ce      	b.n	8005f40 <_realloc_r+0x168>
 8005fa2:	18c7      	adds	r7, r0, r3
 8005fa4:	45b8      	cmp	r8, r7
 8005fa6:	dc20      	bgt.n	8005fea <_realloc_r+0x212>
 8005fa8:	68cb      	ldr	r3, [r1, #12]
 8005faa:	688a      	ldr	r2, [r1, #8]
 8005fac:	60d3      	str	r3, [r2, #12]
 8005fae:	609a      	str	r2, [r3, #8]
 8005fb0:	4628      	mov	r0, r5
 8005fb2:	68eb      	ldr	r3, [r5, #12]
 8005fb4:	f850 2f08 	ldr.w	r2, [r0, #8]!
 8005fb8:	60d3      	str	r3, [r2, #12]
 8005fba:	609a      	str	r2, [r3, #8]
 8005fbc:	1f32      	subs	r2, r6, #4
 8005fbe:	2a24      	cmp	r2, #36	; 0x24
 8005fc0:	d842      	bhi.n	8006048 <_realloc_r+0x270>
 8005fc2:	2a13      	cmp	r2, #19
 8005fc4:	d93e      	bls.n	8006044 <_realloc_r+0x26c>
 8005fc6:	6823      	ldr	r3, [r4, #0]
 8005fc8:	60ab      	str	r3, [r5, #8]
 8005fca:	6863      	ldr	r3, [r4, #4]
 8005fcc:	60eb      	str	r3, [r5, #12]
 8005fce:	2a1b      	cmp	r2, #27
 8005fd0:	d824      	bhi.n	800601c <_realloc_r+0x244>
 8005fd2:	f105 0010 	add.w	r0, r5, #16
 8005fd6:	f104 0308 	add.w	r3, r4, #8
 8005fda:	681a      	ldr	r2, [r3, #0]
 8005fdc:	6002      	str	r2, [r0, #0]
 8005fde:	685a      	ldr	r2, [r3, #4]
 8005fe0:	6042      	str	r2, [r0, #4]
 8005fe2:	689b      	ldr	r3, [r3, #8]
 8005fe4:	6083      	str	r3, [r0, #8]
 8005fe6:	46a9      	mov	r9, r5
 8005fe8:	e757      	b.n	8005e9a <_realloc_r+0xc2>
 8005fea:	4580      	cmp	r8, r0
 8005fec:	4607      	mov	r7, r0
 8005fee:	dddf      	ble.n	8005fb0 <_realloc_r+0x1d8>
 8005ff0:	4611      	mov	r1, r2
 8005ff2:	4650      	mov	r0, sl
 8005ff4:	f7ff f9d8 	bl	80053a8 <_malloc_r>
 8005ff8:	4607      	mov	r7, r0
 8005ffa:	2800      	cmp	r0, #0
 8005ffc:	d0af      	beq.n	8005f5e <_realloc_r+0x186>
 8005ffe:	f854 3c04 	ldr.w	r3, [r4, #-4]
 8006002:	f023 0301 	bic.w	r3, r3, #1
 8006006:	f1a0 0208 	sub.w	r2, r0, #8
 800600a:	444b      	add	r3, r9
 800600c:	429a      	cmp	r2, r3
 800600e:	d11f      	bne.n	8006050 <_realloc_r+0x278>
 8006010:	f850 7c04 	ldr.w	r7, [r0, #-4]
 8006014:	f027 0703 	bic.w	r7, r7, #3
 8006018:	4437      	add	r7, r6
 800601a:	e73e      	b.n	8005e9a <_realloc_r+0xc2>
 800601c:	68a3      	ldr	r3, [r4, #8]
 800601e:	612b      	str	r3, [r5, #16]
 8006020:	68e3      	ldr	r3, [r4, #12]
 8006022:	616b      	str	r3, [r5, #20]
 8006024:	2a24      	cmp	r2, #36	; 0x24
 8006026:	bf01      	itttt	eq
 8006028:	6923      	ldreq	r3, [r4, #16]
 800602a:	61ab      	streq	r3, [r5, #24]
 800602c:	6962      	ldreq	r2, [r4, #20]
 800602e:	61ea      	streq	r2, [r5, #28]
 8006030:	bf19      	ittee	ne
 8006032:	f105 0018 	addne.w	r0, r5, #24
 8006036:	f104 0310 	addne.w	r3, r4, #16
 800603a:	f105 0020 	addeq.w	r0, r5, #32
 800603e:	f104 0318 	addeq.w	r3, r4, #24
 8006042:	e7ca      	b.n	8005fda <_realloc_r+0x202>
 8006044:	4623      	mov	r3, r4
 8006046:	e7c8      	b.n	8005fda <_realloc_r+0x202>
 8006048:	4621      	mov	r1, r4
 800604a:	f7ff fbc6 	bl	80057da <memmove>
 800604e:	e7ca      	b.n	8005fe6 <_realloc_r+0x20e>
 8006050:	1f32      	subs	r2, r6, #4
 8006052:	2a24      	cmp	r2, #36	; 0x24
 8006054:	d82d      	bhi.n	80060b2 <_realloc_r+0x2da>
 8006056:	2a13      	cmp	r2, #19
 8006058:	d928      	bls.n	80060ac <_realloc_r+0x2d4>
 800605a:	6823      	ldr	r3, [r4, #0]
 800605c:	6003      	str	r3, [r0, #0]
 800605e:	6863      	ldr	r3, [r4, #4]
 8006060:	6043      	str	r3, [r0, #4]
 8006062:	2a1b      	cmp	r2, #27
 8006064:	d80e      	bhi.n	8006084 <_realloc_r+0x2ac>
 8006066:	f100 0308 	add.w	r3, r0, #8
 800606a:	f104 0208 	add.w	r2, r4, #8
 800606e:	6811      	ldr	r1, [r2, #0]
 8006070:	6019      	str	r1, [r3, #0]
 8006072:	6851      	ldr	r1, [r2, #4]
 8006074:	6059      	str	r1, [r3, #4]
 8006076:	6892      	ldr	r2, [r2, #8]
 8006078:	609a      	str	r2, [r3, #8]
 800607a:	4621      	mov	r1, r4
 800607c:	4650      	mov	r0, sl
 800607e:	f7fe fee5 	bl	8004e4c <_free_r>
 8006082:	e76c      	b.n	8005f5e <_realloc_r+0x186>
 8006084:	68a3      	ldr	r3, [r4, #8]
 8006086:	6083      	str	r3, [r0, #8]
 8006088:	68e3      	ldr	r3, [r4, #12]
 800608a:	60c3      	str	r3, [r0, #12]
 800608c:	2a24      	cmp	r2, #36	; 0x24
 800608e:	bf01      	itttt	eq
 8006090:	6923      	ldreq	r3, [r4, #16]
 8006092:	6103      	streq	r3, [r0, #16]
 8006094:	6961      	ldreq	r1, [r4, #20]
 8006096:	6141      	streq	r1, [r0, #20]
 8006098:	bf19      	ittee	ne
 800609a:	f100 0310 	addne.w	r3, r0, #16
 800609e:	f104 0210 	addne.w	r2, r4, #16
 80060a2:	f100 0318 	addeq.w	r3, r0, #24
 80060a6:	f104 0218 	addeq.w	r2, r4, #24
 80060aa:	e7e0      	b.n	800606e <_realloc_r+0x296>
 80060ac:	4603      	mov	r3, r0
 80060ae:	4622      	mov	r2, r4
 80060b0:	e7dd      	b.n	800606e <_realloc_r+0x296>
 80060b2:	4621      	mov	r1, r4
 80060b4:	f7ff fb91 	bl	80057da <memmove>
 80060b8:	e7df      	b.n	800607a <_realloc_r+0x2a2>
 80060ba:	4637      	mov	r7, r6
 80060bc:	e6ed      	b.n	8005e9a <_realloc_r+0xc2>
 80060be:	f003 0301 	and.w	r3, r3, #1
 80060c2:	431f      	orrs	r7, r3
 80060c4:	f8c9 7004 	str.w	r7, [r9, #4]
 80060c8:	6853      	ldr	r3, [r2, #4]
 80060ca:	f043 0301 	orr.w	r3, r3, #1
 80060ce:	6053      	str	r3, [r2, #4]
 80060d0:	e6ff      	b.n	8005ed2 <_realloc_r+0xfa>
 80060d2:	bf00      	nop
 80060d4:	200000f8 	.word	0x200000f8

080060d8 <_sbrk_r>:
 80060d8:	b538      	push	{r3, r4, r5, lr}
 80060da:	4c06      	ldr	r4, [pc, #24]	; (80060f4 <_sbrk_r+0x1c>)
 80060dc:	2300      	movs	r3, #0
 80060de:	4605      	mov	r5, r0
 80060e0:	4608      	mov	r0, r1
 80060e2:	6023      	str	r3, [r4, #0]
 80060e4:	f001 fb0c 	bl	8007700 <_sbrk>
 80060e8:	1c43      	adds	r3, r0, #1
 80060ea:	d102      	bne.n	80060f2 <_sbrk_r+0x1a>
 80060ec:	6823      	ldr	r3, [r4, #0]
 80060ee:	b103      	cbz	r3, 80060f2 <_sbrk_r+0x1a>
 80060f0:	602b      	str	r3, [r5, #0]
 80060f2:	bd38      	pop	{r3, r4, r5, pc}
 80060f4:	200007cc 	.word	0x200007cc

080060f8 <__sread>:
 80060f8:	b510      	push	{r4, lr}
 80060fa:	460c      	mov	r4, r1
 80060fc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8006100:	f000 f9ec 	bl	80064dc <_read_r>
 8006104:	2800      	cmp	r0, #0
 8006106:	bfab      	itete	ge
 8006108:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 800610a:	89a3      	ldrhlt	r3, [r4, #12]
 800610c:	181b      	addge	r3, r3, r0
 800610e:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8006112:	bfac      	ite	ge
 8006114:	6563      	strge	r3, [r4, #84]	; 0x54
 8006116:	81a3      	strhlt	r3, [r4, #12]
 8006118:	bd10      	pop	{r4, pc}

0800611a <__swrite>:
 800611a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800611e:	461f      	mov	r7, r3
 8006120:	898b      	ldrh	r3, [r1, #12]
 8006122:	05db      	lsls	r3, r3, #23
 8006124:	4605      	mov	r5, r0
 8006126:	460c      	mov	r4, r1
 8006128:	4616      	mov	r6, r2
 800612a:	d505      	bpl.n	8006138 <__swrite+0x1e>
 800612c:	2302      	movs	r3, #2
 800612e:	2200      	movs	r2, #0
 8006130:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8006134:	f000 f9ae 	bl	8006494 <_lseek_r>
 8006138:	89a3      	ldrh	r3, [r4, #12]
 800613a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800613e:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8006142:	81a3      	strh	r3, [r4, #12]
 8006144:	4632      	mov	r2, r6
 8006146:	463b      	mov	r3, r7
 8006148:	4628      	mov	r0, r5
 800614a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800614e:	f000 b84b 	b.w	80061e8 <_write_r>

08006152 <__sseek>:
 8006152:	b510      	push	{r4, lr}
 8006154:	460c      	mov	r4, r1
 8006156:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800615a:	f000 f99b 	bl	8006494 <_lseek_r>
 800615e:	1c43      	adds	r3, r0, #1
 8006160:	89a3      	ldrh	r3, [r4, #12]
 8006162:	bf15      	itete	ne
 8006164:	6560      	strne	r0, [r4, #84]	; 0x54
 8006166:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 800616a:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 800616e:	81a3      	strheq	r3, [r4, #12]
 8006170:	bf18      	it	ne
 8006172:	81a3      	strhne	r3, [r4, #12]
 8006174:	bd10      	pop	{r4, pc}

08006176 <__sclose>:
 8006176:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800617a:	f000 b875 	b.w	8006268 <_close_r>

0800617e <__sprint_r>:
 800617e:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006182:	6893      	ldr	r3, [r2, #8]
 8006184:	4680      	mov	r8, r0
 8006186:	460f      	mov	r7, r1
 8006188:	4614      	mov	r4, r2
 800618a:	b91b      	cbnz	r3, 8006194 <__sprint_r+0x16>
 800618c:	6053      	str	r3, [r2, #4]
 800618e:	4618      	mov	r0, r3
 8006190:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006194:	6e4b      	ldr	r3, [r1, #100]	; 0x64
 8006196:	049d      	lsls	r5, r3, #18
 8006198:	d523      	bpl.n	80061e2 <__sprint_r+0x64>
 800619a:	6815      	ldr	r5, [r2, #0]
 800619c:	68a0      	ldr	r0, [r4, #8]
 800619e:	3508      	adds	r5, #8
 80061a0:	b920      	cbnz	r0, 80061ac <__sprint_r+0x2e>
 80061a2:	2300      	movs	r3, #0
 80061a4:	60a3      	str	r3, [r4, #8]
 80061a6:	6063      	str	r3, [r4, #4]
 80061a8:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80061ac:	f855 6c04 	ldr.w	r6, [r5, #-4]
 80061b0:	f855 bc08 	ldr.w	fp, [r5, #-8]
 80061b4:	ea4f 0a96 	mov.w	sl, r6, lsr #2
 80061b8:	f04f 0900 	mov.w	r9, #0
 80061bc:	45ca      	cmp	sl, r9
 80061be:	dc05      	bgt.n	80061cc <__sprint_r+0x4e>
 80061c0:	68a3      	ldr	r3, [r4, #8]
 80061c2:	f026 0603 	bic.w	r6, r6, #3
 80061c6:	1b9e      	subs	r6, r3, r6
 80061c8:	60a6      	str	r6, [r4, #8]
 80061ca:	e7e7      	b.n	800619c <__sprint_r+0x1e>
 80061cc:	463a      	mov	r2, r7
 80061ce:	f85b 1029 	ldr.w	r1, [fp, r9, lsl #2]
 80061d2:	4640      	mov	r0, r8
 80061d4:	f000 f905 	bl	80063e2 <_fputwc_r>
 80061d8:	1c43      	adds	r3, r0, #1
 80061da:	d0e2      	beq.n	80061a2 <__sprint_r+0x24>
 80061dc:	f109 0901 	add.w	r9, r9, #1
 80061e0:	e7ec      	b.n	80061bc <__sprint_r+0x3e>
 80061e2:	f7fe feef 	bl	8004fc4 <__sfvwrite_r>
 80061e6:	e7dc      	b.n	80061a2 <__sprint_r+0x24>

080061e8 <_write_r>:
 80061e8:	b538      	push	{r3, r4, r5, lr}
 80061ea:	4c07      	ldr	r4, [pc, #28]	; (8006208 <_write_r+0x20>)
 80061ec:	4605      	mov	r5, r0
 80061ee:	4608      	mov	r0, r1
 80061f0:	4611      	mov	r1, r2
 80061f2:	2200      	movs	r2, #0
 80061f4:	6022      	str	r2, [r4, #0]
 80061f6:	461a      	mov	r2, r3
 80061f8:	f7fc f9e0 	bl	80025bc <_write>
 80061fc:	1c43      	adds	r3, r0, #1
 80061fe:	d102      	bne.n	8006206 <_write_r+0x1e>
 8006200:	6823      	ldr	r3, [r4, #0]
 8006202:	b103      	cbz	r3, 8006206 <_write_r+0x1e>
 8006204:	602b      	str	r3, [r5, #0]
 8006206:	bd38      	pop	{r3, r4, r5, pc}
 8006208:	200007cc 	.word	0x200007cc

0800620c <_calloc_r>:
 800620c:	b510      	push	{r4, lr}
 800620e:	4351      	muls	r1, r2
 8006210:	f7ff f8ca 	bl	80053a8 <_malloc_r>
 8006214:	4604      	mov	r4, r0
 8006216:	b198      	cbz	r0, 8006240 <_calloc_r+0x34>
 8006218:	f850 2c04 	ldr.w	r2, [r0, #-4]
 800621c:	f022 0203 	bic.w	r2, r2, #3
 8006220:	3a04      	subs	r2, #4
 8006222:	2a24      	cmp	r2, #36	; 0x24
 8006224:	d81b      	bhi.n	800625e <_calloc_r+0x52>
 8006226:	2a13      	cmp	r2, #19
 8006228:	d917      	bls.n	800625a <_calloc_r+0x4e>
 800622a:	2100      	movs	r1, #0
 800622c:	2a1b      	cmp	r2, #27
 800622e:	6001      	str	r1, [r0, #0]
 8006230:	6041      	str	r1, [r0, #4]
 8006232:	d807      	bhi.n	8006244 <_calloc_r+0x38>
 8006234:	f100 0308 	add.w	r3, r0, #8
 8006238:	2200      	movs	r2, #0
 800623a:	601a      	str	r2, [r3, #0]
 800623c:	605a      	str	r2, [r3, #4]
 800623e:	609a      	str	r2, [r3, #8]
 8006240:	4620      	mov	r0, r4
 8006242:	bd10      	pop	{r4, pc}
 8006244:	2a24      	cmp	r2, #36	; 0x24
 8006246:	6081      	str	r1, [r0, #8]
 8006248:	60c1      	str	r1, [r0, #12]
 800624a:	bf11      	iteee	ne
 800624c:	f100 0310 	addne.w	r3, r0, #16
 8006250:	6101      	streq	r1, [r0, #16]
 8006252:	f100 0318 	addeq.w	r3, r0, #24
 8006256:	6141      	streq	r1, [r0, #20]
 8006258:	e7ee      	b.n	8006238 <_calloc_r+0x2c>
 800625a:	4603      	mov	r3, r0
 800625c:	e7ec      	b.n	8006238 <_calloc_r+0x2c>
 800625e:	2100      	movs	r1, #0
 8006260:	f7ff fad5 	bl	800580e <memset>
 8006264:	e7ec      	b.n	8006240 <_calloc_r+0x34>
	...

08006268 <_close_r>:
 8006268:	b538      	push	{r3, r4, r5, lr}
 800626a:	4c06      	ldr	r4, [pc, #24]	; (8006284 <_close_r+0x1c>)
 800626c:	2300      	movs	r3, #0
 800626e:	4605      	mov	r5, r0
 8006270:	4608      	mov	r0, r1
 8006272:	6023      	str	r3, [r4, #0]
 8006274:	f001 fa1c 	bl	80076b0 <_close>
 8006278:	1c43      	adds	r3, r0, #1
 800627a:	d102      	bne.n	8006282 <_close_r+0x1a>
 800627c:	6823      	ldr	r3, [r4, #0]
 800627e:	b103      	cbz	r3, 8006282 <_close_r+0x1a>
 8006280:	602b      	str	r3, [r5, #0]
 8006282:	bd38      	pop	{r3, r4, r5, pc}
 8006284:	200007cc 	.word	0x200007cc

08006288 <_fclose_r>:
 8006288:	b570      	push	{r4, r5, r6, lr}
 800628a:	4605      	mov	r5, r0
 800628c:	460c      	mov	r4, r1
 800628e:	b911      	cbnz	r1, 8006296 <_fclose_r+0xe>
 8006290:	2600      	movs	r6, #0
 8006292:	4630      	mov	r0, r6
 8006294:	bd70      	pop	{r4, r5, r6, pc}
 8006296:	b118      	cbz	r0, 80062a0 <_fclose_r+0x18>
 8006298:	6983      	ldr	r3, [r0, #24]
 800629a:	b90b      	cbnz	r3, 80062a0 <_fclose_r+0x18>
 800629c:	f7fe fd00 	bl	8004ca0 <__sinit>
 80062a0:	4b2c      	ldr	r3, [pc, #176]	; (8006354 <_fclose_r+0xcc>)
 80062a2:	429c      	cmp	r4, r3
 80062a4:	d114      	bne.n	80062d0 <_fclose_r+0x48>
 80062a6:	686c      	ldr	r4, [r5, #4]
 80062a8:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80062aa:	07d8      	lsls	r0, r3, #31
 80062ac:	d405      	bmi.n	80062ba <_fclose_r+0x32>
 80062ae:	89a3      	ldrh	r3, [r4, #12]
 80062b0:	0599      	lsls	r1, r3, #22
 80062b2:	d402      	bmi.n	80062ba <_fclose_r+0x32>
 80062b4:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80062b6:	f7ff f801 	bl	80052bc <__retarget_lock_acquire_recursive>
 80062ba:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80062be:	b98b      	cbnz	r3, 80062e4 <_fclose_r+0x5c>
 80062c0:	6e66      	ldr	r6, [r4, #100]	; 0x64
 80062c2:	f016 0601 	ands.w	r6, r6, #1
 80062c6:	d1e3      	bne.n	8006290 <_fclose_r+0x8>
 80062c8:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80062ca:	f7fe fff8 	bl	80052be <__retarget_lock_release_recursive>
 80062ce:	e7e0      	b.n	8006292 <_fclose_r+0xa>
 80062d0:	4b21      	ldr	r3, [pc, #132]	; (8006358 <_fclose_r+0xd0>)
 80062d2:	429c      	cmp	r4, r3
 80062d4:	d101      	bne.n	80062da <_fclose_r+0x52>
 80062d6:	68ac      	ldr	r4, [r5, #8]
 80062d8:	e7e6      	b.n	80062a8 <_fclose_r+0x20>
 80062da:	4b20      	ldr	r3, [pc, #128]	; (800635c <_fclose_r+0xd4>)
 80062dc:	429c      	cmp	r4, r3
 80062de:	bf08      	it	eq
 80062e0:	68ec      	ldreq	r4, [r5, #12]
 80062e2:	e7e1      	b.n	80062a8 <_fclose_r+0x20>
 80062e4:	4621      	mov	r1, r4
 80062e6:	4628      	mov	r0, r5
 80062e8:	f7fe fbb4 	bl	8004a54 <__sflush_r>
 80062ec:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80062ee:	4606      	mov	r6, r0
 80062f0:	b133      	cbz	r3, 8006300 <_fclose_r+0x78>
 80062f2:	6a21      	ldr	r1, [r4, #32]
 80062f4:	4628      	mov	r0, r5
 80062f6:	4798      	blx	r3
 80062f8:	2800      	cmp	r0, #0
 80062fa:	bfb8      	it	lt
 80062fc:	f04f 36ff 	movlt.w	r6, #4294967295
 8006300:	89a3      	ldrh	r3, [r4, #12]
 8006302:	061a      	lsls	r2, r3, #24
 8006304:	d503      	bpl.n	800630e <_fclose_r+0x86>
 8006306:	6921      	ldr	r1, [r4, #16]
 8006308:	4628      	mov	r0, r5
 800630a:	f7fe fd9f 	bl	8004e4c <_free_r>
 800630e:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8006310:	b141      	cbz	r1, 8006324 <_fclose_r+0x9c>
 8006312:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8006316:	4299      	cmp	r1, r3
 8006318:	d002      	beq.n	8006320 <_fclose_r+0x98>
 800631a:	4628      	mov	r0, r5
 800631c:	f7fe fd96 	bl	8004e4c <_free_r>
 8006320:	2300      	movs	r3, #0
 8006322:	6363      	str	r3, [r4, #52]	; 0x34
 8006324:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 8006326:	b121      	cbz	r1, 8006332 <_fclose_r+0xaa>
 8006328:	4628      	mov	r0, r5
 800632a:	f7fe fd8f 	bl	8004e4c <_free_r>
 800632e:	2300      	movs	r3, #0
 8006330:	64a3      	str	r3, [r4, #72]	; 0x48
 8006332:	f7fe fc9d 	bl	8004c70 <__sfp_lock_acquire>
 8006336:	2300      	movs	r3, #0
 8006338:	81a3      	strh	r3, [r4, #12]
 800633a:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800633c:	07db      	lsls	r3, r3, #31
 800633e:	d402      	bmi.n	8006346 <_fclose_r+0xbe>
 8006340:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8006342:	f7fe ffbc 	bl	80052be <__retarget_lock_release_recursive>
 8006346:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8006348:	f7fe ffb7 	bl	80052ba <__retarget_lock_close_recursive>
 800634c:	f7fe fc96 	bl	8004c7c <__sfp_lock_release>
 8006350:	e79f      	b.n	8006292 <_fclose_r+0xa>
 8006352:	bf00      	nop
 8006354:	08008024 	.word	0x08008024
 8006358:	08008044 	.word	0x08008044
 800635c:	08008004 	.word	0x08008004

08006360 <__fputwc>:
 8006360:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8006364:	4680      	mov	r8, r0
 8006366:	460e      	mov	r6, r1
 8006368:	4614      	mov	r4, r2
 800636a:	f000 f885 	bl	8006478 <__locale_mb_cur_max>
 800636e:	2801      	cmp	r0, #1
 8006370:	d11c      	bne.n	80063ac <__fputwc+0x4c>
 8006372:	1e73      	subs	r3, r6, #1
 8006374:	2bfe      	cmp	r3, #254	; 0xfe
 8006376:	d819      	bhi.n	80063ac <__fputwc+0x4c>
 8006378:	f88d 6004 	strb.w	r6, [sp, #4]
 800637c:	4605      	mov	r5, r0
 800637e:	2700      	movs	r7, #0
 8006380:	f10d 0904 	add.w	r9, sp, #4
 8006384:	42af      	cmp	r7, r5
 8006386:	d020      	beq.n	80063ca <__fputwc+0x6a>
 8006388:	68a3      	ldr	r3, [r4, #8]
 800638a:	f817 1009 	ldrb.w	r1, [r7, r9]
 800638e:	3b01      	subs	r3, #1
 8006390:	2b00      	cmp	r3, #0
 8006392:	60a3      	str	r3, [r4, #8]
 8006394:	da04      	bge.n	80063a0 <__fputwc+0x40>
 8006396:	69a2      	ldr	r2, [r4, #24]
 8006398:	4293      	cmp	r3, r2
 800639a:	db1a      	blt.n	80063d2 <__fputwc+0x72>
 800639c:	290a      	cmp	r1, #10
 800639e:	d018      	beq.n	80063d2 <__fputwc+0x72>
 80063a0:	6823      	ldr	r3, [r4, #0]
 80063a2:	1c5a      	adds	r2, r3, #1
 80063a4:	6022      	str	r2, [r4, #0]
 80063a6:	7019      	strb	r1, [r3, #0]
 80063a8:	3701      	adds	r7, #1
 80063aa:	e7eb      	b.n	8006384 <__fputwc+0x24>
 80063ac:	4632      	mov	r2, r6
 80063ae:	f104 035c 	add.w	r3, r4, #92	; 0x5c
 80063b2:	a901      	add	r1, sp, #4
 80063b4:	4640      	mov	r0, r8
 80063b6:	f000 f901 	bl	80065bc <_wcrtomb_r>
 80063ba:	1c42      	adds	r2, r0, #1
 80063bc:	4605      	mov	r5, r0
 80063be:	d1de      	bne.n	800637e <__fputwc+0x1e>
 80063c0:	89a3      	ldrh	r3, [r4, #12]
 80063c2:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80063c6:	81a3      	strh	r3, [r4, #12]
 80063c8:	4606      	mov	r6, r0
 80063ca:	4630      	mov	r0, r6
 80063cc:	b003      	add	sp, #12
 80063ce:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80063d2:	4622      	mov	r2, r4
 80063d4:	4640      	mov	r0, r8
 80063d6:	f000 f893 	bl	8006500 <__swbuf_r>
 80063da:	1c43      	adds	r3, r0, #1
 80063dc:	d1e4      	bne.n	80063a8 <__fputwc+0x48>
 80063de:	4606      	mov	r6, r0
 80063e0:	e7f3      	b.n	80063ca <__fputwc+0x6a>

080063e2 <_fputwc_r>:
 80063e2:	6e53      	ldr	r3, [r2, #100]	; 0x64
 80063e4:	07db      	lsls	r3, r3, #31
 80063e6:	b570      	push	{r4, r5, r6, lr}
 80063e8:	4605      	mov	r5, r0
 80063ea:	460e      	mov	r6, r1
 80063ec:	4614      	mov	r4, r2
 80063ee:	d405      	bmi.n	80063fc <_fputwc_r+0x1a>
 80063f0:	8993      	ldrh	r3, [r2, #12]
 80063f2:	0598      	lsls	r0, r3, #22
 80063f4:	d402      	bmi.n	80063fc <_fputwc_r+0x1a>
 80063f6:	6d90      	ldr	r0, [r2, #88]	; 0x58
 80063f8:	f7fe ff60 	bl	80052bc <__retarget_lock_acquire_recursive>
 80063fc:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8006400:	0499      	lsls	r1, r3, #18
 8006402:	d406      	bmi.n	8006412 <_fputwc_r+0x30>
 8006404:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8006408:	81a3      	strh	r3, [r4, #12]
 800640a:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800640c:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8006410:	6663      	str	r3, [r4, #100]	; 0x64
 8006412:	4622      	mov	r2, r4
 8006414:	4628      	mov	r0, r5
 8006416:	4631      	mov	r1, r6
 8006418:	f7ff ffa2 	bl	8006360 <__fputwc>
 800641c:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800641e:	07da      	lsls	r2, r3, #31
 8006420:	4605      	mov	r5, r0
 8006422:	d405      	bmi.n	8006430 <_fputwc_r+0x4e>
 8006424:	89a3      	ldrh	r3, [r4, #12]
 8006426:	059b      	lsls	r3, r3, #22
 8006428:	d402      	bmi.n	8006430 <_fputwc_r+0x4e>
 800642a:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800642c:	f7fe ff47 	bl	80052be <__retarget_lock_release_recursive>
 8006430:	4628      	mov	r0, r5
 8006432:	bd70      	pop	{r4, r5, r6, pc}

08006434 <_fstat_r>:
 8006434:	b538      	push	{r3, r4, r5, lr}
 8006436:	4c07      	ldr	r4, [pc, #28]	; (8006454 <_fstat_r+0x20>)
 8006438:	2300      	movs	r3, #0
 800643a:	4605      	mov	r5, r0
 800643c:	4608      	mov	r0, r1
 800643e:	4611      	mov	r1, r2
 8006440:	6023      	str	r3, [r4, #0]
 8006442:	f001 f93d 	bl	80076c0 <_fstat>
 8006446:	1c43      	adds	r3, r0, #1
 8006448:	d102      	bne.n	8006450 <_fstat_r+0x1c>
 800644a:	6823      	ldr	r3, [r4, #0]
 800644c:	b103      	cbz	r3, 8006450 <_fstat_r+0x1c>
 800644e:	602b      	str	r3, [r5, #0]
 8006450:	bd38      	pop	{r3, r4, r5, pc}
 8006452:	bf00      	nop
 8006454:	200007cc 	.word	0x200007cc

08006458 <_isatty_r>:
 8006458:	b538      	push	{r3, r4, r5, lr}
 800645a:	4c06      	ldr	r4, [pc, #24]	; (8006474 <_isatty_r+0x1c>)
 800645c:	2300      	movs	r3, #0
 800645e:	4605      	mov	r5, r0
 8006460:	4608      	mov	r0, r1
 8006462:	6023      	str	r3, [r4, #0]
 8006464:	f001 f934 	bl	80076d0 <_isatty>
 8006468:	1c43      	adds	r3, r0, #1
 800646a:	d102      	bne.n	8006472 <_isatty_r+0x1a>
 800646c:	6823      	ldr	r3, [r4, #0]
 800646e:	b103      	cbz	r3, 8006472 <_isatty_r+0x1a>
 8006470:	602b      	str	r3, [r5, #0]
 8006472:	bd38      	pop	{r3, r4, r5, pc}
 8006474:	200007cc 	.word	0x200007cc

08006478 <__locale_mb_cur_max>:
 8006478:	4b04      	ldr	r3, [pc, #16]	; (800648c <__locale_mb_cur_max+0x14>)
 800647a:	4a05      	ldr	r2, [pc, #20]	; (8006490 <__locale_mb_cur_max+0x18>)
 800647c:	681b      	ldr	r3, [r3, #0]
 800647e:	6a1b      	ldr	r3, [r3, #32]
 8006480:	2b00      	cmp	r3, #0
 8006482:	bf08      	it	eq
 8006484:	4613      	moveq	r3, r2
 8006486:	f893 0128 	ldrb.w	r0, [r3, #296]	; 0x128
 800648a:	4770      	bx	lr
 800648c:	20000004 	.word	0x20000004
 8006490:	20000508 	.word	0x20000508

08006494 <_lseek_r>:
 8006494:	b538      	push	{r3, r4, r5, lr}
 8006496:	4c07      	ldr	r4, [pc, #28]	; (80064b4 <_lseek_r+0x20>)
 8006498:	4605      	mov	r5, r0
 800649a:	4608      	mov	r0, r1
 800649c:	4611      	mov	r1, r2
 800649e:	2200      	movs	r2, #0
 80064a0:	6022      	str	r2, [r4, #0]
 80064a2:	461a      	mov	r2, r3
 80064a4:	f001 f91c 	bl	80076e0 <_lseek>
 80064a8:	1c43      	adds	r3, r0, #1
 80064aa:	d102      	bne.n	80064b2 <_lseek_r+0x1e>
 80064ac:	6823      	ldr	r3, [r4, #0]
 80064ae:	b103      	cbz	r3, 80064b2 <_lseek_r+0x1e>
 80064b0:	602b      	str	r3, [r5, #0]
 80064b2:	bd38      	pop	{r3, r4, r5, pc}
 80064b4:	200007cc 	.word	0x200007cc

080064b8 <__ascii_mbtowc>:
 80064b8:	b082      	sub	sp, #8
 80064ba:	b901      	cbnz	r1, 80064be <__ascii_mbtowc+0x6>
 80064bc:	a901      	add	r1, sp, #4
 80064be:	b142      	cbz	r2, 80064d2 <__ascii_mbtowc+0x1a>
 80064c0:	b14b      	cbz	r3, 80064d6 <__ascii_mbtowc+0x1e>
 80064c2:	7813      	ldrb	r3, [r2, #0]
 80064c4:	600b      	str	r3, [r1, #0]
 80064c6:	7812      	ldrb	r2, [r2, #0]
 80064c8:	1c10      	adds	r0, r2, #0
 80064ca:	bf18      	it	ne
 80064cc:	2001      	movne	r0, #1
 80064ce:	b002      	add	sp, #8
 80064d0:	4770      	bx	lr
 80064d2:	4610      	mov	r0, r2
 80064d4:	e7fb      	b.n	80064ce <__ascii_mbtowc+0x16>
 80064d6:	f06f 0001 	mvn.w	r0, #1
 80064da:	e7f8      	b.n	80064ce <__ascii_mbtowc+0x16>

080064dc <_read_r>:
 80064dc:	b538      	push	{r3, r4, r5, lr}
 80064de:	4c07      	ldr	r4, [pc, #28]	; (80064fc <_read_r+0x20>)
 80064e0:	4605      	mov	r5, r0
 80064e2:	4608      	mov	r0, r1
 80064e4:	4611      	mov	r1, r2
 80064e6:	2200      	movs	r2, #0
 80064e8:	6022      	str	r2, [r4, #0]
 80064ea:	461a      	mov	r2, r3
 80064ec:	f001 f900 	bl	80076f0 <_read>
 80064f0:	1c43      	adds	r3, r0, #1
 80064f2:	d102      	bne.n	80064fa <_read_r+0x1e>
 80064f4:	6823      	ldr	r3, [r4, #0]
 80064f6:	b103      	cbz	r3, 80064fa <_read_r+0x1e>
 80064f8:	602b      	str	r3, [r5, #0]
 80064fa:	bd38      	pop	{r3, r4, r5, pc}
 80064fc:	200007cc 	.word	0x200007cc

08006500 <__swbuf_r>:
 8006500:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006502:	460e      	mov	r6, r1
 8006504:	4614      	mov	r4, r2
 8006506:	4605      	mov	r5, r0
 8006508:	b118      	cbz	r0, 8006512 <__swbuf_r+0x12>
 800650a:	6983      	ldr	r3, [r0, #24]
 800650c:	b90b      	cbnz	r3, 8006512 <__swbuf_r+0x12>
 800650e:	f7fe fbc7 	bl	8004ca0 <__sinit>
 8006512:	4b27      	ldr	r3, [pc, #156]	; (80065b0 <__swbuf_r+0xb0>)
 8006514:	429c      	cmp	r4, r3
 8006516:	d12f      	bne.n	8006578 <__swbuf_r+0x78>
 8006518:	686c      	ldr	r4, [r5, #4]
 800651a:	69a3      	ldr	r3, [r4, #24]
 800651c:	60a3      	str	r3, [r4, #8]
 800651e:	89a3      	ldrh	r3, [r4, #12]
 8006520:	0719      	lsls	r1, r3, #28
 8006522:	d533      	bpl.n	800658c <__swbuf_r+0x8c>
 8006524:	6923      	ldr	r3, [r4, #16]
 8006526:	2b00      	cmp	r3, #0
 8006528:	d030      	beq.n	800658c <__swbuf_r+0x8c>
 800652a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800652e:	b2f6      	uxtb	r6, r6
 8006530:	049a      	lsls	r2, r3, #18
 8006532:	4637      	mov	r7, r6
 8006534:	d534      	bpl.n	80065a0 <__swbuf_r+0xa0>
 8006536:	6923      	ldr	r3, [r4, #16]
 8006538:	6820      	ldr	r0, [r4, #0]
 800653a:	1ac0      	subs	r0, r0, r3
 800653c:	6963      	ldr	r3, [r4, #20]
 800653e:	4298      	cmp	r0, r3
 8006540:	db04      	blt.n	800654c <__swbuf_r+0x4c>
 8006542:	4621      	mov	r1, r4
 8006544:	4628      	mov	r0, r5
 8006546:	f7fe fb17 	bl	8004b78 <_fflush_r>
 800654a:	bb28      	cbnz	r0, 8006598 <__swbuf_r+0x98>
 800654c:	68a3      	ldr	r3, [r4, #8]
 800654e:	3b01      	subs	r3, #1
 8006550:	60a3      	str	r3, [r4, #8]
 8006552:	6823      	ldr	r3, [r4, #0]
 8006554:	1c5a      	adds	r2, r3, #1
 8006556:	6022      	str	r2, [r4, #0]
 8006558:	701e      	strb	r6, [r3, #0]
 800655a:	6963      	ldr	r3, [r4, #20]
 800655c:	3001      	adds	r0, #1
 800655e:	4298      	cmp	r0, r3
 8006560:	d004      	beq.n	800656c <__swbuf_r+0x6c>
 8006562:	89a3      	ldrh	r3, [r4, #12]
 8006564:	07db      	lsls	r3, r3, #31
 8006566:	d519      	bpl.n	800659c <__swbuf_r+0x9c>
 8006568:	2e0a      	cmp	r6, #10
 800656a:	d117      	bne.n	800659c <__swbuf_r+0x9c>
 800656c:	4621      	mov	r1, r4
 800656e:	4628      	mov	r0, r5
 8006570:	f7fe fb02 	bl	8004b78 <_fflush_r>
 8006574:	b190      	cbz	r0, 800659c <__swbuf_r+0x9c>
 8006576:	e00f      	b.n	8006598 <__swbuf_r+0x98>
 8006578:	4b0e      	ldr	r3, [pc, #56]	; (80065b4 <__swbuf_r+0xb4>)
 800657a:	429c      	cmp	r4, r3
 800657c:	d101      	bne.n	8006582 <__swbuf_r+0x82>
 800657e:	68ac      	ldr	r4, [r5, #8]
 8006580:	e7cb      	b.n	800651a <__swbuf_r+0x1a>
 8006582:	4b0d      	ldr	r3, [pc, #52]	; (80065b8 <__swbuf_r+0xb8>)
 8006584:	429c      	cmp	r4, r3
 8006586:	bf08      	it	eq
 8006588:	68ec      	ldreq	r4, [r5, #12]
 800658a:	e7c6      	b.n	800651a <__swbuf_r+0x1a>
 800658c:	4621      	mov	r1, r4
 800658e:	4628      	mov	r0, r5
 8006590:	f7fd fb96 	bl	8003cc0 <__swsetup_r>
 8006594:	2800      	cmp	r0, #0
 8006596:	d0c8      	beq.n	800652a <__swbuf_r+0x2a>
 8006598:	f04f 37ff 	mov.w	r7, #4294967295
 800659c:	4638      	mov	r0, r7
 800659e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80065a0:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 80065a4:	81a3      	strh	r3, [r4, #12]
 80065a6:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80065a8:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 80065ac:	6663      	str	r3, [r4, #100]	; 0x64
 80065ae:	e7c2      	b.n	8006536 <__swbuf_r+0x36>
 80065b0:	08008024 	.word	0x08008024
 80065b4:	08008044 	.word	0x08008044
 80065b8:	08008004 	.word	0x08008004

080065bc <_wcrtomb_r>:
 80065bc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80065be:	4605      	mov	r5, r0
 80065c0:	b085      	sub	sp, #20
 80065c2:	461e      	mov	r6, r3
 80065c4:	460f      	mov	r7, r1
 80065c6:	4c0f      	ldr	r4, [pc, #60]	; (8006604 <_wcrtomb_r+0x48>)
 80065c8:	b991      	cbnz	r1, 80065f0 <_wcrtomb_r+0x34>
 80065ca:	6822      	ldr	r2, [r4, #0]
 80065cc:	490e      	ldr	r1, [pc, #56]	; (8006608 <_wcrtomb_r+0x4c>)
 80065ce:	6a12      	ldr	r2, [r2, #32]
 80065d0:	2a00      	cmp	r2, #0
 80065d2:	bf08      	it	eq
 80065d4:	460a      	moveq	r2, r1
 80065d6:	a901      	add	r1, sp, #4
 80065d8:	f8d2 40e0 	ldr.w	r4, [r2, #224]	; 0xe0
 80065dc:	463a      	mov	r2, r7
 80065de:	47a0      	blx	r4
 80065e0:	1c43      	adds	r3, r0, #1
 80065e2:	bf01      	itttt	eq
 80065e4:	2300      	moveq	r3, #0
 80065e6:	6033      	streq	r3, [r6, #0]
 80065e8:	238a      	moveq	r3, #138	; 0x8a
 80065ea:	602b      	streq	r3, [r5, #0]
 80065ec:	b005      	add	sp, #20
 80065ee:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80065f0:	6824      	ldr	r4, [r4, #0]
 80065f2:	4f05      	ldr	r7, [pc, #20]	; (8006608 <_wcrtomb_r+0x4c>)
 80065f4:	6a24      	ldr	r4, [r4, #32]
 80065f6:	2c00      	cmp	r4, #0
 80065f8:	bf08      	it	eq
 80065fa:	463c      	moveq	r4, r7
 80065fc:	f8d4 40e0 	ldr.w	r4, [r4, #224]	; 0xe0
 8006600:	e7ed      	b.n	80065de <_wcrtomb_r+0x22>
 8006602:	bf00      	nop
 8006604:	20000004 	.word	0x20000004
 8006608:	20000508 	.word	0x20000508

0800660c <__ascii_wctomb>:
 800660c:	b149      	cbz	r1, 8006622 <__ascii_wctomb+0x16>
 800660e:	2aff      	cmp	r2, #255	; 0xff
 8006610:	bf85      	ittet	hi
 8006612:	238a      	movhi	r3, #138	; 0x8a
 8006614:	6003      	strhi	r3, [r0, #0]
 8006616:	700a      	strbls	r2, [r1, #0]
 8006618:	f04f 30ff 	movhi.w	r0, #4294967295
 800661c:	bf98      	it	ls
 800661e:	2001      	movls	r0, #1
 8006620:	4770      	bx	lr
 8006622:	4608      	mov	r0, r1
 8006624:	4770      	bx	lr
	...

08006628 <sin>:
 8006628:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800662a:	ec51 0b10 	vmov	r0, r1, d0
 800662e:	4a20      	ldr	r2, [pc, #128]	; (80066b0 <sin+0x88>)
 8006630:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
 8006634:	4293      	cmp	r3, r2
 8006636:	dc07      	bgt.n	8006648 <sin+0x20>
 8006638:	ed9f 1b1b 	vldr	d1, [pc, #108]	; 80066a8 <sin+0x80>
 800663c:	2000      	movs	r0, #0
 800663e:	f000 fe67 	bl	8007310 <__kernel_sin>
 8006642:	ec51 0b10 	vmov	r0, r1, d0
 8006646:	e007      	b.n	8006658 <sin+0x30>
 8006648:	4a1a      	ldr	r2, [pc, #104]	; (80066b4 <sin+0x8c>)
 800664a:	4293      	cmp	r3, r2
 800664c:	dd09      	ble.n	8006662 <sin+0x3a>
 800664e:	ee10 2a10 	vmov	r2, s0
 8006652:	460b      	mov	r3, r1
 8006654:	f7f9 fe18 	bl	8000288 <__aeabi_dsub>
 8006658:	ec41 0b10 	vmov	d0, r0, r1
 800665c:	b005      	add	sp, #20
 800665e:	f85d fb04 	ldr.w	pc, [sp], #4
 8006662:	4668      	mov	r0, sp
 8006664:	f000 f828 	bl	80066b8 <__ieee754_rem_pio2>
 8006668:	f000 0003 	and.w	r0, r0, #3
 800666c:	2801      	cmp	r0, #1
 800666e:	ed9d 1b02 	vldr	d1, [sp, #8]
 8006672:	ed9d 0b00 	vldr	d0, [sp]
 8006676:	d004      	beq.n	8006682 <sin+0x5a>
 8006678:	2802      	cmp	r0, #2
 800667a:	d005      	beq.n	8006688 <sin+0x60>
 800667c:	b970      	cbnz	r0, 800669c <sin+0x74>
 800667e:	2001      	movs	r0, #1
 8006680:	e7dd      	b.n	800663e <sin+0x16>
 8006682:	f000 fa0d 	bl	8006aa0 <__kernel_cos>
 8006686:	e7dc      	b.n	8006642 <sin+0x1a>
 8006688:	2001      	movs	r0, #1
 800668a:	f000 fe41 	bl	8007310 <__kernel_sin>
 800668e:	ec53 2b10 	vmov	r2, r3, d0
 8006692:	ee10 0a10 	vmov	r0, s0
 8006696:	f103 4100 	add.w	r1, r3, #2147483648	; 0x80000000
 800669a:	e7dd      	b.n	8006658 <sin+0x30>
 800669c:	f000 fa00 	bl	8006aa0 <__kernel_cos>
 80066a0:	e7f5      	b.n	800668e <sin+0x66>
 80066a2:	bf00      	nop
 80066a4:	f3af 8000 	nop.w
	...
 80066b0:	3fe921fb 	.word	0x3fe921fb
 80066b4:	7fefffff 	.word	0x7fefffff

080066b8 <__ieee754_rem_pio2>:
 80066b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80066bc:	ec57 6b10 	vmov	r6, r7, d0
 80066c0:	4bc3      	ldr	r3, [pc, #780]	; (80069d0 <__ieee754_rem_pio2+0x318>)
 80066c2:	b08d      	sub	sp, #52	; 0x34
 80066c4:	f027 4800 	bic.w	r8, r7, #2147483648	; 0x80000000
 80066c8:	4598      	cmp	r8, r3
 80066ca:	4604      	mov	r4, r0
 80066cc:	9704      	str	r7, [sp, #16]
 80066ce:	dc07      	bgt.n	80066e0 <__ieee754_rem_pio2+0x28>
 80066d0:	2200      	movs	r2, #0
 80066d2:	2300      	movs	r3, #0
 80066d4:	ed84 0b00 	vstr	d0, [r4]
 80066d8:	e9c0 2302 	strd	r2, r3, [r0, #8]
 80066dc:	2500      	movs	r5, #0
 80066de:	e027      	b.n	8006730 <__ieee754_rem_pio2+0x78>
 80066e0:	4bbc      	ldr	r3, [pc, #752]	; (80069d4 <__ieee754_rem_pio2+0x31c>)
 80066e2:	4598      	cmp	r8, r3
 80066e4:	dc75      	bgt.n	80067d2 <__ieee754_rem_pio2+0x11a>
 80066e6:	9b04      	ldr	r3, [sp, #16]
 80066e8:	4dbb      	ldr	r5, [pc, #748]	; (80069d8 <__ieee754_rem_pio2+0x320>)
 80066ea:	2b00      	cmp	r3, #0
 80066ec:	ee10 0a10 	vmov	r0, s0
 80066f0:	a3a9      	add	r3, pc, #676	; (adr r3, 8006998 <__ieee754_rem_pio2+0x2e0>)
 80066f2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80066f6:	4639      	mov	r1, r7
 80066f8:	dd36      	ble.n	8006768 <__ieee754_rem_pio2+0xb0>
 80066fa:	f7f9 fdc5 	bl	8000288 <__aeabi_dsub>
 80066fe:	45a8      	cmp	r8, r5
 8006700:	4606      	mov	r6, r0
 8006702:	460f      	mov	r7, r1
 8006704:	d018      	beq.n	8006738 <__ieee754_rem_pio2+0x80>
 8006706:	a3a6      	add	r3, pc, #664	; (adr r3, 80069a0 <__ieee754_rem_pio2+0x2e8>)
 8006708:	e9d3 2300 	ldrd	r2, r3, [r3]
 800670c:	f7f9 fdbc 	bl	8000288 <__aeabi_dsub>
 8006710:	4602      	mov	r2, r0
 8006712:	460b      	mov	r3, r1
 8006714:	e9c4 2300 	strd	r2, r3, [r4]
 8006718:	4630      	mov	r0, r6
 800671a:	4639      	mov	r1, r7
 800671c:	f7f9 fdb4 	bl	8000288 <__aeabi_dsub>
 8006720:	a39f      	add	r3, pc, #636	; (adr r3, 80069a0 <__ieee754_rem_pio2+0x2e8>)
 8006722:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006726:	f7f9 fdaf 	bl	8000288 <__aeabi_dsub>
 800672a:	e9c4 0102 	strd	r0, r1, [r4, #8]
 800672e:	2501      	movs	r5, #1
 8006730:	4628      	mov	r0, r5
 8006732:	b00d      	add	sp, #52	; 0x34
 8006734:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006738:	a39b      	add	r3, pc, #620	; (adr r3, 80069a8 <__ieee754_rem_pio2+0x2f0>)
 800673a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800673e:	f7f9 fda3 	bl	8000288 <__aeabi_dsub>
 8006742:	a39b      	add	r3, pc, #620	; (adr r3, 80069b0 <__ieee754_rem_pio2+0x2f8>)
 8006744:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006748:	4606      	mov	r6, r0
 800674a:	460f      	mov	r7, r1
 800674c:	f7f9 fd9c 	bl	8000288 <__aeabi_dsub>
 8006750:	4602      	mov	r2, r0
 8006752:	460b      	mov	r3, r1
 8006754:	e9c4 2300 	strd	r2, r3, [r4]
 8006758:	4630      	mov	r0, r6
 800675a:	4639      	mov	r1, r7
 800675c:	f7f9 fd94 	bl	8000288 <__aeabi_dsub>
 8006760:	a393      	add	r3, pc, #588	; (adr r3, 80069b0 <__ieee754_rem_pio2+0x2f8>)
 8006762:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006766:	e7de      	b.n	8006726 <__ieee754_rem_pio2+0x6e>
 8006768:	f7f9 fd90 	bl	800028c <__adddf3>
 800676c:	45a8      	cmp	r8, r5
 800676e:	4606      	mov	r6, r0
 8006770:	460f      	mov	r7, r1
 8006772:	d016      	beq.n	80067a2 <__ieee754_rem_pio2+0xea>
 8006774:	a38a      	add	r3, pc, #552	; (adr r3, 80069a0 <__ieee754_rem_pio2+0x2e8>)
 8006776:	e9d3 2300 	ldrd	r2, r3, [r3]
 800677a:	f7f9 fd87 	bl	800028c <__adddf3>
 800677e:	4602      	mov	r2, r0
 8006780:	460b      	mov	r3, r1
 8006782:	e9c4 2300 	strd	r2, r3, [r4]
 8006786:	4630      	mov	r0, r6
 8006788:	4639      	mov	r1, r7
 800678a:	f7f9 fd7d 	bl	8000288 <__aeabi_dsub>
 800678e:	a384      	add	r3, pc, #528	; (adr r3, 80069a0 <__ieee754_rem_pio2+0x2e8>)
 8006790:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006794:	f7f9 fd7a 	bl	800028c <__adddf3>
 8006798:	f04f 35ff 	mov.w	r5, #4294967295
 800679c:	e9c4 0102 	strd	r0, r1, [r4, #8]
 80067a0:	e7c6      	b.n	8006730 <__ieee754_rem_pio2+0x78>
 80067a2:	a381      	add	r3, pc, #516	; (adr r3, 80069a8 <__ieee754_rem_pio2+0x2f0>)
 80067a4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80067a8:	f7f9 fd70 	bl	800028c <__adddf3>
 80067ac:	a380      	add	r3, pc, #512	; (adr r3, 80069b0 <__ieee754_rem_pio2+0x2f8>)
 80067ae:	e9d3 2300 	ldrd	r2, r3, [r3]
 80067b2:	4606      	mov	r6, r0
 80067b4:	460f      	mov	r7, r1
 80067b6:	f7f9 fd69 	bl	800028c <__adddf3>
 80067ba:	4602      	mov	r2, r0
 80067bc:	460b      	mov	r3, r1
 80067be:	e9c4 2300 	strd	r2, r3, [r4]
 80067c2:	4630      	mov	r0, r6
 80067c4:	4639      	mov	r1, r7
 80067c6:	f7f9 fd5f 	bl	8000288 <__aeabi_dsub>
 80067ca:	a379      	add	r3, pc, #484	; (adr r3, 80069b0 <__ieee754_rem_pio2+0x2f8>)
 80067cc:	e9d3 2300 	ldrd	r2, r3, [r3]
 80067d0:	e7e0      	b.n	8006794 <__ieee754_rem_pio2+0xdc>
 80067d2:	4b82      	ldr	r3, [pc, #520]	; (80069dc <__ieee754_rem_pio2+0x324>)
 80067d4:	4598      	cmp	r8, r3
 80067d6:	f300 80d0 	bgt.w	800697a <__ieee754_rem_pio2+0x2c2>
 80067da:	f000 fe53 	bl	8007484 <fabs>
 80067de:	ec57 6b10 	vmov	r6, r7, d0
 80067e2:	ee10 0a10 	vmov	r0, s0
 80067e6:	a374      	add	r3, pc, #464	; (adr r3, 80069b8 <__ieee754_rem_pio2+0x300>)
 80067e8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80067ec:	4639      	mov	r1, r7
 80067ee:	f7f9 feff 	bl	80005f0 <__aeabi_dmul>
 80067f2:	2200      	movs	r2, #0
 80067f4:	4b7a      	ldr	r3, [pc, #488]	; (80069e0 <__ieee754_rem_pio2+0x328>)
 80067f6:	f7f9 fd49 	bl	800028c <__adddf3>
 80067fa:	f7fa f9a9 	bl	8000b50 <__aeabi_d2iz>
 80067fe:	4605      	mov	r5, r0
 8006800:	f7f9 fe90 	bl	8000524 <__aeabi_i2d>
 8006804:	a364      	add	r3, pc, #400	; (adr r3, 8006998 <__ieee754_rem_pio2+0x2e0>)
 8006806:	e9d3 2300 	ldrd	r2, r3, [r3]
 800680a:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800680e:	f7f9 feef 	bl	80005f0 <__aeabi_dmul>
 8006812:	4602      	mov	r2, r0
 8006814:	460b      	mov	r3, r1
 8006816:	4630      	mov	r0, r6
 8006818:	4639      	mov	r1, r7
 800681a:	f7f9 fd35 	bl	8000288 <__aeabi_dsub>
 800681e:	a360      	add	r3, pc, #384	; (adr r3, 80069a0 <__ieee754_rem_pio2+0x2e8>)
 8006820:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006824:	4682      	mov	sl, r0
 8006826:	468b      	mov	fp, r1
 8006828:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 800682c:	f7f9 fee0 	bl	80005f0 <__aeabi_dmul>
 8006830:	2d1f      	cmp	r5, #31
 8006832:	4606      	mov	r6, r0
 8006834:	460f      	mov	r7, r1
 8006836:	dc2a      	bgt.n	800688e <__ieee754_rem_pio2+0x1d6>
 8006838:	1e6a      	subs	r2, r5, #1
 800683a:	4b6a      	ldr	r3, [pc, #424]	; (80069e4 <__ieee754_rem_pio2+0x32c>)
 800683c:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8006840:	4598      	cmp	r8, r3
 8006842:	d024      	beq.n	800688e <__ieee754_rem_pio2+0x1d6>
 8006844:	4632      	mov	r2, r6
 8006846:	463b      	mov	r3, r7
 8006848:	4650      	mov	r0, sl
 800684a:	4659      	mov	r1, fp
 800684c:	f7f9 fd1c 	bl	8000288 <__aeabi_dsub>
 8006850:	e9c4 0100 	strd	r0, r1, [r4]
 8006854:	e9d4 8900 	ldrd	r8, r9, [r4]
 8006858:	4650      	mov	r0, sl
 800685a:	4642      	mov	r2, r8
 800685c:	464b      	mov	r3, r9
 800685e:	4659      	mov	r1, fp
 8006860:	f7f9 fd12 	bl	8000288 <__aeabi_dsub>
 8006864:	463b      	mov	r3, r7
 8006866:	4632      	mov	r2, r6
 8006868:	f7f9 fd0e 	bl	8000288 <__aeabi_dsub>
 800686c:	9b04      	ldr	r3, [sp, #16]
 800686e:	2b00      	cmp	r3, #0
 8006870:	e9c4 0102 	strd	r0, r1, [r4, #8]
 8006874:	f6bf af5c 	bge.w	8006730 <__ieee754_rem_pio2+0x78>
 8006878:	f109 4300 	add.w	r3, r9, #2147483648	; 0x80000000
 800687c:	6063      	str	r3, [r4, #4]
 800687e:	f8c4 8000 	str.w	r8, [r4]
 8006882:	60a0      	str	r0, [r4, #8]
 8006884:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8006888:	60e3      	str	r3, [r4, #12]
 800688a:	426d      	negs	r5, r5
 800688c:	e750      	b.n	8006730 <__ieee754_rem_pio2+0x78>
 800688e:	4632      	mov	r2, r6
 8006890:	463b      	mov	r3, r7
 8006892:	4650      	mov	r0, sl
 8006894:	4659      	mov	r1, fp
 8006896:	f7f9 fcf7 	bl	8000288 <__aeabi_dsub>
 800689a:	ea4f 5228 	mov.w	r2, r8, asr #20
 800689e:	f3c1 530a 	ubfx	r3, r1, #20, #11
 80068a2:	1ad3      	subs	r3, r2, r3
 80068a4:	2b10      	cmp	r3, #16
 80068a6:	e9c4 0100 	strd	r0, r1, [r4]
 80068aa:	9205      	str	r2, [sp, #20]
 80068ac:	ddd2      	ble.n	8006854 <__ieee754_rem_pio2+0x19c>
 80068ae:	a33e      	add	r3, pc, #248	; (adr r3, 80069a8 <__ieee754_rem_pio2+0x2f0>)
 80068b0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80068b4:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80068b8:	f7f9 fe9a 	bl	80005f0 <__aeabi_dmul>
 80068bc:	4606      	mov	r6, r0
 80068be:	460f      	mov	r7, r1
 80068c0:	4602      	mov	r2, r0
 80068c2:	460b      	mov	r3, r1
 80068c4:	4650      	mov	r0, sl
 80068c6:	4659      	mov	r1, fp
 80068c8:	f7f9 fcde 	bl	8000288 <__aeabi_dsub>
 80068cc:	4602      	mov	r2, r0
 80068ce:	460b      	mov	r3, r1
 80068d0:	4680      	mov	r8, r0
 80068d2:	4689      	mov	r9, r1
 80068d4:	4650      	mov	r0, sl
 80068d6:	4659      	mov	r1, fp
 80068d8:	f7f9 fcd6 	bl	8000288 <__aeabi_dsub>
 80068dc:	4632      	mov	r2, r6
 80068de:	463b      	mov	r3, r7
 80068e0:	f7f9 fcd2 	bl	8000288 <__aeabi_dsub>
 80068e4:	a332      	add	r3, pc, #200	; (adr r3, 80069b0 <__ieee754_rem_pio2+0x2f8>)
 80068e6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80068ea:	4606      	mov	r6, r0
 80068ec:	460f      	mov	r7, r1
 80068ee:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80068f2:	f7f9 fe7d 	bl	80005f0 <__aeabi_dmul>
 80068f6:	4632      	mov	r2, r6
 80068f8:	463b      	mov	r3, r7
 80068fa:	f7f9 fcc5 	bl	8000288 <__aeabi_dsub>
 80068fe:	4602      	mov	r2, r0
 8006900:	460b      	mov	r3, r1
 8006902:	4606      	mov	r6, r0
 8006904:	460f      	mov	r7, r1
 8006906:	4640      	mov	r0, r8
 8006908:	4649      	mov	r1, r9
 800690a:	f7f9 fcbd 	bl	8000288 <__aeabi_dsub>
 800690e:	9a05      	ldr	r2, [sp, #20]
 8006910:	f3c1 530a 	ubfx	r3, r1, #20, #11
 8006914:	1ad3      	subs	r3, r2, r3
 8006916:	2b31      	cmp	r3, #49	; 0x31
 8006918:	e9c4 0100 	strd	r0, r1, [r4]
 800691c:	dd2a      	ble.n	8006974 <__ieee754_rem_pio2+0x2bc>
 800691e:	a328      	add	r3, pc, #160	; (adr r3, 80069c0 <__ieee754_rem_pio2+0x308>)
 8006920:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006924:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8006928:	f7f9 fe62 	bl	80005f0 <__aeabi_dmul>
 800692c:	4606      	mov	r6, r0
 800692e:	460f      	mov	r7, r1
 8006930:	4602      	mov	r2, r0
 8006932:	460b      	mov	r3, r1
 8006934:	4640      	mov	r0, r8
 8006936:	4649      	mov	r1, r9
 8006938:	f7f9 fca6 	bl	8000288 <__aeabi_dsub>
 800693c:	4602      	mov	r2, r0
 800693e:	460b      	mov	r3, r1
 8006940:	4682      	mov	sl, r0
 8006942:	468b      	mov	fp, r1
 8006944:	4640      	mov	r0, r8
 8006946:	4649      	mov	r1, r9
 8006948:	f7f9 fc9e 	bl	8000288 <__aeabi_dsub>
 800694c:	4632      	mov	r2, r6
 800694e:	463b      	mov	r3, r7
 8006950:	f7f9 fc9a 	bl	8000288 <__aeabi_dsub>
 8006954:	a31c      	add	r3, pc, #112	; (adr r3, 80069c8 <__ieee754_rem_pio2+0x310>)
 8006956:	e9d3 2300 	ldrd	r2, r3, [r3]
 800695a:	4606      	mov	r6, r0
 800695c:	460f      	mov	r7, r1
 800695e:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8006962:	f7f9 fe45 	bl	80005f0 <__aeabi_dmul>
 8006966:	4632      	mov	r2, r6
 8006968:	463b      	mov	r3, r7
 800696a:	f7f9 fc8d 	bl	8000288 <__aeabi_dsub>
 800696e:	4606      	mov	r6, r0
 8006970:	460f      	mov	r7, r1
 8006972:	e767      	b.n	8006844 <__ieee754_rem_pio2+0x18c>
 8006974:	46c2      	mov	sl, r8
 8006976:	46cb      	mov	fp, r9
 8006978:	e76c      	b.n	8006854 <__ieee754_rem_pio2+0x19c>
 800697a:	4b1b      	ldr	r3, [pc, #108]	; (80069e8 <__ieee754_rem_pio2+0x330>)
 800697c:	4598      	cmp	r8, r3
 800697e:	dd35      	ble.n	80069ec <__ieee754_rem_pio2+0x334>
 8006980:	ee10 2a10 	vmov	r2, s0
 8006984:	463b      	mov	r3, r7
 8006986:	4630      	mov	r0, r6
 8006988:	4639      	mov	r1, r7
 800698a:	f7f9 fc7d 	bl	8000288 <__aeabi_dsub>
 800698e:	e9c4 0102 	strd	r0, r1, [r4, #8]
 8006992:	e9c4 0100 	strd	r0, r1, [r4]
 8006996:	e6a1      	b.n	80066dc <__ieee754_rem_pio2+0x24>
 8006998:	54400000 	.word	0x54400000
 800699c:	3ff921fb 	.word	0x3ff921fb
 80069a0:	1a626331 	.word	0x1a626331
 80069a4:	3dd0b461 	.word	0x3dd0b461
 80069a8:	1a600000 	.word	0x1a600000
 80069ac:	3dd0b461 	.word	0x3dd0b461
 80069b0:	2e037073 	.word	0x2e037073
 80069b4:	3ba3198a 	.word	0x3ba3198a
 80069b8:	6dc9c883 	.word	0x6dc9c883
 80069bc:	3fe45f30 	.word	0x3fe45f30
 80069c0:	2e000000 	.word	0x2e000000
 80069c4:	3ba3198a 	.word	0x3ba3198a
 80069c8:	252049c1 	.word	0x252049c1
 80069cc:	397b839a 	.word	0x397b839a
 80069d0:	3fe921fb 	.word	0x3fe921fb
 80069d4:	4002d97b 	.word	0x4002d97b
 80069d8:	3ff921fb 	.word	0x3ff921fb
 80069dc:	413921fb 	.word	0x413921fb
 80069e0:	3fe00000 	.word	0x3fe00000
 80069e4:	08008270 	.word	0x08008270
 80069e8:	7fefffff 	.word	0x7fefffff
 80069ec:	ea4f 5528 	mov.w	r5, r8, asr #20
 80069f0:	f2a5 4516 	subw	r5, r5, #1046	; 0x416
 80069f4:	eba8 5105 	sub.w	r1, r8, r5, lsl #20
 80069f8:	4630      	mov	r0, r6
 80069fa:	460f      	mov	r7, r1
 80069fc:	f7fa f8a8 	bl	8000b50 <__aeabi_d2iz>
 8006a00:	f7f9 fd90 	bl	8000524 <__aeabi_i2d>
 8006a04:	4602      	mov	r2, r0
 8006a06:	460b      	mov	r3, r1
 8006a08:	4630      	mov	r0, r6
 8006a0a:	4639      	mov	r1, r7
 8006a0c:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8006a10:	f7f9 fc3a 	bl	8000288 <__aeabi_dsub>
 8006a14:	2200      	movs	r2, #0
 8006a16:	4b1f      	ldr	r3, [pc, #124]	; (8006a94 <__ieee754_rem_pio2+0x3dc>)
 8006a18:	f7f9 fdea 	bl	80005f0 <__aeabi_dmul>
 8006a1c:	460f      	mov	r7, r1
 8006a1e:	4606      	mov	r6, r0
 8006a20:	f7fa f896 	bl	8000b50 <__aeabi_d2iz>
 8006a24:	f7f9 fd7e 	bl	8000524 <__aeabi_i2d>
 8006a28:	4602      	mov	r2, r0
 8006a2a:	460b      	mov	r3, r1
 8006a2c:	4630      	mov	r0, r6
 8006a2e:	4639      	mov	r1, r7
 8006a30:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8006a34:	f7f9 fc28 	bl	8000288 <__aeabi_dsub>
 8006a38:	2200      	movs	r2, #0
 8006a3a:	4b16      	ldr	r3, [pc, #88]	; (8006a94 <__ieee754_rem_pio2+0x3dc>)
 8006a3c:	f7f9 fdd8 	bl	80005f0 <__aeabi_dmul>
 8006a40:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
 8006a44:	f10d 0930 	add.w	r9, sp, #48	; 0x30
 8006a48:	f04f 0803 	mov.w	r8, #3
 8006a4c:	2600      	movs	r6, #0
 8006a4e:	2700      	movs	r7, #0
 8006a50:	4632      	mov	r2, r6
 8006a52:	463b      	mov	r3, r7
 8006a54:	e979 0102 	ldrd	r0, r1, [r9, #-8]!
 8006a58:	f108 3aff 	add.w	sl, r8, #4294967295
 8006a5c:	f7fa f830 	bl	8000ac0 <__aeabi_dcmpeq>
 8006a60:	b9b0      	cbnz	r0, 8006a90 <__ieee754_rem_pio2+0x3d8>
 8006a62:	4b0d      	ldr	r3, [pc, #52]	; (8006a98 <__ieee754_rem_pio2+0x3e0>)
 8006a64:	9301      	str	r3, [sp, #4]
 8006a66:	2302      	movs	r3, #2
 8006a68:	9300      	str	r3, [sp, #0]
 8006a6a:	462a      	mov	r2, r5
 8006a6c:	4643      	mov	r3, r8
 8006a6e:	4621      	mov	r1, r4
 8006a70:	a806      	add	r0, sp, #24
 8006a72:	f000 f8fd 	bl	8006c70 <__kernel_rem_pio2>
 8006a76:	9b04      	ldr	r3, [sp, #16]
 8006a78:	2b00      	cmp	r3, #0
 8006a7a:	4605      	mov	r5, r0
 8006a7c:	f6bf ae58 	bge.w	8006730 <__ieee754_rem_pio2+0x78>
 8006a80:	6863      	ldr	r3, [r4, #4]
 8006a82:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 8006a86:	6063      	str	r3, [r4, #4]
 8006a88:	68e3      	ldr	r3, [r4, #12]
 8006a8a:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 8006a8e:	e6fb      	b.n	8006888 <__ieee754_rem_pio2+0x1d0>
 8006a90:	46d0      	mov	r8, sl
 8006a92:	e7dd      	b.n	8006a50 <__ieee754_rem_pio2+0x398>
 8006a94:	41700000 	.word	0x41700000
 8006a98:	080082f0 	.word	0x080082f0
 8006a9c:	00000000 	.word	0x00000000

08006aa0 <__kernel_cos>:
 8006aa0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006aa4:	ec59 8b10 	vmov	r8, r9, d0
 8006aa8:	f029 4700 	bic.w	r7, r9, #2147483648	; 0x80000000
 8006aac:	b085      	sub	sp, #20
 8006aae:	f1b7 5f79 	cmp.w	r7, #1044381696	; 0x3e400000
 8006ab2:	ed8d 1b00 	vstr	d1, [sp]
 8006ab6:	da07      	bge.n	8006ac8 <__kernel_cos+0x28>
 8006ab8:	ee10 0a10 	vmov	r0, s0
 8006abc:	4649      	mov	r1, r9
 8006abe:	f7fa f847 	bl	8000b50 <__aeabi_d2iz>
 8006ac2:	2800      	cmp	r0, #0
 8006ac4:	f000 80aa 	beq.w	8006c1c <__kernel_cos+0x17c>
 8006ac8:	4642      	mov	r2, r8
 8006aca:	464b      	mov	r3, r9
 8006acc:	4640      	mov	r0, r8
 8006ace:	4649      	mov	r1, r9
 8006ad0:	f7f9 fd8e 	bl	80005f0 <__aeabi_dmul>
 8006ad4:	a359      	add	r3, pc, #356	; (adr r3, 8006c3c <__kernel_cos+0x19c>)
 8006ad6:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006ada:	4604      	mov	r4, r0
 8006adc:	460d      	mov	r5, r1
 8006ade:	f7f9 fd87 	bl	80005f0 <__aeabi_dmul>
 8006ae2:	a358      	add	r3, pc, #352	; (adr r3, 8006c44 <__kernel_cos+0x1a4>)
 8006ae4:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006ae8:	f7f9 fbd0 	bl	800028c <__adddf3>
 8006aec:	4622      	mov	r2, r4
 8006aee:	462b      	mov	r3, r5
 8006af0:	f7f9 fd7e 	bl	80005f0 <__aeabi_dmul>
 8006af4:	a355      	add	r3, pc, #340	; (adr r3, 8006c4c <__kernel_cos+0x1ac>)
 8006af6:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006afa:	f7f9 fbc5 	bl	8000288 <__aeabi_dsub>
 8006afe:	4622      	mov	r2, r4
 8006b00:	462b      	mov	r3, r5
 8006b02:	f7f9 fd75 	bl	80005f0 <__aeabi_dmul>
 8006b06:	a353      	add	r3, pc, #332	; (adr r3, 8006c54 <__kernel_cos+0x1b4>)
 8006b08:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006b0c:	f7f9 fbbe 	bl	800028c <__adddf3>
 8006b10:	4622      	mov	r2, r4
 8006b12:	462b      	mov	r3, r5
 8006b14:	f7f9 fd6c 	bl	80005f0 <__aeabi_dmul>
 8006b18:	a350      	add	r3, pc, #320	; (adr r3, 8006c5c <__kernel_cos+0x1bc>)
 8006b1a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006b1e:	f7f9 fbb3 	bl	8000288 <__aeabi_dsub>
 8006b22:	4622      	mov	r2, r4
 8006b24:	462b      	mov	r3, r5
 8006b26:	f7f9 fd63 	bl	80005f0 <__aeabi_dmul>
 8006b2a:	a34e      	add	r3, pc, #312	; (adr r3, 8006c64 <__kernel_cos+0x1c4>)
 8006b2c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006b30:	f7f9 fbac 	bl	800028c <__adddf3>
 8006b34:	462b      	mov	r3, r5
 8006b36:	4622      	mov	r2, r4
 8006b38:	f7f9 fd5a 	bl	80005f0 <__aeabi_dmul>
 8006b3c:	4b3a      	ldr	r3, [pc, #232]	; (8006c28 <__kernel_cos+0x188>)
 8006b3e:	429f      	cmp	r7, r3
 8006b40:	4682      	mov	sl, r0
 8006b42:	468b      	mov	fp, r1
 8006b44:	dc2c      	bgt.n	8006ba0 <__kernel_cos+0x100>
 8006b46:	2200      	movs	r2, #0
 8006b48:	4b38      	ldr	r3, [pc, #224]	; (8006c2c <__kernel_cos+0x18c>)
 8006b4a:	4620      	mov	r0, r4
 8006b4c:	4629      	mov	r1, r5
 8006b4e:	f7f9 fd4f 	bl	80005f0 <__aeabi_dmul>
 8006b52:	4652      	mov	r2, sl
 8006b54:	4606      	mov	r6, r0
 8006b56:	460f      	mov	r7, r1
 8006b58:	465b      	mov	r3, fp
 8006b5a:	4620      	mov	r0, r4
 8006b5c:	4629      	mov	r1, r5
 8006b5e:	f7f9 fd47 	bl	80005f0 <__aeabi_dmul>
 8006b62:	e9dd 2300 	ldrd	r2, r3, [sp]
 8006b66:	4604      	mov	r4, r0
 8006b68:	460d      	mov	r5, r1
 8006b6a:	4640      	mov	r0, r8
 8006b6c:	4649      	mov	r1, r9
 8006b6e:	f7f9 fd3f 	bl	80005f0 <__aeabi_dmul>
 8006b72:	4602      	mov	r2, r0
 8006b74:	460b      	mov	r3, r1
 8006b76:	4620      	mov	r0, r4
 8006b78:	4629      	mov	r1, r5
 8006b7a:	f7f9 fb85 	bl	8000288 <__aeabi_dsub>
 8006b7e:	4602      	mov	r2, r0
 8006b80:	460b      	mov	r3, r1
 8006b82:	4630      	mov	r0, r6
 8006b84:	4639      	mov	r1, r7
 8006b86:	f7f9 fb7f 	bl	8000288 <__aeabi_dsub>
 8006b8a:	460b      	mov	r3, r1
 8006b8c:	4928      	ldr	r1, [pc, #160]	; (8006c30 <__kernel_cos+0x190>)
 8006b8e:	4602      	mov	r2, r0
 8006b90:	2000      	movs	r0, #0
 8006b92:	f7f9 fb79 	bl	8000288 <__aeabi_dsub>
 8006b96:	ec41 0b10 	vmov	d0, r0, r1
 8006b9a:	b005      	add	sp, #20
 8006b9c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006ba0:	4b24      	ldr	r3, [pc, #144]	; (8006c34 <__kernel_cos+0x194>)
 8006ba2:	4923      	ldr	r1, [pc, #140]	; (8006c30 <__kernel_cos+0x190>)
 8006ba4:	429f      	cmp	r7, r3
 8006ba6:	bfd7      	itett	le
 8006ba8:	f5a7 1300 	suble.w	r3, r7, #2097152	; 0x200000
 8006bac:	4f22      	ldrgt	r7, [pc, #136]	; (8006c38 <__kernel_cos+0x198>)
 8006bae:	2200      	movle	r2, #0
 8006bb0:	4616      	movle	r6, r2
 8006bb2:	bfd4      	ite	le
 8006bb4:	461f      	movle	r7, r3
 8006bb6:	2600      	movgt	r6, #0
 8006bb8:	4632      	mov	r2, r6
 8006bba:	463b      	mov	r3, r7
 8006bbc:	2000      	movs	r0, #0
 8006bbe:	f7f9 fb63 	bl	8000288 <__aeabi_dsub>
 8006bc2:	2200      	movs	r2, #0
 8006bc4:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8006bc8:	4b18      	ldr	r3, [pc, #96]	; (8006c2c <__kernel_cos+0x18c>)
 8006bca:	4620      	mov	r0, r4
 8006bcc:	4629      	mov	r1, r5
 8006bce:	f7f9 fd0f 	bl	80005f0 <__aeabi_dmul>
 8006bd2:	4632      	mov	r2, r6
 8006bd4:	463b      	mov	r3, r7
 8006bd6:	f7f9 fb57 	bl	8000288 <__aeabi_dsub>
 8006bda:	4652      	mov	r2, sl
 8006bdc:	4606      	mov	r6, r0
 8006bde:	460f      	mov	r7, r1
 8006be0:	465b      	mov	r3, fp
 8006be2:	4620      	mov	r0, r4
 8006be4:	4629      	mov	r1, r5
 8006be6:	f7f9 fd03 	bl	80005f0 <__aeabi_dmul>
 8006bea:	e9dd 2300 	ldrd	r2, r3, [sp]
 8006bee:	4604      	mov	r4, r0
 8006bf0:	460d      	mov	r5, r1
 8006bf2:	4640      	mov	r0, r8
 8006bf4:	4649      	mov	r1, r9
 8006bf6:	f7f9 fcfb 	bl	80005f0 <__aeabi_dmul>
 8006bfa:	4602      	mov	r2, r0
 8006bfc:	460b      	mov	r3, r1
 8006bfe:	4620      	mov	r0, r4
 8006c00:	4629      	mov	r1, r5
 8006c02:	f7f9 fb41 	bl	8000288 <__aeabi_dsub>
 8006c06:	4602      	mov	r2, r0
 8006c08:	460b      	mov	r3, r1
 8006c0a:	4630      	mov	r0, r6
 8006c0c:	4639      	mov	r1, r7
 8006c0e:	f7f9 fb3b 	bl	8000288 <__aeabi_dsub>
 8006c12:	4602      	mov	r2, r0
 8006c14:	460b      	mov	r3, r1
 8006c16:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8006c1a:	e7ba      	b.n	8006b92 <__kernel_cos+0xf2>
 8006c1c:	2000      	movs	r0, #0
 8006c1e:	4904      	ldr	r1, [pc, #16]	; (8006c30 <__kernel_cos+0x190>)
 8006c20:	e7b9      	b.n	8006b96 <__kernel_cos+0xf6>
 8006c22:	bf00      	nop
 8006c24:	f3af 8000 	nop.w
 8006c28:	3fd33332 	.word	0x3fd33332
 8006c2c:	3fe00000 	.word	0x3fe00000
 8006c30:	3ff00000 	.word	0x3ff00000
 8006c34:	3fe90000 	.word	0x3fe90000
 8006c38:	3fd20000 	.word	0x3fd20000
 8006c3c:	be8838d4 	.word	0xbe8838d4
 8006c40:	bda8fae9 	.word	0xbda8fae9
 8006c44:	bdb4b1c4 	.word	0xbdb4b1c4
 8006c48:	3e21ee9e 	.word	0x3e21ee9e
 8006c4c:	809c52ad 	.word	0x809c52ad
 8006c50:	3e927e4f 	.word	0x3e927e4f
 8006c54:	19cb1590 	.word	0x19cb1590
 8006c58:	3efa01a0 	.word	0x3efa01a0
 8006c5c:	16c15177 	.word	0x16c15177
 8006c60:	3f56c16c 	.word	0x3f56c16c
 8006c64:	5555554c 	.word	0x5555554c
 8006c68:	3fa55555 	.word	0x3fa55555
 8006c6c:	00000000 	.word	0x00000000

08006c70 <__kernel_rem_pio2>:
 8006c70:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006c74:	ed2d 8b02 	vpush	{d8}
 8006c78:	f5ad 7d19 	sub.w	sp, sp, #612	; 0x264
 8006c7c:	1ed4      	subs	r4, r2, #3
 8006c7e:	9306      	str	r3, [sp, #24]
 8006c80:	9102      	str	r1, [sp, #8]
 8006c82:	4bc3      	ldr	r3, [pc, #780]	; (8006f90 <__kernel_rem_pio2+0x320>)
 8006c84:	99a4      	ldr	r1, [sp, #656]	; 0x290
 8006c86:	9009      	str	r0, [sp, #36]	; 0x24
 8006c88:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 8006c8c:	9300      	str	r3, [sp, #0]
 8006c8e:	9b06      	ldr	r3, [sp, #24]
 8006c90:	3b01      	subs	r3, #1
 8006c92:	9304      	str	r3, [sp, #16]
 8006c94:	2318      	movs	r3, #24
 8006c96:	fb94 f4f3 	sdiv	r4, r4, r3
 8006c9a:	f06f 0317 	mvn.w	r3, #23
 8006c9e:	ea24 74e4 	bic.w	r4, r4, r4, asr #31
 8006ca2:	fb04 3303 	mla	r3, r4, r3, r3
 8006ca6:	eb03 0a02 	add.w	sl, r3, r2
 8006caa:	9b00      	ldr	r3, [sp, #0]
 8006cac:	9a04      	ldr	r2, [sp, #16]
 8006cae:	ed9f 8bb4 	vldr	d8, [pc, #720]	; 8006f80 <__kernel_rem_pio2+0x310>
 8006cb2:	eb03 0802 	add.w	r8, r3, r2
 8006cb6:	9ba5      	ldr	r3, [sp, #660]	; 0x294
 8006cb8:	1aa7      	subs	r7, r4, r2
 8006cba:	ae20      	add	r6, sp, #128	; 0x80
 8006cbc:	eb03 0987 	add.w	r9, r3, r7, lsl #2
 8006cc0:	2500      	movs	r5, #0
 8006cc2:	4545      	cmp	r5, r8
 8006cc4:	dd13      	ble.n	8006cee <__kernel_rem_pio2+0x7e>
 8006cc6:	ed9f 8bae 	vldr	d8, [pc, #696]	; 8006f80 <__kernel_rem_pio2+0x310>
 8006cca:	f50d 7be0 	add.w	fp, sp, #448	; 0x1c0
 8006cce:	2600      	movs	r6, #0
 8006cd0:	9b00      	ldr	r3, [sp, #0]
 8006cd2:	429e      	cmp	r6, r3
 8006cd4:	dc32      	bgt.n	8006d3c <__kernel_rem_pio2+0xcc>
 8006cd6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8006cd8:	9303      	str	r3, [sp, #12]
 8006cda:	9b06      	ldr	r3, [sp, #24]
 8006cdc:	199d      	adds	r5, r3, r6
 8006cde:	ab20      	add	r3, sp, #128	; 0x80
 8006ce0:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8006ce4:	9308      	str	r3, [sp, #32]
 8006ce6:	ec59 8b18 	vmov	r8, r9, d8
 8006cea:	2700      	movs	r7, #0
 8006cec:	e01f      	b.n	8006d2e <__kernel_rem_pio2+0xbe>
 8006cee:	42ef      	cmn	r7, r5
 8006cf0:	d407      	bmi.n	8006d02 <__kernel_rem_pio2+0x92>
 8006cf2:	f859 0025 	ldr.w	r0, [r9, r5, lsl #2]
 8006cf6:	f7f9 fc15 	bl	8000524 <__aeabi_i2d>
 8006cfa:	e8e6 0102 	strd	r0, r1, [r6], #8
 8006cfe:	3501      	adds	r5, #1
 8006d00:	e7df      	b.n	8006cc2 <__kernel_rem_pio2+0x52>
 8006d02:	ec51 0b18 	vmov	r0, r1, d8
 8006d06:	e7f8      	b.n	8006cfa <__kernel_rem_pio2+0x8a>
 8006d08:	9908      	ldr	r1, [sp, #32]
 8006d0a:	9d03      	ldr	r5, [sp, #12]
 8006d0c:	e971 2302 	ldrd	r2, r3, [r1, #-8]!
 8006d10:	9108      	str	r1, [sp, #32]
 8006d12:	e8f5 0102 	ldrd	r0, r1, [r5], #8
 8006d16:	9503      	str	r5, [sp, #12]
 8006d18:	f7f9 fc6a 	bl	80005f0 <__aeabi_dmul>
 8006d1c:	4602      	mov	r2, r0
 8006d1e:	460b      	mov	r3, r1
 8006d20:	4640      	mov	r0, r8
 8006d22:	4649      	mov	r1, r9
 8006d24:	f7f9 fab2 	bl	800028c <__adddf3>
 8006d28:	3701      	adds	r7, #1
 8006d2a:	4680      	mov	r8, r0
 8006d2c:	4689      	mov	r9, r1
 8006d2e:	9b04      	ldr	r3, [sp, #16]
 8006d30:	429f      	cmp	r7, r3
 8006d32:	dde9      	ble.n	8006d08 <__kernel_rem_pio2+0x98>
 8006d34:	e8eb 8902 	strd	r8, r9, [fp], #8
 8006d38:	3601      	adds	r6, #1
 8006d3a:	e7c9      	b.n	8006cd0 <__kernel_rem_pio2+0x60>
 8006d3c:	9b00      	ldr	r3, [sp, #0]
 8006d3e:	9f00      	ldr	r7, [sp, #0]
 8006d40:	aa0c      	add	r2, sp, #48	; 0x30
 8006d42:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8006d46:	930b      	str	r3, [sp, #44]	; 0x2c
 8006d48:	9ba5      	ldr	r3, [sp, #660]	; 0x294
 8006d4a:	eb03 0384 	add.w	r3, r3, r4, lsl #2
 8006d4e:	930a      	str	r3, [sp, #40]	; 0x28
 8006d50:	ab98      	add	r3, sp, #608	; 0x260
 8006d52:	f107 5b00 	add.w	fp, r7, #536870912	; 0x20000000
 8006d56:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 8006d5a:	f10b 3bff 	add.w	fp, fp, #4294967295
 8006d5e:	e953 8928 	ldrd	r8, r9, [r3, #-160]	; 0xa0
 8006d62:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 8006d66:	9308      	str	r3, [sp, #32]
 8006d68:	9a08      	ldr	r2, [sp, #32]
 8006d6a:	ab98      	add	r3, sp, #608	; 0x260
 8006d6c:	4413      	add	r3, r2
 8006d6e:	f1a3 0b98 	sub.w	fp, r3, #152	; 0x98
 8006d72:	2600      	movs	r6, #0
 8006d74:	1bbb      	subs	r3, r7, r6
 8006d76:	2b00      	cmp	r3, #0
 8006d78:	dc77      	bgt.n	8006e6a <__kernel_rem_pio2+0x1fa>
 8006d7a:	ec49 8b10 	vmov	d0, r8, r9
 8006d7e:	4650      	mov	r0, sl
 8006d80:	f000 fc0e 	bl	80075a0 <scalbn>
 8006d84:	ec55 4b10 	vmov	r4, r5, d0
 8006d88:	2200      	movs	r2, #0
 8006d8a:	f04f 537f 	mov.w	r3, #1069547520	; 0x3fc00000
 8006d8e:	ee10 0a10 	vmov	r0, s0
 8006d92:	4629      	mov	r1, r5
 8006d94:	f7f9 fc2c 	bl	80005f0 <__aeabi_dmul>
 8006d98:	ec41 0b10 	vmov	d0, r0, r1
 8006d9c:	f000 fb7c 	bl	8007498 <floor>
 8006da0:	2200      	movs	r2, #0
 8006da2:	ec51 0b10 	vmov	r0, r1, d0
 8006da6:	4b7b      	ldr	r3, [pc, #492]	; (8006f94 <__kernel_rem_pio2+0x324>)
 8006da8:	f7f9 fc22 	bl	80005f0 <__aeabi_dmul>
 8006dac:	4602      	mov	r2, r0
 8006dae:	460b      	mov	r3, r1
 8006db0:	4620      	mov	r0, r4
 8006db2:	4629      	mov	r1, r5
 8006db4:	f7f9 fa68 	bl	8000288 <__aeabi_dsub>
 8006db8:	460d      	mov	r5, r1
 8006dba:	4604      	mov	r4, r0
 8006dbc:	f7f9 fec8 	bl	8000b50 <__aeabi_d2iz>
 8006dc0:	9003      	str	r0, [sp, #12]
 8006dc2:	f7f9 fbaf 	bl	8000524 <__aeabi_i2d>
 8006dc6:	4602      	mov	r2, r0
 8006dc8:	460b      	mov	r3, r1
 8006dca:	4620      	mov	r0, r4
 8006dcc:	4629      	mov	r1, r5
 8006dce:	f7f9 fa5b 	bl	8000288 <__aeabi_dsub>
 8006dd2:	f1ba 0f00 	cmp.w	sl, #0
 8006dd6:	4680      	mov	r8, r0
 8006dd8:	4689      	mov	r9, r1
 8006dda:	dd6b      	ble.n	8006eb4 <__kernel_rem_pio2+0x244>
 8006ddc:	1e7a      	subs	r2, r7, #1
 8006dde:	ab0c      	add	r3, sp, #48	; 0x30
 8006de0:	f1ca 0118 	rsb	r1, sl, #24
 8006de4:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8006de8:	9c03      	ldr	r4, [sp, #12]
 8006dea:	fa40 f301 	asr.w	r3, r0, r1
 8006dee:	441c      	add	r4, r3
 8006df0:	408b      	lsls	r3, r1
 8006df2:	1ac0      	subs	r0, r0, r3
 8006df4:	ab0c      	add	r3, sp, #48	; 0x30
 8006df6:	9403      	str	r4, [sp, #12]
 8006df8:	f843 0022 	str.w	r0, [r3, r2, lsl #2]
 8006dfc:	f1ca 0317 	rsb	r3, sl, #23
 8006e00:	fa40 fb03 	asr.w	fp, r0, r3
 8006e04:	f1bb 0f00 	cmp.w	fp, #0
 8006e08:	dd62      	ble.n	8006ed0 <__kernel_rem_pio2+0x260>
 8006e0a:	9b03      	ldr	r3, [sp, #12]
 8006e0c:	2200      	movs	r2, #0
 8006e0e:	3301      	adds	r3, #1
 8006e10:	9303      	str	r3, [sp, #12]
 8006e12:	4614      	mov	r4, r2
 8006e14:	f06f 417f 	mvn.w	r1, #4278190080	; 0xff000000
 8006e18:	4297      	cmp	r7, r2
 8006e1a:	f300 8089 	bgt.w	8006f30 <__kernel_rem_pio2+0x2c0>
 8006e1e:	f1ba 0f00 	cmp.w	sl, #0
 8006e22:	dd07      	ble.n	8006e34 <__kernel_rem_pio2+0x1c4>
 8006e24:	f1ba 0f01 	cmp.w	sl, #1
 8006e28:	f000 8096 	beq.w	8006f58 <__kernel_rem_pio2+0x2e8>
 8006e2c:	f1ba 0f02 	cmp.w	sl, #2
 8006e30:	f000 809c 	beq.w	8006f6c <__kernel_rem_pio2+0x2fc>
 8006e34:	f1bb 0f02 	cmp.w	fp, #2
 8006e38:	d14a      	bne.n	8006ed0 <__kernel_rem_pio2+0x260>
 8006e3a:	4642      	mov	r2, r8
 8006e3c:	464b      	mov	r3, r9
 8006e3e:	2000      	movs	r0, #0
 8006e40:	4955      	ldr	r1, [pc, #340]	; (8006f98 <__kernel_rem_pio2+0x328>)
 8006e42:	f7f9 fa21 	bl	8000288 <__aeabi_dsub>
 8006e46:	4680      	mov	r8, r0
 8006e48:	4689      	mov	r9, r1
 8006e4a:	2c00      	cmp	r4, #0
 8006e4c:	d040      	beq.n	8006ed0 <__kernel_rem_pio2+0x260>
 8006e4e:	4650      	mov	r0, sl
 8006e50:	ed9f 0b4d 	vldr	d0, [pc, #308]	; 8006f88 <__kernel_rem_pio2+0x318>
 8006e54:	f000 fba4 	bl	80075a0 <scalbn>
 8006e58:	4640      	mov	r0, r8
 8006e5a:	4649      	mov	r1, r9
 8006e5c:	ec53 2b10 	vmov	r2, r3, d0
 8006e60:	f7f9 fa12 	bl	8000288 <__aeabi_dsub>
 8006e64:	4680      	mov	r8, r0
 8006e66:	4689      	mov	r9, r1
 8006e68:	e032      	b.n	8006ed0 <__kernel_rem_pio2+0x260>
 8006e6a:	2200      	movs	r2, #0
 8006e6c:	4b4b      	ldr	r3, [pc, #300]	; (8006f9c <__kernel_rem_pio2+0x32c>)
 8006e6e:	4640      	mov	r0, r8
 8006e70:	4649      	mov	r1, r9
 8006e72:	f7f9 fbbd 	bl	80005f0 <__aeabi_dmul>
 8006e76:	f7f9 fe6b 	bl	8000b50 <__aeabi_d2iz>
 8006e7a:	f7f9 fb53 	bl	8000524 <__aeabi_i2d>
 8006e7e:	2200      	movs	r2, #0
 8006e80:	4b47      	ldr	r3, [pc, #284]	; (8006fa0 <__kernel_rem_pio2+0x330>)
 8006e82:	4604      	mov	r4, r0
 8006e84:	460d      	mov	r5, r1
 8006e86:	f7f9 fbb3 	bl	80005f0 <__aeabi_dmul>
 8006e8a:	4602      	mov	r2, r0
 8006e8c:	460b      	mov	r3, r1
 8006e8e:	4640      	mov	r0, r8
 8006e90:	4649      	mov	r1, r9
 8006e92:	f7f9 f9f9 	bl	8000288 <__aeabi_dsub>
 8006e96:	f7f9 fe5b 	bl	8000b50 <__aeabi_d2iz>
 8006e9a:	ab0c      	add	r3, sp, #48	; 0x30
 8006e9c:	4629      	mov	r1, r5
 8006e9e:	f843 0026 	str.w	r0, [r3, r6, lsl #2]
 8006ea2:	e97b 2302 	ldrd	r2, r3, [fp, #-8]!
 8006ea6:	4620      	mov	r0, r4
 8006ea8:	f7f9 f9f0 	bl	800028c <__adddf3>
 8006eac:	3601      	adds	r6, #1
 8006eae:	4680      	mov	r8, r0
 8006eb0:	4689      	mov	r9, r1
 8006eb2:	e75f      	b.n	8006d74 <__kernel_rem_pio2+0x104>
 8006eb4:	d106      	bne.n	8006ec4 <__kernel_rem_pio2+0x254>
 8006eb6:	1e7b      	subs	r3, r7, #1
 8006eb8:	aa0c      	add	r2, sp, #48	; 0x30
 8006eba:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8006ebe:	ea4f 5be0 	mov.w	fp, r0, asr #23
 8006ec2:	e79f      	b.n	8006e04 <__kernel_rem_pio2+0x194>
 8006ec4:	2200      	movs	r2, #0
 8006ec6:	4b37      	ldr	r3, [pc, #220]	; (8006fa4 <__kernel_rem_pio2+0x334>)
 8006ec8:	f7f9 fe18 	bl	8000afc <__aeabi_dcmpge>
 8006ecc:	bb68      	cbnz	r0, 8006f2a <__kernel_rem_pio2+0x2ba>
 8006ece:	4683      	mov	fp, r0
 8006ed0:	2200      	movs	r2, #0
 8006ed2:	2300      	movs	r3, #0
 8006ed4:	4640      	mov	r0, r8
 8006ed6:	4649      	mov	r1, r9
 8006ed8:	f7f9 fdf2 	bl	8000ac0 <__aeabi_dcmpeq>
 8006edc:	2800      	cmp	r0, #0
 8006ede:	f000 80c1 	beq.w	8007064 <__kernel_rem_pio2+0x3f4>
 8006ee2:	1e7c      	subs	r4, r7, #1
 8006ee4:	4623      	mov	r3, r4
 8006ee6:	2200      	movs	r2, #0
 8006ee8:	9900      	ldr	r1, [sp, #0]
 8006eea:	428b      	cmp	r3, r1
 8006eec:	da5c      	bge.n	8006fa8 <__kernel_rem_pio2+0x338>
 8006eee:	2a00      	cmp	r2, #0
 8006ef0:	f040 808b 	bne.w	800700a <__kernel_rem_pio2+0x39a>
 8006ef4:	2401      	movs	r4, #1
 8006ef6:	f06f 0203 	mvn.w	r2, #3
 8006efa:	fb02 f304 	mul.w	r3, r2, r4
 8006efe:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8006f00:	58cb      	ldr	r3, [r1, r3]
 8006f02:	2b00      	cmp	r3, #0
 8006f04:	d056      	beq.n	8006fb4 <__kernel_rem_pio2+0x344>
 8006f06:	9b08      	ldr	r3, [sp, #32]
 8006f08:	aa98      	add	r2, sp, #608	; 0x260
 8006f0a:	4413      	add	r3, r2
 8006f0c:	f1a3 0b90 	sub.w	fp, r3, #144	; 0x90
 8006f10:	9b06      	ldr	r3, [sp, #24]
 8006f12:	19dd      	adds	r5, r3, r7
 8006f14:	ab20      	add	r3, sp, #128	; 0x80
 8006f16:	eb03 05c5 	add.w	r5, r3, r5, lsl #3
 8006f1a:	19e3      	adds	r3, r4, r7
 8006f1c:	1c7e      	adds	r6, r7, #1
 8006f1e:	9303      	str	r3, [sp, #12]
 8006f20:	9b03      	ldr	r3, [sp, #12]
 8006f22:	429e      	cmp	r6, r3
 8006f24:	dd48      	ble.n	8006fb8 <__kernel_rem_pio2+0x348>
 8006f26:	461f      	mov	r7, r3
 8006f28:	e712      	b.n	8006d50 <__kernel_rem_pio2+0xe0>
 8006f2a:	f04f 0b02 	mov.w	fp, #2
 8006f2e:	e76c      	b.n	8006e0a <__kernel_rem_pio2+0x19a>
 8006f30:	ab0c      	add	r3, sp, #48	; 0x30
 8006f32:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8006f36:	b94c      	cbnz	r4, 8006f4c <__kernel_rem_pio2+0x2dc>
 8006f38:	b12b      	cbz	r3, 8006f46 <__kernel_rem_pio2+0x2d6>
 8006f3a:	a80c      	add	r0, sp, #48	; 0x30
 8006f3c:	f1c3 7380 	rsb	r3, r3, #16777216	; 0x1000000
 8006f40:	f840 3022 	str.w	r3, [r0, r2, lsl #2]
 8006f44:	2301      	movs	r3, #1
 8006f46:	3201      	adds	r2, #1
 8006f48:	461c      	mov	r4, r3
 8006f4a:	e765      	b.n	8006e18 <__kernel_rem_pio2+0x1a8>
 8006f4c:	a80c      	add	r0, sp, #48	; 0x30
 8006f4e:	1acb      	subs	r3, r1, r3
 8006f50:	f840 3022 	str.w	r3, [r0, r2, lsl #2]
 8006f54:	4623      	mov	r3, r4
 8006f56:	e7f6      	b.n	8006f46 <__kernel_rem_pio2+0x2d6>
 8006f58:	1e7a      	subs	r2, r7, #1
 8006f5a:	ab0c      	add	r3, sp, #48	; 0x30
 8006f5c:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8006f60:	f3c3 0316 	ubfx	r3, r3, #0, #23
 8006f64:	a90c      	add	r1, sp, #48	; 0x30
 8006f66:	f841 3022 	str.w	r3, [r1, r2, lsl #2]
 8006f6a:	e763      	b.n	8006e34 <__kernel_rem_pio2+0x1c4>
 8006f6c:	1e7a      	subs	r2, r7, #1
 8006f6e:	ab0c      	add	r3, sp, #48	; 0x30
 8006f70:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8006f74:	f3c3 0315 	ubfx	r3, r3, #0, #22
 8006f78:	e7f4      	b.n	8006f64 <__kernel_rem_pio2+0x2f4>
 8006f7a:	bf00      	nop
 8006f7c:	f3af 8000 	nop.w
	...
 8006f8c:	3ff00000 	.word	0x3ff00000
 8006f90:	08008438 	.word	0x08008438
 8006f94:	40200000 	.word	0x40200000
 8006f98:	3ff00000 	.word	0x3ff00000
 8006f9c:	3e700000 	.word	0x3e700000
 8006fa0:	41700000 	.word	0x41700000
 8006fa4:	3fe00000 	.word	0x3fe00000
 8006fa8:	a90c      	add	r1, sp, #48	; 0x30
 8006faa:	f851 1023 	ldr.w	r1, [r1, r3, lsl #2]
 8006fae:	3b01      	subs	r3, #1
 8006fb0:	430a      	orrs	r2, r1
 8006fb2:	e799      	b.n	8006ee8 <__kernel_rem_pio2+0x278>
 8006fb4:	3401      	adds	r4, #1
 8006fb6:	e7a0      	b.n	8006efa <__kernel_rem_pio2+0x28a>
 8006fb8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8006fba:	f853 0026 	ldr.w	r0, [r3, r6, lsl #2]
 8006fbe:	f7f9 fab1 	bl	8000524 <__aeabi_i2d>
 8006fc2:	e8e5 0102 	strd	r0, r1, [r5], #8
 8006fc6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8006fc8:	9508      	str	r5, [sp, #32]
 8006fca:	461c      	mov	r4, r3
 8006fcc:	2700      	movs	r7, #0
 8006fce:	f04f 0800 	mov.w	r8, #0
 8006fd2:	f04f 0900 	mov.w	r9, #0
 8006fd6:	9b04      	ldr	r3, [sp, #16]
 8006fd8:	429f      	cmp	r7, r3
 8006fda:	dd03      	ble.n	8006fe4 <__kernel_rem_pio2+0x374>
 8006fdc:	e8eb 8902 	strd	r8, r9, [fp], #8
 8006fe0:	3601      	adds	r6, #1
 8006fe2:	e79d      	b.n	8006f20 <__kernel_rem_pio2+0x2b0>
 8006fe4:	9908      	ldr	r1, [sp, #32]
 8006fe6:	e971 2302 	ldrd	r2, r3, [r1, #-8]!
 8006fea:	9108      	str	r1, [sp, #32]
 8006fec:	e8f4 0102 	ldrd	r0, r1, [r4], #8
 8006ff0:	f7f9 fafe 	bl	80005f0 <__aeabi_dmul>
 8006ff4:	4602      	mov	r2, r0
 8006ff6:	460b      	mov	r3, r1
 8006ff8:	4640      	mov	r0, r8
 8006ffa:	4649      	mov	r1, r9
 8006ffc:	f7f9 f946 	bl	800028c <__adddf3>
 8007000:	3701      	adds	r7, #1
 8007002:	4680      	mov	r8, r0
 8007004:	4689      	mov	r9, r1
 8007006:	e7e6      	b.n	8006fd6 <__kernel_rem_pio2+0x366>
 8007008:	3c01      	subs	r4, #1
 800700a:	ab0c      	add	r3, sp, #48	; 0x30
 800700c:	f1aa 0a18 	sub.w	sl, sl, #24
 8007010:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
 8007014:	2b00      	cmp	r3, #0
 8007016:	d0f7      	beq.n	8007008 <__kernel_rem_pio2+0x398>
 8007018:	4650      	mov	r0, sl
 800701a:	ed9f 0bb5 	vldr	d0, [pc, #724]	; 80072f0 <__kernel_rem_pio2+0x680>
 800701e:	f000 fabf 	bl	80075a0 <scalbn>
 8007022:	00e5      	lsls	r5, r4, #3
 8007024:	ab98      	add	r3, sp, #608	; 0x260
 8007026:	eb03 0905 	add.w	r9, r3, r5
 800702a:	ec57 6b10 	vmov	r6, r7, d0
 800702e:	f1a9 0998 	sub.w	r9, r9, #152	; 0x98
 8007032:	46a0      	mov	r8, r4
 8007034:	f1b8 0f00 	cmp.w	r8, #0
 8007038:	da4d      	bge.n	80070d6 <__kernel_rem_pio2+0x466>
 800703a:	ed9f 8baf 	vldr	d8, [pc, #700]	; 80072f8 <__kernel_rem_pio2+0x688>
 800703e:	f50d 7a90 	add.w	sl, sp, #288	; 0x120
 8007042:	2300      	movs	r3, #0
 8007044:	9304      	str	r3, [sp, #16]
 8007046:	4657      	mov	r7, sl
 8007048:	9b04      	ldr	r3, [sp, #16]
 800704a:	ebb4 0903 	subs.w	r9, r4, r3
 800704e:	d476      	bmi.n	800713e <__kernel_rem_pio2+0x4ce>
 8007050:	4bab      	ldr	r3, [pc, #684]	; (8007300 <__kernel_rem_pio2+0x690>)
 8007052:	461e      	mov	r6, r3
 8007054:	ab70      	add	r3, sp, #448	; 0x1c0
 8007056:	eb03 09c9 	add.w	r9, r3, r9, lsl #3
 800705a:	ed8d 8b06 	vstr	d8, [sp, #24]
 800705e:	f04f 0800 	mov.w	r8, #0
 8007062:	e05e      	b.n	8007122 <__kernel_rem_pio2+0x4b2>
 8007064:	f1ca 0000 	rsb	r0, sl, #0
 8007068:	ec49 8b10 	vmov	d0, r8, r9
 800706c:	f000 fa98 	bl	80075a0 <scalbn>
 8007070:	ec55 4b10 	vmov	r4, r5, d0
 8007074:	2200      	movs	r2, #0
 8007076:	4ba3      	ldr	r3, [pc, #652]	; (8007304 <__kernel_rem_pio2+0x694>)
 8007078:	ee10 0a10 	vmov	r0, s0
 800707c:	4629      	mov	r1, r5
 800707e:	f7f9 fd3d 	bl	8000afc <__aeabi_dcmpge>
 8007082:	b1f8      	cbz	r0, 80070c4 <__kernel_rem_pio2+0x454>
 8007084:	2200      	movs	r2, #0
 8007086:	4ba0      	ldr	r3, [pc, #640]	; (8007308 <__kernel_rem_pio2+0x698>)
 8007088:	4620      	mov	r0, r4
 800708a:	4629      	mov	r1, r5
 800708c:	f7f9 fab0 	bl	80005f0 <__aeabi_dmul>
 8007090:	f7f9 fd5e 	bl	8000b50 <__aeabi_d2iz>
 8007094:	4606      	mov	r6, r0
 8007096:	f7f9 fa45 	bl	8000524 <__aeabi_i2d>
 800709a:	2200      	movs	r2, #0
 800709c:	4b99      	ldr	r3, [pc, #612]	; (8007304 <__kernel_rem_pio2+0x694>)
 800709e:	f7f9 faa7 	bl	80005f0 <__aeabi_dmul>
 80070a2:	460b      	mov	r3, r1
 80070a4:	4602      	mov	r2, r0
 80070a6:	4629      	mov	r1, r5
 80070a8:	4620      	mov	r0, r4
 80070aa:	f7f9 f8ed 	bl	8000288 <__aeabi_dsub>
 80070ae:	f7f9 fd4f 	bl	8000b50 <__aeabi_d2iz>
 80070b2:	1c7c      	adds	r4, r7, #1
 80070b4:	ab0c      	add	r3, sp, #48	; 0x30
 80070b6:	f10a 0a18 	add.w	sl, sl, #24
 80070ba:	f843 0027 	str.w	r0, [r3, r7, lsl #2]
 80070be:	f843 6024 	str.w	r6, [r3, r4, lsl #2]
 80070c2:	e7a9      	b.n	8007018 <__kernel_rem_pio2+0x3a8>
 80070c4:	4620      	mov	r0, r4
 80070c6:	4629      	mov	r1, r5
 80070c8:	f7f9 fd42 	bl	8000b50 <__aeabi_d2iz>
 80070cc:	ab0c      	add	r3, sp, #48	; 0x30
 80070ce:	463c      	mov	r4, r7
 80070d0:	f843 0027 	str.w	r0, [r3, r7, lsl #2]
 80070d4:	e7a0      	b.n	8007018 <__kernel_rem_pio2+0x3a8>
 80070d6:	ab0c      	add	r3, sp, #48	; 0x30
 80070d8:	f853 0028 	ldr.w	r0, [r3, r8, lsl #2]
 80070dc:	f7f9 fa22 	bl	8000524 <__aeabi_i2d>
 80070e0:	4632      	mov	r2, r6
 80070e2:	463b      	mov	r3, r7
 80070e4:	f7f9 fa84 	bl	80005f0 <__aeabi_dmul>
 80070e8:	2200      	movs	r2, #0
 80070ea:	e969 0102 	strd	r0, r1, [r9, #-8]!
 80070ee:	4b86      	ldr	r3, [pc, #536]	; (8007308 <__kernel_rem_pio2+0x698>)
 80070f0:	4630      	mov	r0, r6
 80070f2:	4639      	mov	r1, r7
 80070f4:	f7f9 fa7c 	bl	80005f0 <__aeabi_dmul>
 80070f8:	f108 38ff 	add.w	r8, r8, #4294967295
 80070fc:	4606      	mov	r6, r0
 80070fe:	460f      	mov	r7, r1
 8007100:	e798      	b.n	8007034 <__kernel_rem_pio2+0x3c4>
 8007102:	e8f9 2302 	ldrd	r2, r3, [r9], #8
 8007106:	e8f6 0102 	ldrd	r0, r1, [r6], #8
 800710a:	f7f9 fa71 	bl	80005f0 <__aeabi_dmul>
 800710e:	4602      	mov	r2, r0
 8007110:	460b      	mov	r3, r1
 8007112:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8007116:	f7f9 f8b9 	bl	800028c <__adddf3>
 800711a:	e9cd 0106 	strd	r0, r1, [sp, #24]
 800711e:	f108 0801 	add.w	r8, r8, #1
 8007122:	9b00      	ldr	r3, [sp, #0]
 8007124:	4598      	cmp	r8, r3
 8007126:	dc02      	bgt.n	800712e <__kernel_rem_pio2+0x4be>
 8007128:	9b04      	ldr	r3, [sp, #16]
 800712a:	4598      	cmp	r8, r3
 800712c:	dde9      	ble.n	8007102 <__kernel_rem_pio2+0x492>
 800712e:	9b04      	ldr	r3, [sp, #16]
 8007130:	ed9d 7b06 	vldr	d7, [sp, #24]
 8007134:	3301      	adds	r3, #1
 8007136:	ecaa 7b02 	vstmia	sl!, {d7}
 800713a:	9304      	str	r3, [sp, #16]
 800713c:	e784      	b.n	8007048 <__kernel_rem_pio2+0x3d8>
 800713e:	9ba4      	ldr	r3, [sp, #656]	; 0x290
 8007140:	2b03      	cmp	r3, #3
 8007142:	d85d      	bhi.n	8007200 <__kernel_rem_pio2+0x590>
 8007144:	e8df f003 	tbb	[pc, r3]
 8007148:	0226264b 	.word	0x0226264b
 800714c:	ab98      	add	r3, sp, #608	; 0x260
 800714e:	441d      	add	r5, r3
 8007150:	f5a5 759c 	sub.w	r5, r5, #312	; 0x138
 8007154:	462e      	mov	r6, r5
 8007156:	46a2      	mov	sl, r4
 8007158:	f1ba 0f00 	cmp.w	sl, #0
 800715c:	dc6e      	bgt.n	800723c <__kernel_rem_pio2+0x5cc>
 800715e:	462e      	mov	r6, r5
 8007160:	46a2      	mov	sl, r4
 8007162:	f1ba 0f01 	cmp.w	sl, #1
 8007166:	f300 808a 	bgt.w	800727e <__kernel_rem_pio2+0x60e>
 800716a:	2000      	movs	r0, #0
 800716c:	2100      	movs	r1, #0
 800716e:	2c01      	cmp	r4, #1
 8007170:	f300 80a6 	bgt.w	80072c0 <__kernel_rem_pio2+0x650>
 8007174:	f1bb 0f00 	cmp.w	fp, #0
 8007178:	f040 80a8 	bne.w	80072cc <__kernel_rem_pio2+0x65c>
 800717c:	e9dd 2348 	ldrd	r2, r3, [sp, #288]	; 0x120
 8007180:	9c02      	ldr	r4, [sp, #8]
 8007182:	e9c4 2300 	strd	r2, r3, [r4]
 8007186:	e9dd 234a 	ldrd	r2, r3, [sp, #296]	; 0x128
 800718a:	e9c4 0104 	strd	r0, r1, [r4, #16]
 800718e:	e9c4 2302 	strd	r2, r3, [r4, #8]
 8007192:	e035      	b.n	8007200 <__kernel_rem_pio2+0x590>
 8007194:	3508      	adds	r5, #8
 8007196:	ab48      	add	r3, sp, #288	; 0x120
 8007198:	441d      	add	r5, r3
 800719a:	4626      	mov	r6, r4
 800719c:	2000      	movs	r0, #0
 800719e:	2100      	movs	r1, #0
 80071a0:	2e00      	cmp	r6, #0
 80071a2:	da3c      	bge.n	800721e <__kernel_rem_pio2+0x5ae>
 80071a4:	f1bb 0f00 	cmp.w	fp, #0
 80071a8:	d03f      	beq.n	800722a <__kernel_rem_pio2+0x5ba>
 80071aa:	4602      	mov	r2, r0
 80071ac:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 80071b0:	9d02      	ldr	r5, [sp, #8]
 80071b2:	e9c5 2300 	strd	r2, r3, [r5]
 80071b6:	4602      	mov	r2, r0
 80071b8:	460b      	mov	r3, r1
 80071ba:	e9dd 0148 	ldrd	r0, r1, [sp, #288]	; 0x120
 80071be:	f7f9 f863 	bl	8000288 <__aeabi_dsub>
 80071c2:	ae4a      	add	r6, sp, #296	; 0x128
 80071c4:	2501      	movs	r5, #1
 80071c6:	42ac      	cmp	r4, r5
 80071c8:	da32      	bge.n	8007230 <__kernel_rem_pio2+0x5c0>
 80071ca:	f1bb 0f00 	cmp.w	fp, #0
 80071ce:	d002      	beq.n	80071d6 <__kernel_rem_pio2+0x566>
 80071d0:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 80071d4:	4619      	mov	r1, r3
 80071d6:	9b02      	ldr	r3, [sp, #8]
 80071d8:	e9c3 0102 	strd	r0, r1, [r3, #8]
 80071dc:	e010      	b.n	8007200 <__kernel_rem_pio2+0x590>
 80071de:	ab98      	add	r3, sp, #608	; 0x260
 80071e0:	441d      	add	r5, r3
 80071e2:	f5a5 759c 	sub.w	r5, r5, #312	; 0x138
 80071e6:	2000      	movs	r0, #0
 80071e8:	2100      	movs	r1, #0
 80071ea:	2c00      	cmp	r4, #0
 80071ec:	da11      	bge.n	8007212 <__kernel_rem_pio2+0x5a2>
 80071ee:	f1bb 0f00 	cmp.w	fp, #0
 80071f2:	d002      	beq.n	80071fa <__kernel_rem_pio2+0x58a>
 80071f4:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 80071f8:	4619      	mov	r1, r3
 80071fa:	9b02      	ldr	r3, [sp, #8]
 80071fc:	e9c3 0100 	strd	r0, r1, [r3]
 8007200:	9b03      	ldr	r3, [sp, #12]
 8007202:	f003 0007 	and.w	r0, r3, #7
 8007206:	f50d 7d19 	add.w	sp, sp, #612	; 0x264
 800720a:	ecbd 8b02 	vpop	{d8}
 800720e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007212:	e975 2302 	ldrd	r2, r3, [r5, #-8]!
 8007216:	f7f9 f839 	bl	800028c <__adddf3>
 800721a:	3c01      	subs	r4, #1
 800721c:	e7e5      	b.n	80071ea <__kernel_rem_pio2+0x57a>
 800721e:	e975 2302 	ldrd	r2, r3, [r5, #-8]!
 8007222:	f7f9 f833 	bl	800028c <__adddf3>
 8007226:	3e01      	subs	r6, #1
 8007228:	e7ba      	b.n	80071a0 <__kernel_rem_pio2+0x530>
 800722a:	4602      	mov	r2, r0
 800722c:	460b      	mov	r3, r1
 800722e:	e7bf      	b.n	80071b0 <__kernel_rem_pio2+0x540>
 8007230:	e8f6 2302 	ldrd	r2, r3, [r6], #8
 8007234:	f7f9 f82a 	bl	800028c <__adddf3>
 8007238:	3501      	adds	r5, #1
 800723a:	e7c4      	b.n	80071c6 <__kernel_rem_pio2+0x556>
 800723c:	ed16 7b02 	vldr	d7, [r6, #-8]
 8007240:	e956 8904 	ldrd	r8, r9, [r6, #-16]
 8007244:	ec53 2b17 	vmov	r2, r3, d7
 8007248:	4640      	mov	r0, r8
 800724a:	4649      	mov	r1, r9
 800724c:	ed8d 7b00 	vstr	d7, [sp]
 8007250:	f7f9 f81c 	bl	800028c <__adddf3>
 8007254:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8007258:	4602      	mov	r2, r0
 800725a:	460b      	mov	r3, r1
 800725c:	4640      	mov	r0, r8
 800725e:	4649      	mov	r1, r9
 8007260:	f7f9 f812 	bl	8000288 <__aeabi_dsub>
 8007264:	e9dd 2300 	ldrd	r2, r3, [sp]
 8007268:	f7f9 f810 	bl	800028c <__adddf3>
 800726c:	ed9d 7b04 	vldr	d7, [sp, #16]
 8007270:	e966 0102 	strd	r0, r1, [r6, #-8]!
 8007274:	f10a 3aff 	add.w	sl, sl, #4294967295
 8007278:	ed06 7b02 	vstr	d7, [r6, #-8]
 800727c:	e76c      	b.n	8007158 <__kernel_rem_pio2+0x4e8>
 800727e:	ed16 7b02 	vldr	d7, [r6, #-8]
 8007282:	e956 8904 	ldrd	r8, r9, [r6, #-16]
 8007286:	ec53 2b17 	vmov	r2, r3, d7
 800728a:	4640      	mov	r0, r8
 800728c:	4649      	mov	r1, r9
 800728e:	ed8d 7b00 	vstr	d7, [sp]
 8007292:	f7f8 fffb 	bl	800028c <__adddf3>
 8007296:	e9cd 0104 	strd	r0, r1, [sp, #16]
 800729a:	4602      	mov	r2, r0
 800729c:	460b      	mov	r3, r1
 800729e:	4640      	mov	r0, r8
 80072a0:	4649      	mov	r1, r9
 80072a2:	f7f8 fff1 	bl	8000288 <__aeabi_dsub>
 80072a6:	e9dd 2300 	ldrd	r2, r3, [sp]
 80072aa:	f7f8 ffef 	bl	800028c <__adddf3>
 80072ae:	ed9d 7b04 	vldr	d7, [sp, #16]
 80072b2:	e966 0102 	strd	r0, r1, [r6, #-8]!
 80072b6:	f10a 3aff 	add.w	sl, sl, #4294967295
 80072ba:	ed06 7b02 	vstr	d7, [r6, #-8]
 80072be:	e750      	b.n	8007162 <__kernel_rem_pio2+0x4f2>
 80072c0:	e975 2302 	ldrd	r2, r3, [r5, #-8]!
 80072c4:	f7f8 ffe2 	bl	800028c <__adddf3>
 80072c8:	3c01      	subs	r4, #1
 80072ca:	e750      	b.n	800716e <__kernel_rem_pio2+0x4fe>
 80072cc:	9a02      	ldr	r2, [sp, #8]
 80072ce:	683b      	ldr	r3, [r7, #0]
 80072d0:	6013      	str	r3, [r2, #0]
 80072d2:	687b      	ldr	r3, [r7, #4]
 80072d4:	6110      	str	r0, [r2, #16]
 80072d6:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 80072da:	6053      	str	r3, [r2, #4]
 80072dc:	68bb      	ldr	r3, [r7, #8]
 80072de:	6093      	str	r3, [r2, #8]
 80072e0:	68fb      	ldr	r3, [r7, #12]
 80072e2:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 80072e6:	60d3      	str	r3, [r2, #12]
 80072e8:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 80072ec:	6153      	str	r3, [r2, #20]
 80072ee:	e787      	b.n	8007200 <__kernel_rem_pio2+0x590>
 80072f0:	00000000 	.word	0x00000000
 80072f4:	3ff00000 	.word	0x3ff00000
	...
 8007300:	080083f8 	.word	0x080083f8
 8007304:	41700000 	.word	0x41700000
 8007308:	3e700000 	.word	0x3e700000
 800730c:	00000000 	.word	0x00000000

08007310 <__kernel_sin>:
 8007310:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007314:	ec55 4b10 	vmov	r4, r5, d0
 8007318:	b085      	sub	sp, #20
 800731a:	f025 4300 	bic.w	r3, r5, #2147483648	; 0x80000000
 800731e:	f1b3 5f79 	cmp.w	r3, #1044381696	; 0x3e400000
 8007322:	ed8d 1b00 	vstr	d1, [sp]
 8007326:	9002      	str	r0, [sp, #8]
 8007328:	da06      	bge.n	8007338 <__kernel_sin+0x28>
 800732a:	ee10 0a10 	vmov	r0, s0
 800732e:	4629      	mov	r1, r5
 8007330:	f7f9 fc0e 	bl	8000b50 <__aeabi_d2iz>
 8007334:	2800      	cmp	r0, #0
 8007336:	d051      	beq.n	80073dc <__kernel_sin+0xcc>
 8007338:	4622      	mov	r2, r4
 800733a:	462b      	mov	r3, r5
 800733c:	4620      	mov	r0, r4
 800733e:	4629      	mov	r1, r5
 8007340:	f7f9 f956 	bl	80005f0 <__aeabi_dmul>
 8007344:	4682      	mov	sl, r0
 8007346:	468b      	mov	fp, r1
 8007348:	4602      	mov	r2, r0
 800734a:	460b      	mov	r3, r1
 800734c:	4620      	mov	r0, r4
 800734e:	4629      	mov	r1, r5
 8007350:	f7f9 f94e 	bl	80005f0 <__aeabi_dmul>
 8007354:	a341      	add	r3, pc, #260	; (adr r3, 800745c <__kernel_sin+0x14c>)
 8007356:	e9d3 2300 	ldrd	r2, r3, [r3]
 800735a:	4680      	mov	r8, r0
 800735c:	4689      	mov	r9, r1
 800735e:	4650      	mov	r0, sl
 8007360:	4659      	mov	r1, fp
 8007362:	f7f9 f945 	bl	80005f0 <__aeabi_dmul>
 8007366:	a33f      	add	r3, pc, #252	; (adr r3, 8007464 <__kernel_sin+0x154>)
 8007368:	e9d3 2300 	ldrd	r2, r3, [r3]
 800736c:	f7f8 ff8c 	bl	8000288 <__aeabi_dsub>
 8007370:	4652      	mov	r2, sl
 8007372:	465b      	mov	r3, fp
 8007374:	f7f9 f93c 	bl	80005f0 <__aeabi_dmul>
 8007378:	a33c      	add	r3, pc, #240	; (adr r3, 800746c <__kernel_sin+0x15c>)
 800737a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800737e:	f7f8 ff85 	bl	800028c <__adddf3>
 8007382:	4652      	mov	r2, sl
 8007384:	465b      	mov	r3, fp
 8007386:	f7f9 f933 	bl	80005f0 <__aeabi_dmul>
 800738a:	a33a      	add	r3, pc, #232	; (adr r3, 8007474 <__kernel_sin+0x164>)
 800738c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007390:	f7f8 ff7a 	bl	8000288 <__aeabi_dsub>
 8007394:	4652      	mov	r2, sl
 8007396:	465b      	mov	r3, fp
 8007398:	f7f9 f92a 	bl	80005f0 <__aeabi_dmul>
 800739c:	a337      	add	r3, pc, #220	; (adr r3, 800747c <__kernel_sin+0x16c>)
 800739e:	e9d3 2300 	ldrd	r2, r3, [r3]
 80073a2:	f7f8 ff73 	bl	800028c <__adddf3>
 80073a6:	9b02      	ldr	r3, [sp, #8]
 80073a8:	4606      	mov	r6, r0
 80073aa:	460f      	mov	r7, r1
 80073ac:	b9db      	cbnz	r3, 80073e6 <__kernel_sin+0xd6>
 80073ae:	4602      	mov	r2, r0
 80073b0:	460b      	mov	r3, r1
 80073b2:	4650      	mov	r0, sl
 80073b4:	4659      	mov	r1, fp
 80073b6:	f7f9 f91b 	bl	80005f0 <__aeabi_dmul>
 80073ba:	a325      	add	r3, pc, #148	; (adr r3, 8007450 <__kernel_sin+0x140>)
 80073bc:	e9d3 2300 	ldrd	r2, r3, [r3]
 80073c0:	f7f8 ff62 	bl	8000288 <__aeabi_dsub>
 80073c4:	4642      	mov	r2, r8
 80073c6:	464b      	mov	r3, r9
 80073c8:	f7f9 f912 	bl	80005f0 <__aeabi_dmul>
 80073cc:	4602      	mov	r2, r0
 80073ce:	460b      	mov	r3, r1
 80073d0:	4620      	mov	r0, r4
 80073d2:	4629      	mov	r1, r5
 80073d4:	f7f8 ff5a 	bl	800028c <__adddf3>
 80073d8:	4604      	mov	r4, r0
 80073da:	460d      	mov	r5, r1
 80073dc:	ec45 4b10 	vmov	d0, r4, r5
 80073e0:	b005      	add	sp, #20
 80073e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80073e6:	2200      	movs	r2, #0
 80073e8:	4b1b      	ldr	r3, [pc, #108]	; (8007458 <__kernel_sin+0x148>)
 80073ea:	e9dd 0100 	ldrd	r0, r1, [sp]
 80073ee:	f7f9 f8ff 	bl	80005f0 <__aeabi_dmul>
 80073f2:	4632      	mov	r2, r6
 80073f4:	e9cd 0102 	strd	r0, r1, [sp, #8]
 80073f8:	463b      	mov	r3, r7
 80073fa:	4640      	mov	r0, r8
 80073fc:	4649      	mov	r1, r9
 80073fe:	f7f9 f8f7 	bl	80005f0 <__aeabi_dmul>
 8007402:	4602      	mov	r2, r0
 8007404:	460b      	mov	r3, r1
 8007406:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 800740a:	f7f8 ff3d 	bl	8000288 <__aeabi_dsub>
 800740e:	4652      	mov	r2, sl
 8007410:	465b      	mov	r3, fp
 8007412:	f7f9 f8ed 	bl	80005f0 <__aeabi_dmul>
 8007416:	e9dd 2300 	ldrd	r2, r3, [sp]
 800741a:	f7f8 ff35 	bl	8000288 <__aeabi_dsub>
 800741e:	a30c      	add	r3, pc, #48	; (adr r3, 8007450 <__kernel_sin+0x140>)
 8007420:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007424:	4606      	mov	r6, r0
 8007426:	460f      	mov	r7, r1
 8007428:	4640      	mov	r0, r8
 800742a:	4649      	mov	r1, r9
 800742c:	f7f9 f8e0 	bl	80005f0 <__aeabi_dmul>
 8007430:	4602      	mov	r2, r0
 8007432:	460b      	mov	r3, r1
 8007434:	4630      	mov	r0, r6
 8007436:	4639      	mov	r1, r7
 8007438:	f7f8 ff28 	bl	800028c <__adddf3>
 800743c:	4602      	mov	r2, r0
 800743e:	460b      	mov	r3, r1
 8007440:	4620      	mov	r0, r4
 8007442:	4629      	mov	r1, r5
 8007444:	f7f8 ff20 	bl	8000288 <__aeabi_dsub>
 8007448:	e7c6      	b.n	80073d8 <__kernel_sin+0xc8>
 800744a:	bf00      	nop
 800744c:	f3af 8000 	nop.w
 8007450:	55555549 	.word	0x55555549
 8007454:	3fc55555 	.word	0x3fc55555
 8007458:	3fe00000 	.word	0x3fe00000
 800745c:	5acfd57c 	.word	0x5acfd57c
 8007460:	3de5d93a 	.word	0x3de5d93a
 8007464:	8a2b9ceb 	.word	0x8a2b9ceb
 8007468:	3e5ae5e6 	.word	0x3e5ae5e6
 800746c:	57b1fe7d 	.word	0x57b1fe7d
 8007470:	3ec71de3 	.word	0x3ec71de3
 8007474:	19c161d5 	.word	0x19c161d5
 8007478:	3f2a01a0 	.word	0x3f2a01a0
 800747c:	1110f8a6 	.word	0x1110f8a6
 8007480:	3f811111 	.word	0x3f811111

08007484 <fabs>:
 8007484:	ec53 2b10 	vmov	r2, r3, d0
 8007488:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 800748c:	ec43 2b10 	vmov	d0, r2, r3
 8007490:	4770      	bx	lr
 8007492:	0000      	movs	r0, r0
 8007494:	0000      	movs	r0, r0
	...

08007498 <floor>:
 8007498:	ec51 0b10 	vmov	r0, r1, d0
 800749c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80074a0:	f3c1 570a 	ubfx	r7, r1, #20, #11
 80074a4:	f2a7 36ff 	subw	r6, r7, #1023	; 0x3ff
 80074a8:	2e13      	cmp	r6, #19
 80074aa:	ee10 8a10 	vmov	r8, s0
 80074ae:	460c      	mov	r4, r1
 80074b0:	ee10 5a10 	vmov	r5, s0
 80074b4:	dc35      	bgt.n	8007522 <floor+0x8a>
 80074b6:	2e00      	cmp	r6, #0
 80074b8:	da17      	bge.n	80074ea <floor+0x52>
 80074ba:	a335      	add	r3, pc, #212	; (adr r3, 8007590 <floor+0xf8>)
 80074bc:	e9d3 2300 	ldrd	r2, r3, [r3]
 80074c0:	f7f8 fee4 	bl	800028c <__adddf3>
 80074c4:	2200      	movs	r2, #0
 80074c6:	2300      	movs	r3, #0
 80074c8:	f7f9 fb22 	bl	8000b10 <__aeabi_dcmpgt>
 80074cc:	b150      	cbz	r0, 80074e4 <floor+0x4c>
 80074ce:	2c00      	cmp	r4, #0
 80074d0:	da5a      	bge.n	8007588 <floor+0xf0>
 80074d2:	f024 4300 	bic.w	r3, r4, #2147483648	; 0x80000000
 80074d6:	ea53 0308 	orrs.w	r3, r3, r8
 80074da:	4b2f      	ldr	r3, [pc, #188]	; (8007598 <floor+0x100>)
 80074dc:	f04f 0500 	mov.w	r5, #0
 80074e0:	bf18      	it	ne
 80074e2:	461c      	movne	r4, r3
 80074e4:	4621      	mov	r1, r4
 80074e6:	4628      	mov	r0, r5
 80074e8:	e025      	b.n	8007536 <floor+0x9e>
 80074ea:	4f2c      	ldr	r7, [pc, #176]	; (800759c <floor+0x104>)
 80074ec:	4137      	asrs	r7, r6
 80074ee:	ea01 0307 	and.w	r3, r1, r7
 80074f2:	4303      	orrs	r3, r0
 80074f4:	d01f      	beq.n	8007536 <floor+0x9e>
 80074f6:	a326      	add	r3, pc, #152	; (adr r3, 8007590 <floor+0xf8>)
 80074f8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80074fc:	f7f8 fec6 	bl	800028c <__adddf3>
 8007500:	2200      	movs	r2, #0
 8007502:	2300      	movs	r3, #0
 8007504:	f7f9 fb04 	bl	8000b10 <__aeabi_dcmpgt>
 8007508:	2800      	cmp	r0, #0
 800750a:	d0eb      	beq.n	80074e4 <floor+0x4c>
 800750c:	2c00      	cmp	r4, #0
 800750e:	bfbe      	ittt	lt
 8007510:	f44f 1380 	movlt.w	r3, #1048576	; 0x100000
 8007514:	fa43 f606 	asrlt.w	r6, r3, r6
 8007518:	19a4      	addlt	r4, r4, r6
 800751a:	ea24 0407 	bic.w	r4, r4, r7
 800751e:	2500      	movs	r5, #0
 8007520:	e7e0      	b.n	80074e4 <floor+0x4c>
 8007522:	2e33      	cmp	r6, #51	; 0x33
 8007524:	dd0b      	ble.n	800753e <floor+0xa6>
 8007526:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 800752a:	d104      	bne.n	8007536 <floor+0x9e>
 800752c:	ee10 2a10 	vmov	r2, s0
 8007530:	460b      	mov	r3, r1
 8007532:	f7f8 feab 	bl	800028c <__adddf3>
 8007536:	ec41 0b10 	vmov	d0, r0, r1
 800753a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800753e:	f2a7 4713 	subw	r7, r7, #1043	; 0x413
 8007542:	f04f 33ff 	mov.w	r3, #4294967295
 8007546:	fa23 f707 	lsr.w	r7, r3, r7
 800754a:	4238      	tst	r0, r7
 800754c:	d0f3      	beq.n	8007536 <floor+0x9e>
 800754e:	a310      	add	r3, pc, #64	; (adr r3, 8007590 <floor+0xf8>)
 8007550:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007554:	f7f8 fe9a 	bl	800028c <__adddf3>
 8007558:	2200      	movs	r2, #0
 800755a:	2300      	movs	r3, #0
 800755c:	f7f9 fad8 	bl	8000b10 <__aeabi_dcmpgt>
 8007560:	2800      	cmp	r0, #0
 8007562:	d0bf      	beq.n	80074e4 <floor+0x4c>
 8007564:	2c00      	cmp	r4, #0
 8007566:	da02      	bge.n	800756e <floor+0xd6>
 8007568:	2e14      	cmp	r6, #20
 800756a:	d103      	bne.n	8007574 <floor+0xdc>
 800756c:	3401      	adds	r4, #1
 800756e:	ea25 0507 	bic.w	r5, r5, r7
 8007572:	e7b7      	b.n	80074e4 <floor+0x4c>
 8007574:	2301      	movs	r3, #1
 8007576:	f1c6 0634 	rsb	r6, r6, #52	; 0x34
 800757a:	fa03 f606 	lsl.w	r6, r3, r6
 800757e:	4435      	add	r5, r6
 8007580:	45a8      	cmp	r8, r5
 8007582:	bf88      	it	hi
 8007584:	18e4      	addhi	r4, r4, r3
 8007586:	e7f2      	b.n	800756e <floor+0xd6>
 8007588:	2500      	movs	r5, #0
 800758a:	462c      	mov	r4, r5
 800758c:	e7aa      	b.n	80074e4 <floor+0x4c>
 800758e:	bf00      	nop
 8007590:	8800759c 	.word	0x8800759c
 8007594:	7e37e43c 	.word	0x7e37e43c
 8007598:	bff00000 	.word	0xbff00000
 800759c:	000fffff 	.word	0x000fffff

080075a0 <scalbn>:
 80075a0:	b570      	push	{r4, r5, r6, lr}
 80075a2:	ec55 4b10 	vmov	r4, r5, d0
 80075a6:	f3c5 520a 	ubfx	r2, r5, #20, #11
 80075aa:	4606      	mov	r6, r0
 80075ac:	462b      	mov	r3, r5
 80075ae:	b9b2      	cbnz	r2, 80075de <scalbn+0x3e>
 80075b0:	f025 4300 	bic.w	r3, r5, #2147483648	; 0x80000000
 80075b4:	4323      	orrs	r3, r4
 80075b6:	d03c      	beq.n	8007632 <scalbn+0x92>
 80075b8:	2200      	movs	r2, #0
 80075ba:	4b33      	ldr	r3, [pc, #204]	; (8007688 <scalbn+0xe8>)
 80075bc:	4629      	mov	r1, r5
 80075be:	ee10 0a10 	vmov	r0, s0
 80075c2:	f7f9 f815 	bl	80005f0 <__aeabi_dmul>
 80075c6:	4a31      	ldr	r2, [pc, #196]	; (800768c <scalbn+0xec>)
 80075c8:	4296      	cmp	r6, r2
 80075ca:	4604      	mov	r4, r0
 80075cc:	460d      	mov	r5, r1
 80075ce:	460b      	mov	r3, r1
 80075d0:	da13      	bge.n	80075fa <scalbn+0x5a>
 80075d2:	a329      	add	r3, pc, #164	; (adr r3, 8007678 <scalbn+0xd8>)
 80075d4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80075d8:	f7f9 f80a 	bl	80005f0 <__aeabi_dmul>
 80075dc:	e00a      	b.n	80075f4 <scalbn+0x54>
 80075de:	f240 71ff 	movw	r1, #2047	; 0x7ff
 80075e2:	428a      	cmp	r2, r1
 80075e4:	d10c      	bne.n	8007600 <scalbn+0x60>
 80075e6:	ee10 2a10 	vmov	r2, s0
 80075ea:	462b      	mov	r3, r5
 80075ec:	4620      	mov	r0, r4
 80075ee:	4629      	mov	r1, r5
 80075f0:	f7f8 fe4c 	bl	800028c <__adddf3>
 80075f4:	4604      	mov	r4, r0
 80075f6:	460d      	mov	r5, r1
 80075f8:	e01b      	b.n	8007632 <scalbn+0x92>
 80075fa:	f3c1 520a 	ubfx	r2, r1, #20, #11
 80075fe:	3a36      	subs	r2, #54	; 0x36
 8007600:	4432      	add	r2, r6
 8007602:	f240 71fe 	movw	r1, #2046	; 0x7fe
 8007606:	428a      	cmp	r2, r1
 8007608:	dd0b      	ble.n	8007622 <scalbn+0x82>
 800760a:	ec45 4b11 	vmov	d1, r4, r5
 800760e:	ed9f 0b1c 	vldr	d0, [pc, #112]	; 8007680 <scalbn+0xe0>
 8007612:	f000 f83f 	bl	8007694 <copysign>
 8007616:	a31a      	add	r3, pc, #104	; (adr r3, 8007680 <scalbn+0xe0>)
 8007618:	e9d3 2300 	ldrd	r2, r3, [r3]
 800761c:	ec51 0b10 	vmov	r0, r1, d0
 8007620:	e7da      	b.n	80075d8 <scalbn+0x38>
 8007622:	2a00      	cmp	r2, #0
 8007624:	dd08      	ble.n	8007638 <scalbn+0x98>
 8007626:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 800762a:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
 800762e:	ea43 5502 	orr.w	r5, r3, r2, lsl #20
 8007632:	ec45 4b10 	vmov	d0, r4, r5
 8007636:	bd70      	pop	{r4, r5, r6, pc}
 8007638:	f112 0f35 	cmn.w	r2, #53	; 0x35
 800763c:	da0d      	bge.n	800765a <scalbn+0xba>
 800763e:	f24c 3350 	movw	r3, #50000	; 0xc350
 8007642:	429e      	cmp	r6, r3
 8007644:	ec45 4b11 	vmov	d1, r4, r5
 8007648:	dce1      	bgt.n	800760e <scalbn+0x6e>
 800764a:	ed9f 0b0b 	vldr	d0, [pc, #44]	; 8007678 <scalbn+0xd8>
 800764e:	f000 f821 	bl	8007694 <copysign>
 8007652:	a309      	add	r3, pc, #36	; (adr r3, 8007678 <scalbn+0xd8>)
 8007654:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007658:	e7e0      	b.n	800761c <scalbn+0x7c>
 800765a:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 800765e:	3236      	adds	r2, #54	; 0x36
 8007660:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
 8007664:	ea43 5502 	orr.w	r5, r3, r2, lsl #20
 8007668:	4620      	mov	r0, r4
 800766a:	4629      	mov	r1, r5
 800766c:	2200      	movs	r2, #0
 800766e:	4b08      	ldr	r3, [pc, #32]	; (8007690 <scalbn+0xf0>)
 8007670:	e7b2      	b.n	80075d8 <scalbn+0x38>
 8007672:	bf00      	nop
 8007674:	f3af 8000 	nop.w
 8007678:	c2f8f359 	.word	0xc2f8f359
 800767c:	01a56e1f 	.word	0x01a56e1f
 8007680:	8800759c 	.word	0x8800759c
 8007684:	7e37e43c 	.word	0x7e37e43c
 8007688:	43500000 	.word	0x43500000
 800768c:	ffff3cb0 	.word	0xffff3cb0
 8007690:	3c900000 	.word	0x3c900000

08007694 <copysign>:
 8007694:	ec53 2b10 	vmov	r2, r3, d0
 8007698:	ee11 0a90 	vmov	r0, s3
 800769c:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 80076a0:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
 80076a4:	ea41 0300 	orr.w	r3, r1, r0
 80076a8:	ec43 2b10 	vmov	d0, r2, r3
 80076ac:	4770      	bx	lr
	...

080076b0 <_close>:
 80076b0:	4b02      	ldr	r3, [pc, #8]	; (80076bc <_close+0xc>)
 80076b2:	2258      	movs	r2, #88	; 0x58
 80076b4:	601a      	str	r2, [r3, #0]
 80076b6:	f04f 30ff 	mov.w	r0, #4294967295
 80076ba:	4770      	bx	lr
 80076bc:	200007cc 	.word	0x200007cc

080076c0 <_fstat>:
 80076c0:	4b02      	ldr	r3, [pc, #8]	; (80076cc <_fstat+0xc>)
 80076c2:	2258      	movs	r2, #88	; 0x58
 80076c4:	601a      	str	r2, [r3, #0]
 80076c6:	f04f 30ff 	mov.w	r0, #4294967295
 80076ca:	4770      	bx	lr
 80076cc:	200007cc 	.word	0x200007cc

080076d0 <_isatty>:
 80076d0:	4b02      	ldr	r3, [pc, #8]	; (80076dc <_isatty+0xc>)
 80076d2:	2258      	movs	r2, #88	; 0x58
 80076d4:	601a      	str	r2, [r3, #0]
 80076d6:	2000      	movs	r0, #0
 80076d8:	4770      	bx	lr
 80076da:	bf00      	nop
 80076dc:	200007cc 	.word	0x200007cc

080076e0 <_lseek>:
 80076e0:	4b02      	ldr	r3, [pc, #8]	; (80076ec <_lseek+0xc>)
 80076e2:	2258      	movs	r2, #88	; 0x58
 80076e4:	601a      	str	r2, [r3, #0]
 80076e6:	f04f 30ff 	mov.w	r0, #4294967295
 80076ea:	4770      	bx	lr
 80076ec:	200007cc 	.word	0x200007cc

080076f0 <_read>:
 80076f0:	4b02      	ldr	r3, [pc, #8]	; (80076fc <_read+0xc>)
 80076f2:	2258      	movs	r2, #88	; 0x58
 80076f4:	601a      	str	r2, [r3, #0]
 80076f6:	f04f 30ff 	mov.w	r0, #4294967295
 80076fa:	4770      	bx	lr
 80076fc:	200007cc 	.word	0x200007cc

08007700 <_sbrk>:
 8007700:	4b04      	ldr	r3, [pc, #16]	; (8007714 <_sbrk+0x14>)
 8007702:	6819      	ldr	r1, [r3, #0]
 8007704:	4602      	mov	r2, r0
 8007706:	b909      	cbnz	r1, 800770c <_sbrk+0xc>
 8007708:	4903      	ldr	r1, [pc, #12]	; (8007718 <_sbrk+0x18>)
 800770a:	6019      	str	r1, [r3, #0]
 800770c:	6818      	ldr	r0, [r3, #0]
 800770e:	4402      	add	r2, r0
 8007710:	601a      	str	r2, [r3, #0]
 8007712:	4770      	bx	lr
 8007714:	200006cc 	.word	0x200006cc
 8007718:	200007d0 	.word	0x200007d0

0800771c <_init>:
 800771c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800771e:	bf00      	nop
 8007720:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8007722:	bc08      	pop	{r3}
 8007724:	469e      	mov	lr, r3
 8007726:	4770      	bx	lr

08007728 <_fini>:
 8007728:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800772a:	bf00      	nop
 800772c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800772e:	bc08      	pop	{r3}
 8007730:	469e      	mov	lr, r3
 8007732:	4770      	bx	lr
